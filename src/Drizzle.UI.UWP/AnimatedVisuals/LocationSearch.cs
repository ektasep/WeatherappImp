//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile LocationSearch.json
//       
//       Input file:
//           LocationSearch.json (15714 bytes created 12:54+05:30 Aug 25 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// __________________________________________________________________________
// |       Object stats       | UAP v11 count | UAP v8 count | UAP v7 count |
// |__________________________|_______________|______________|______________|
// | All CompositionObjects   |           140 |          114 |           86 |
// |--------------------------+---------------+--------------+--------------|
// | Expression animators     |            26 |           22 |           16 |
// | KeyFrame animators       |            18 |           14 |           11 |
// | Reference parameters     |            25 |           21 |           17 |
// | Expression operations    |             0 |            0 |            0 |
// |--------------------------+---------------+--------------+--------------|
// | Animated brushes         |             - |            - |            - |
// | Animated gradient stops  |             - |            - |            - |
// | ExpressionAnimations     |             2 |            1 |            1 |
// | PathKeyFrameAnimations   |             4 |            - |            - |
// |--------------------------+---------------+--------------+--------------|
// | ContainerVisuals         |             3 |            3 |            1 |
// | ShapeVisuals             |             3 |            3 |            2 |
// |--------------------------+---------------+--------------+--------------|
// | ContainerShapes          |             2 |            2 |            2 |
// | CompositionSpriteShapes  |             4 |            4 |            3 |
// |--------------------------+---------------+--------------+--------------|
// | Brushes                  |             4 |            4 |            1 |
// | Gradient stops           |             - |            - |            - |
// | CompositionVisualSurface |             2 |            2 |            - |
// --------------------------------------------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        For_animation 2
    // Frame rate:  28 fps
    // Frame count: 70
    // Duration:    2500.0 mS
    sealed class LocationSearch
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 2.500 seconds.
        internal const long c_durationTicks = 25000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (LocationSearch_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                var res = 
                    new LocationSearch_AnimatedVisual_UAPv11(
                        compositor
                        );
                    return res;
            }

            if (LocationSearch_AnimatedVisual_UAPv8.IsRuntimeCompatible())
            {
                var res = 
                    new LocationSearch_AnimatedVisual_UAPv8(
                        compositor
                        );
                    return res;
            }

            if (LocationSearch_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res = 
                    new LocationSearch_AnimatedVisual_UAPv7(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 70d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 28d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 70d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class LocationSearch_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 25000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Orange;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPath _path_3;
            CompositionPath _path_4;
            CompositionPath _path_5;
            CompositionPath _path_6;
            CompositionPath _path_7;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _scalarAnimation_1_to_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-5.79899979F, 10.5F), new Vector2(-10.5F, 5.79899979F), new Vector2(-10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-10.5F, -5.79899979F), new Vector2(-5.79899979F, -10.5F), new Vector2(0F, -10.5F));
                    builder.AddCubicBezier(new Vector2(5.79899979F, -10.5F), new Vector2(10.5F, -5.79899979F), new Vector2(10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(10.5F, 5.79899979F), new Vector2(5.79899979F, 10.5F), new Vector2(0F, 10.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 14F));
                    builder.AddCubicBezier(new Vector2(-2.42000008F, 14F), new Vector2(-10.8889999F, 3.00699997F), new Vector2(-10.8889999F, -3.04399991F));
                    builder.AddCubicBezier(new Vector2(-10.8889999F, -9.09500027F), new Vector2(-6.01399994F, -14F), new Vector2(0F, -14F));
                    builder.AddCubicBezier(new Vector2(6.01399994F, -14F), new Vector2(10.8889999F, -9.09500027F), new Vector2(10.8889999F, -3.04399991F));
                    builder.AddCubicBezier(new Vector2(10.8889999F, 3.00699997F), new Vector2(2.42000008F, 14F), new Vector2(0F, 14F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0.123000003F, -5.10900021F));
                    builder.AddCubicBezier(new Vector2(-2.81299996F, -5.10900021F), new Vector2(-5.25699997F, -2.7809999F), new Vector2(-5.37099981F, 0.178000003F));
                    builder.AddCubicBezier(new Vector2(-5.48799992F, 3.20799994F), new Vector2(-3.11800003F, 5.76999998F), new Vector2(-0.0879999995F, 5.88700008F));
                    builder.AddCubicBezier(new Vector2(2.93700004F, 6.00400019F), new Vector2(5.50400019F, 3.63400006F), new Vector2(5.62099981F, 0.603999972F));
                    builder.AddCubicBezier(new Vector2(5.73799992F, -2.42600012F), new Vector2(3.36800003F, -4.98699999F), new Vector2(0.338F, -5.10500002F));
                    builder.AddCubicBezier(new Vector2(0.266000003F, -5.1079998F), new Vector2(0.194000006F, -5.10900021F), new Vector2(0.123000003F, -5.10900021F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0.123000003F, -4.29799986F));
                    builder.AddCubicBezier(new Vector2(-2.38400006F, -4.29799986F), new Vector2(-4.47100019F, -2.30999994F), new Vector2(-4.56899977F, 0.216999993F));
                    builder.AddCubicBezier(new Vector2(-4.66900015F, 2.80500007F), new Vector2(-2.64499998F, 4.99300003F), new Vector2(-0.057F, 5.09299994F));
                    builder.AddCubicBezier(new Vector2(2.52600002F, 5.19299984F), new Vector2(4.71899986F, 3.16899991F), new Vector2(4.81899977F, 0.58099997F));
                    builder.AddCubicBezier(new Vector2(4.91900015F, -2.00699997F), new Vector2(2.89499998F, -4.19399977F), new Vector2(0.307000011F, -4.29500008F));
                    builder.AddCubicBezier(new Vector2(0.246000007F, -4.29699993F), new Vector2(0.184F, -4.29799986F), new Vector2(0.123000003F, -4.29799986F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0.116999999F, -6.20300007F));
                    builder.AddCubicBezier(new Vector2(-2.81900001F, -6.20300007F), new Vector2(-5.26300001F, -3.875F), new Vector2(-5.37699986F, -0.916000009F));
                    builder.AddCubicBezier(new Vector2(-5.49399996F, 2.11400008F), new Vector2(-3.12400007F, 4.67600012F), new Vector2(-0.0939999968F, 4.79300022F));
                    builder.AddCubicBezier(new Vector2(2.93099999F, 4.90999985F), new Vector2(5.49800014F, 2.53999996F), new Vector2(5.61499977F, -0.49000001F));
                    builder.AddCubicBezier(new Vector2(5.73199987F, -3.51999998F), new Vector2(3.36199999F, -6.08099985F), new Vector2(0.331999987F, -6.19899988F));
                    builder.AddCubicBezier(new Vector2(0.25999999F, -6.20200014F), new Vector2(0.187999994F, -6.20300007F), new Vector2(0.116999999F, -6.20300007F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0.119999997F, -7.67199993F));
                    builder.AddCubicBezier(new Vector2(-2.81599998F, -7.67199993F), new Vector2(-5.26000023F, -5.34399986F), new Vector2(-5.37400007F, -2.38499999F));
                    builder.AddCubicBezier(new Vector2(-5.49100018F, 0.644999981F), new Vector2(-3.11999989F, 3.20700002F), new Vector2(-0.0900000036F, 3.32399988F));
                    builder.AddCubicBezier(new Vector2(2.93499994F, 3.44099998F), new Vector2(5.50199986F, 1.07099998F), new Vector2(5.61899996F, -1.95899999F));
                    builder.AddCubicBezier(new Vector2(5.73600006F, -4.98899984F), new Vector2(3.36500001F, -7.55000019F), new Vector2(0.335000008F, -7.66800022F));
                    builder.AddCubicBezier(new Vector2(0.263000011F, -7.671F), new Vector2(0.191F, -7.67199993F), new Vector2(0.119999997F, -7.67199993F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddCubicBezier(new Vector2(13.0979996F, 9.69699955F), new Vector2(18.1669998F, 2.03600001F), new Vector2(18.1669998F, 2.03600001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddCubicBezier(new Vector2(13.0979996F, 9.69699955F), new Vector2(13.1689997F, 9.40499973F), new Vector2(13.1689997F, 9.40499973F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: handle2
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_8()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddCubicBezier(new Vector2(13.0979996F, 9.69699955F), new Vector2(18.8929996F, 0.981999993F), new Vector2(18.8929996F, 0.981999993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: handle2
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_9()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddCubicBezier(new Vector2(13.0979996F, 9.69699955F), new Vector2(18.2119999F, 1.94700003F), new Vector2(18.2119999F, 1.94700003F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_Orange()
            {
                return _colorBrush_Orange = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xEA, 0x55, 0x3C));
            }

            // Layer aggregator
            // Layer: handle
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: handle2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_3());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_0());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_1());
                return result;
            }

            CompositionPath Path_2()
            {
                var result = _path_2 = new CompositionPath(Geometry_2());
                return result;
            }

            CompositionPath Path_3()
            {
                var result = _path_3 = new CompositionPath(Geometry_3());
                return result;
            }

            CompositionPath Path_4()
            {
                var result = _path_4 = new CompositionPath(Geometry_4());
                return result;
            }

            CompositionPath Path_5()
            {
                var result = _path_5 = new CompositionPath(Geometry_5());
                return result;
            }

            CompositionPath Path_6()
            {
                var result = _path_6 = new CompositionPath(Geometry_6());
                return result;
            }

            CompositionPath Path_7()
            {
                var result = _path_7 = new CompositionPath(Geometry_7());
                return result;
            }

            // - Shape tree root for layer: mapmarker1
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - Masks
            CompositionPathGeometry PathGeometry_1()
            {
                var result = _c.CreatePathGeometry();
                result.StartAnimation("Path", PathKeyFrameAnimation_1());
                var controller = result.TryGetAnimationController("Path");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress*0.9998605", "_", _root);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_2(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_3(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: mapmarker1
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ColorBrush_Orange();
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_1_to_1(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = _colorBrush_Orange;
                StartProgressBoundAnimation(result, "Scale.X", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_0, _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Orange;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_92_to_495(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.RotationAngleInDegrees = 92F;
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Orange;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(144F, 144F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(144F, 144F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mapmarker1
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                var children = result.Children;
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_2());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t1", t1ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t2", t2ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 0.666999996F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Shape tree root for layer: mapmarker1
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, _path_0, HoldThenStepEasingFunction());
                // Frame 21.
                result.InsertKeyFrame(0.300000012F, Path_1(), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.557142854F, _path_1, CubicBezierEasingFunction_1());
                // Frame 43.
                result.InsertKeyFrame(0.614285707F, _path_0, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // - - Masks
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), _holdThenStepEasingFunction);
                // Frame 6.
                result.InsertKeyFrame(0.0857023299F, _path_2, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F)));
                // Frame 10.
                result.InsertKeyFrame(0.142837211F, Path_3(), _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.242823273F, _path_3, _cubicBezierEasingFunction_0);
                // Frame 20.
                result.InsertKeyFrame(0.285674423F, Path_4(), _cubicBezierEasingFunction_0);
                // Frame 22.
                result.InsertKeyFrame(0.314241886F, Path_5(), _cubicBezierEasingFunction_0);
                // Frame 37.99.
                result.InsertKeyFrame(0.542781413F, _path_5, _cubicBezierEasingFunction_1);
                // Frame 39.99.
                result.InsertKeyFrame(0.571348846F, _path_4, _cubicBezierEasingFunction_1);
                // Frame 42.99.
                result.InsertKeyFrame(0.614200056F, _path_3, _cubicBezierEasingFunction_0);
                // Frame 47.
                result.InsertKeyFrame(0.671477735F, _path_3, _cubicBezierEasingFunction_0);
                // Frame 51.
                result.InsertKeyFrame(0.728612661F, _path_2, _cubicBezierEasingFunction_0);
                // Frame 70.
                result.InsertKeyFrame(1F, _path_2, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: handle
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_6(), _stepThenHoldEasingFunction);
                // Frame 10.
                result.InsertKeyFrame(0.142857149F, _path_6, _holdThenStepEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.200000003F, Path_7(), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: handle2
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, _path_7, _stepThenHoldEasingFunction);
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, _path_7, _holdThenStepEasingFunction);
                // Frame 51.01.
                result.InsertKeyFrame(0.728714287F, new CompositionPath(Geometry_8()), _cubicBezierEasingFunction_0);
                // Frame 53.01.
                result.InsertKeyFrame(0.757282376F, new CompositionPath(Geometry_9()), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_92_to_495()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 92F, _holdThenStepEasingFunction);
                // Frame 5.
                result.InsertKeyFrame(0.0714285746F, 92F, _cubicBezierEasingFunction_3);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 452F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 0.940999985F)));
                // Frame 20.
                result.InsertKeyFrame(0.285714298F, 495F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.061999999F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_1_to_1()
            {
                // Frame 0.
                var result = _scalarAnimation_1_to_1 = CreateScalarKeyFrameAnimation(0F, 1F, _stepThenHoldEasingFunction);
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, 1F, _holdThenStepEasingFunction);
                // Frame 11.
                result.InsertKeyFrame(0.157142863F, 1.14999998F, _cubicBezierEasingFunction_0);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 1.14999998F, CubicBezierEasingFunction_2());
                // Frame 19.
                result.InsertKeyFrame(0.271428585F, 1F, _cubicBezierEasingFunction_0);
                // Frame 41.
                result.InsertKeyFrame(0.585714281F, 1F, CubicBezierEasingFunction_3());
                // Frame 43.
                result.InsertKeyFrame(0.614285707F, 1.14999998F, _cubicBezierEasingFunction_1);
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, 1.14999998F, _cubicBezierEasingFunction_2);
                // Frame 51.01.
                result.InsertKeyFrame(0.728710949F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 18.
                var result = CreateScalarKeyFrameAnimation(0.257142901F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 21.
                result.InsertKeyFrame(0.299999982F, 1F, _cubicBezierEasingFunction_0);
                // Frame 39.
                result.InsertKeyFrame(0.557142913F, 0F, _stepThenHoldEasingFunction);
                // Frame 42.
                result.InsertKeyFrame(0.599999964F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 55.02.
                var result = CreateScalarKeyFrameAnimation(0.786000073F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 57.02.
                result.InsertKeyFrame(0.814571381F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 12.
                var result = CreateScalarKeyFrameAnimation(0.171428591F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 15.
                result.InsertKeyFrame(0.214285702F, 1F, _cubicBezierEasingFunction_1);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857201F, 0F, _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442517F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: mapmarker1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                var shapes = result.Shapes;
                // Layer: handle
                shapes.Add(ContainerShape_0());
                // Layer: handle2
                shapes.Add(ContainerShape_1());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(144F, 144F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(72F, 71.8909988F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, new Vector2(72F, 71.8909988F), _cubicBezierEasingFunction_3);
                // Frame 10.
                result.InsertKeyFrame(0.142857149F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertKeyFrame(0.214285716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_2);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(72F, 75.3909988F), _cubicBezierEasingFunction_0);
                // Frame 21.
                result.InsertExpressionKeyFrame(0.299999982F, "Pow(1-_.t0,3)*Vector2(72,75.391)+(3*Square(1-_.t0)*_.t0*Vector2(72,76.23475))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,73.15092))+(Pow(_.t0,3)*Vector2(72,72.703))", _stepThenHoldEasingFunction);
                // Frame 21.
                result.InsertKeyFrame(0.300000012F, new Vector2(72F, 72.7030029F), _stepThenHoldEasingFunction);
                // Frame 39.
                result.InsertKeyFrame(0.557142854F, new Vector2(72F, 72.7030029F), _cubicBezierEasingFunction_3);
                // Frame 42.
                result.InsertExpressionKeyFrame(0.599999964F, "Pow(1-_.t0,3)*Vector2(72,72.703)+(3*Square(1-_.t0)*_.t0*Vector2(72,73.15092))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,76.23475))+(Pow(_.t0,3)*Vector2(72,75.391))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857134F, new Vector2(72F, 75.3909988F), _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857194F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 51.02.
                result.InsertKeyFrame(0.72885716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_2);
                // Frame 55.02.
                result.InsertKeyFrame(0.786000013F, new Vector2(72F, 73.7969971F), _cubicBezierEasingFunction_0);
                // Frame 57.02.
                result.InsertExpressionKeyFrame(0.814571381F, "Pow(1-_.t1,3)*Vector2(72,73.797)+(3*Square(1-_.t1)*_.t1*Vector2(72,74.50533))+(3*(1-_.t1)*Square(_.t1)*Vector2(72,72.20871))+(Pow(_.t1,3)*Vector2(72,71.891))", _stepThenHoldEasingFunction);
                // Frame 57.02.
                result.InsertKeyFrame(0.81457144F, new Vector2(72F, 71.8909988F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 55.2099991F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 8.
                result.InsertKeyFrame(0.114285715F, new Vector2(64.3610001F, 55.2099991F), _cubicBezierEasingFunction_3);
                // Frame 12.
                result.InsertKeyFrame(0.171428576F, new Vector2(64.3610001F, 45.2729988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertExpressionKeyFrame(0.214285702F, "Pow(1-_.t2,3)*Vector2(64.361,45.273)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,44.5855))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,48.74125))+(Pow(_.t2,3)*Vector2(64.361,51.085))", _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142901F, new Vector2(64.3610001F, 59.3349991F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, new Vector2(64.3610001F, 51.0849991F), _holdThenStepEasingFunction);
                // Frame 48.01.
                result.InsertKeyFrame(0.685857117F, new Vector2(64.3610001F, 51.0849991F), _cubicBezierEasingFunction_2);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857141F, new Vector2(64.3610001F, 57.1170006F), _cubicBezierEasingFunction_0);
                // Frame 57.01.
                result.InsertExpressionKeyFrame(0.81442517F, "Pow(1-_.t2,3)*Vector2(64.361,57.117)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,57.8045))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,55.52771))+(Pow(_.t2,3)*Vector2(64.361,55.21))", _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442523F, new Vector2(64.3610001F, 55.2099991F), _stepThenHoldEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 46.
                result.InsertKeyFrame(0.657142878F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            internal LocationSearch_AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(144F, 144F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class LocationSearch_AnimatedVisual_UAPv8 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 25000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Black;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _scalarAnimation_1_to_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - Shape tree root for layer: mapmarker1
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-5.79899979F, 10.5F), new Vector2(-10.5F, 5.79899979F), new Vector2(-10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-10.5F, -5.79899979F), new Vector2(-5.79899979F, -10.5F), new Vector2(0F, -10.5F));
                    builder.AddCubicBezier(new Vector2(5.79899979F, -10.5F), new Vector2(10.5F, -5.79899979F), new Vector2(10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(10.5F, 5.79899979F), new Vector2(5.79899979F, 10.5F), new Vector2(0F, 10.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Masks
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0.123000003F, -5.10900021F));
                    builder.AddCubicBezier(new Vector2(-2.81299996F, -5.10900021F), new Vector2(-5.25699997F, -2.7809999F), new Vector2(-5.37099981F, 0.178000003F));
                    builder.AddCubicBezier(new Vector2(-5.48799992F, 3.20799994F), new Vector2(-3.11800003F, 5.76999998F), new Vector2(-0.0879999995F, 5.88700008F));
                    builder.AddCubicBezier(new Vector2(2.93700004F, 6.00400019F), new Vector2(5.50400019F, 3.63400006F), new Vector2(5.62099981F, 0.603999972F));
                    builder.AddCubicBezier(new Vector2(5.73799992F, -2.42600012F), new Vector2(3.36800003F, -4.98699999F), new Vector2(0.338F, -5.10500002F));
                    builder.AddCubicBezier(new Vector2(0.266000003F, -5.1079998F), new Vector2(0.194000006F, -5.10900021F), new Vector2(0.123000003F, -5.10900021F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: handle
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddLine(new Vector2(18.1669998F, 2.03600001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: handle2
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddLine(new Vector2(13.1689997F, 9.40499973F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // Layer aggregator
            // Layer: handle
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: handle2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_3());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - Shape tree root for layer: mapmarker1
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - Masks
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // Shape tree root for layer: mapmarker1
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ColorBrush_Black();
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_1_to_1(), RootProgress());
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = _colorBrush_Black;
                StartProgressBoundAnimation(result, "Scale.X", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_0, _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_92_to_495(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.RotationAngleInDegrees = 92F;
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(144F, 144F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(144F, 144F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: mapmarker1
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                var children = result.Children;
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_2());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t1", t1ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t2", t2ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 0.666999996F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_92_to_495()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 92F, _holdThenStepEasingFunction);
                // Frame 5.
                result.InsertKeyFrame(0.0714285746F, 92F, _cubicBezierEasingFunction_2);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 452F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 0.940999985F)));
                // Frame 20.
                result.InsertKeyFrame(0.285714298F, 495F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.061999999F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_1_to_1()
            {
                // Frame 0.
                var result = _scalarAnimation_1_to_1 = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, 1F, HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.157142863F, 1.14999998F, CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 1.14999998F, CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.271428585F, 1F, _cubicBezierEasingFunction_0);
                // Frame 41.
                result.InsertKeyFrame(0.585714281F, 1F, CubicBezierEasingFunction_2());
                // Frame 43.
                result.InsertKeyFrame(0.614285707F, 1.14999998F, CubicBezierEasingFunction_3());
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, 1.14999998F, _cubicBezierEasingFunction_1);
                // Frame 51.01.
                result.InsertKeyFrame(0.728710949F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 18.
                var result = CreateScalarKeyFrameAnimation(0.257142901F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 21.
                result.InsertKeyFrame(0.299999982F, 1F, _cubicBezierEasingFunction_0);
                // Frame 39.
                result.InsertKeyFrame(0.557142913F, 0F, _stepThenHoldEasingFunction);
                // Frame 42.
                result.InsertKeyFrame(0.599999964F, 1F, _cubicBezierEasingFunction_3);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 55.02.
                var result = CreateScalarKeyFrameAnimation(0.786000073F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 57.02.
                result.InsertKeyFrame(0.814571381F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 12.
                var result = CreateScalarKeyFrameAnimation(0.171428591F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 15.
                result.InsertKeyFrame(0.214285702F, 1F, _cubicBezierEasingFunction_3);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857201F, 0F, _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442517F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: mapmarker1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                var shapes = result.Shapes;
                // Layer: handle
                shapes.Add(ContainerShape_0());
                // Layer: handle2
                shapes.Add(ContainerShape_1());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(144F, 144F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(72F, 71.8909988F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, new Vector2(72F, 71.8909988F), _cubicBezierEasingFunction_2);
                // Frame 10.
                result.InsertKeyFrame(0.142857149F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertKeyFrame(0.214285716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_1);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(72F, 75.3909988F), _cubicBezierEasingFunction_0);
                // Frame 21.
                result.InsertExpressionKeyFrame(0.299999982F, "Pow(1-_.t0,3)*Vector2(72,75.391)+(3*Square(1-_.t0)*_.t0*Vector2(72,76.23475))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,73.15092))+(Pow(_.t0,3)*Vector2(72,72.703))", _stepThenHoldEasingFunction);
                // Frame 21.
                result.InsertKeyFrame(0.300000012F, new Vector2(72F, 72.7030029F), _stepThenHoldEasingFunction);
                // Frame 39.
                result.InsertKeyFrame(0.557142854F, new Vector2(72F, 72.7030029F), _cubicBezierEasingFunction_2);
                // Frame 42.
                result.InsertExpressionKeyFrame(0.599999964F, "Pow(1-_.t0,3)*Vector2(72,72.703)+(3*Square(1-_.t0)*_.t0*Vector2(72,73.15092))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,76.23475))+(Pow(_.t0,3)*Vector2(72,75.391))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857134F, new Vector2(72F, 75.3909988F), _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857194F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 51.02.
                result.InsertKeyFrame(0.72885716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_1);
                // Frame 55.02.
                result.InsertKeyFrame(0.786000013F, new Vector2(72F, 73.7969971F), _cubicBezierEasingFunction_0);
                // Frame 57.02.
                result.InsertExpressionKeyFrame(0.814571381F, "Pow(1-_.t1,3)*Vector2(72,73.797)+(3*Square(1-_.t1)*_.t1*Vector2(72,74.50533))+(3*(1-_.t1)*Square(_.t1)*Vector2(72,72.20871))+(Pow(_.t1,3)*Vector2(72,71.891))", _stepThenHoldEasingFunction);
                // Frame 57.02.
                result.InsertKeyFrame(0.81457144F, new Vector2(72F, 71.8909988F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 55.2099991F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 8.
                result.InsertKeyFrame(0.114285715F, new Vector2(64.3610001F, 55.2099991F), _cubicBezierEasingFunction_2);
                // Frame 12.
                result.InsertKeyFrame(0.171428576F, new Vector2(64.3610001F, 45.2729988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertExpressionKeyFrame(0.214285702F, "Pow(1-_.t2,3)*Vector2(64.361,45.273)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,44.5855))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,48.74125))+(Pow(_.t2,3)*Vector2(64.361,51.085))", _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142901F, new Vector2(64.3610001F, 59.3349991F), _cubicBezierEasingFunction_3);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, new Vector2(64.3610001F, 51.0849991F), _holdThenStepEasingFunction);
                // Frame 48.01.
                result.InsertKeyFrame(0.685857117F, new Vector2(64.3610001F, 51.0849991F), _cubicBezierEasingFunction_1);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857141F, new Vector2(64.3610001F, 57.1170006F), _cubicBezierEasingFunction_0);
                // Frame 57.01.
                result.InsertExpressionKeyFrame(0.81442517F, "Pow(1-_.t2,3)*Vector2(64.361,57.117)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,57.8045))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,55.52771))+(Pow(_.t2,3)*Vector2(64.361,55.21))", _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442523F, new Vector2(64.3610001F, 55.2099991F), _stepThenHoldEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 46.
                result.InsertKeyFrame(0.657142878F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            internal LocationSearch_AnimatedVisual_UAPv8(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(144F, 144F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 8);
            }
        }

        sealed class LocationSearch_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 25000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Black;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _scalarAnimation_1_to_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            // - - - Shape tree root for layer: mapmarker1
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 10.5F));
                    builder.AddCubicBezier(new Vector2(-5.79899979F, 10.5F), new Vector2(-10.5F, 5.79899979F), new Vector2(-10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(-10.5F, -5.79899979F), new Vector2(-5.79899979F, -10.5F), new Vector2(0F, -10.5F));
                    builder.AddCubicBezier(new Vector2(5.79899979F, -10.5F), new Vector2(10.5F, -5.79899979F), new Vector2(10.5F, 0F));
                    builder.AddCubicBezier(new Vector2(10.5F, 5.79899979F), new Vector2(5.79899979F, 10.5F), new Vector2(0F, 10.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: handle
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddLine(new Vector2(18.1669998F, 2.03600001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: handle2
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(13.0979996F, 9.69699955F));
                    builder.AddLine(new Vector2(13.1689997F, 9.40499973F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // Layer aggregator
            // Layer: handle
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: handle2
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            // - Shape tree root for layer: mapmarker1
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // Shape tree root for layer: mapmarker1
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.FillBrush = ColorBrush_Black();
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_1_to_1(), RootProgress());
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_1_to_1, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_92_to_495(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.CenterPoint = new Vector2(7.63899994F, 16.8209991F);
                result.RotationAngleInDegrees = 92F;
                result.Scale = new Vector2(1.10146999F, 0.840810001F);
                result.StrokeBrush = _colorBrush_Black;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                var children = result.Children;
                // Shape tree root for layer: mapmarker1
                children.InsertAtTop(ShapeVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_1());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t1", t1ScalarAnimation_0_to_1(), _rootProgress);
                StartProgressBoundAnimation(result.Properties, "t2", t2ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 0.666999996F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_92_to_495()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 92F, _holdThenStepEasingFunction);
                // Frame 5.
                result.InsertKeyFrame(0.0714285746F, 92F, _cubicBezierEasingFunction_2);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 452F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 0.940999985F)));
                // Frame 20.
                result.InsertKeyFrame(0.285714298F, 495F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.061999999F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_1_to_1()
            {
                // Frame 0.
                var result = _scalarAnimation_1_to_1 = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, 1F, HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.157142863F, 1.14999998F, CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, 1.14999998F, CubicBezierEasingFunction_1());
                // Frame 19.
                result.InsertKeyFrame(0.271428585F, 1F, _cubicBezierEasingFunction_0);
                // Frame 41.
                result.InsertKeyFrame(0.585714281F, 1F, CubicBezierEasingFunction_2());
                // Frame 43.
                result.InsertKeyFrame(0.614285707F, 1.14999998F, CubicBezierEasingFunction_3());
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, 1.14999998F, _cubicBezierEasingFunction_1);
                // Frame 51.01.
                result.InsertKeyFrame(0.728710949F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 18.
                var result = CreateScalarKeyFrameAnimation(0.257142901F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 21.
                result.InsertKeyFrame(0.299999982F, 1F, _cubicBezierEasingFunction_0);
                // Frame 39.
                result.InsertKeyFrame(0.557142913F, 0F, _stepThenHoldEasingFunction);
                // Frame 42.
                result.InsertKeyFrame(0.599999964F, 1F, _cubicBezierEasingFunction_3);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 55.02.
                var result = CreateScalarKeyFrameAnimation(0.786000073F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 57.02.
                result.InsertKeyFrame(0.814571381F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 12.
                var result = CreateScalarKeyFrameAnimation(0.171428591F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 15.
                result.InsertKeyFrame(0.214285702F, 1F, _cubicBezierEasingFunction_3);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857201F, 0F, _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442517F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: mapmarker1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(144F, 144F);
                var shapes = result.Shapes;
                // Layer: handle
                shapes.Add(ContainerShape_0());
                // Layer: handle2
                shapes.Add(ContainerShape_1());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Shape tree root for layer: mapmarker1
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(72F, 71.8909988F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 6.
                result.InsertKeyFrame(0.0857142881F, new Vector2(72F, 71.8909988F), _cubicBezierEasingFunction_2);
                // Frame 10.
                result.InsertKeyFrame(0.142857149F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertKeyFrame(0.214285716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_1);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(72F, 75.3909988F), _cubicBezierEasingFunction_0);
                // Frame 21.
                result.InsertExpressionKeyFrame(0.299999982F, "Pow(1-_.t0,3)*Vector2(72,75.391)+(3*Square(1-_.t0)*_.t0*Vector2(72,76.23475))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,73.15092))+(Pow(_.t0,3)*Vector2(72,72.703))", _stepThenHoldEasingFunction);
                // Frame 21.
                result.InsertKeyFrame(0.300000012F, new Vector2(72F, 72.7030029F), _stepThenHoldEasingFunction);
                // Frame 39.
                result.InsertKeyFrame(0.557142854F, new Vector2(72F, 72.7030029F), _cubicBezierEasingFunction_2);
                // Frame 42.
                result.InsertExpressionKeyFrame(0.599999964F, "Pow(1-_.t0,3)*Vector2(72,72.703)+(3*Square(1-_.t0)*_.t0*Vector2(72,73.15092))+(3*(1-_.t0)*Square(_.t0)*Vector2(72,76.23475))+(Pow(_.t0,3)*Vector2(72,75.391))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857134F, new Vector2(72F, 75.3909988F), _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.642857194F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_0);
                // Frame 51.02.
                result.InsertKeyFrame(0.72885716F, new Vector2(72F, 67.6409988F), _cubicBezierEasingFunction_1);
                // Frame 55.02.
                result.InsertKeyFrame(0.786000013F, new Vector2(72F, 73.7969971F), _cubicBezierEasingFunction_0);
                // Frame 57.02.
                result.InsertExpressionKeyFrame(0.814571381F, "Pow(1-_.t1,3)*Vector2(72,73.797)+(3*Square(1-_.t1)*_.t1*Vector2(72,74.50533))+(3*(1-_.t1)*Square(_.t1)*Vector2(72,72.20871))+(Pow(_.t1,3)*Vector2(72,71.891))", _stepThenHoldEasingFunction);
                // Frame 57.02.
                result.InsertKeyFrame(0.81457144F, new Vector2(72F, 71.8909988F), _stepThenHoldEasingFunction);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 55.2099991F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 8.
                result.InsertKeyFrame(0.114285715F, new Vector2(64.3610001F, 55.2099991F), _cubicBezierEasingFunction_2);
                // Frame 12.
                result.InsertKeyFrame(0.171428576F, new Vector2(64.3610001F, 45.2729988F), _cubicBezierEasingFunction_0);
                // Frame 15.
                result.InsertExpressionKeyFrame(0.214285702F, "Pow(1-_.t2,3)*Vector2(64.361,45.273)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,44.5855))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,48.74125))+(Pow(_.t2,3)*Vector2(64.361,51.085))", _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142872F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                // Frame 18.
                result.InsertKeyFrame(0.257142901F, new Vector2(64.3610001F, 59.3349991F), _cubicBezierEasingFunction_3);
                return result;
            }

            // - - Layer aggregator
            // - Layer: handle2
            // ShapeGroup: Shape 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(64.3610001F, 51.0849991F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 46.01.
                result.InsertKeyFrame(0.65728569F, new Vector2(64.3610001F, 51.0849991F), _holdThenStepEasingFunction);
                // Frame 48.01.
                result.InsertKeyFrame(0.685857117F, new Vector2(64.3610001F, 51.0849991F), _cubicBezierEasingFunction_1);
                // Frame 55.01.
                result.InsertKeyFrame(0.785857141F, new Vector2(64.3610001F, 57.1170006F), _cubicBezierEasingFunction_0);
                // Frame 57.01.
                result.InsertExpressionKeyFrame(0.81442517F, "Pow(1-_.t2,3)*Vector2(64.361,57.117)+(3*Square(1-_.t2)*_.t2*Vector2(64.361,57.8045))+(3*(1-_.t2)*Square(_.t2)*Vector2(64.361,55.52771))+(Pow(_.t2,3)*Vector2(64.361,55.21))", _stepThenHoldEasingFunction);
                // Frame 57.01.
                result.InsertKeyFrame(0.81442523F, new Vector2(64.3610001F, 55.2099991F), _stepThenHoldEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                // Frame 17.
                result.InsertKeyFrame(0.242857143F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: handle2
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 46.
                result.InsertKeyFrame(0.657142878F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            internal LocationSearch_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(144F, 144F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
