//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile Wind.json
//       
//       Input file:
//           Wind.json (11528 bytes created 17:04+05:30 Aug 26 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   162 |
// |--------------------------+-------|
// | Expression animators     |    30 |
// | KeyFrame animators       |    18 |
// | Reference parameters     |    30 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     1 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     9 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     2 |
// | CompositionSpriteShapes  |     7 |
// |--------------------------+-------|
// | Brushes                  |     4 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        Comp 1
    // Frame rate:  60 fps
    // Frame count: 160
    // Duration:    2666.7 mS
    sealed class Wind
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 2.667 seconds.
        internal const long c_durationTicks = 26666666;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Wind_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new Wind_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 160d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 160d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Wind_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 26666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostAntiqueWhite_FFE9E6CD;
            CompositionColorBrush _colorBrush_AlmostChartreuse_FFADFF00;
            CompositionColorBrush _colorBrush_AlmostOrange_FFFFBD00;
            CompositionPathGeometry _pathGeometry_1;
            CompositionPathGeometry _pathGeometry_2;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            ExpressionAnimation _rootProgress;
            ExpressionAnimation _rootProgressRemapped_0;
            ExpressionAnimation _rootProgressRemapped_1;
            ScalarKeyFrameAnimation _scalarAnimation_0_to_1;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(51.9949989F, 1.5F));
                    builder.AddLine(new Vector2(1.5F, 1.5F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(8.09599972F, -4.04899979F));
                    builder.AddCubicBezier(new Vector2(8.09599972F, -4.04899979F), new Vector2(6.41599989F, 3.41799998F), new Vector2(-0.839999974F, 4.09800005F));
                    builder.AddCubicBezier(new Vector2(-8.09500027F, 4.77600002F), new Vector2(-2.55800009F, -4.77600002F), new Vector2(8.09599972F, -4.04899979F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.87699997F, -0.497999996F));
                    builder.AddCubicBezier(new Vector2(1.87699997F, -0.497999996F), new Vector2(-0.252000004F, 0.497999996F), new Vector2(-1.87699997F, 0.463999987F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-24.8659992F, -5.69099998F));
                    builder.AddLine(new Vector2(18.9190006F, -5.69099998F));
                    builder.AddLine(new Vector2(19.1660004F, -5.69500017F));
                    builder.AddCubicBezier(new Vector2(22.316F, -5.69500017F), new Vector2(24.8659992F, -3.14400005F), new Vector2(24.8659992F, 0.00499999989F));
                    builder.AddCubicBezier(new Vector2(24.8659992F, 3.14499998F), new Vector2(22.316F, 5.69500017F), new Vector2(19.1660004F, 5.69500017F));
                    builder.AddCubicBezier(new Vector2(18.6760006F, 5.69500017F), new Vector2(18.1959991F, 5.63500023F), new Vector2(17.7360001F, 5.50500011F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(10.625F, -8.78299999F));
                    builder.AddCubicBezier(new Vector2(11.3579998F, -8.99100018F), new Vector2(12.1239996F, -9.08500004F), new Vector2(12.9060001F, -9.08500004F));
                    builder.AddCubicBezier(new Vector2(17.9319992F, -9.08500004F), new Vector2(22F, -5.01800013F), new Vector2(22F, -0.00800000038F));
                    builder.AddCubicBezier(new Vector2(22F, 5.0170002F), new Vector2(17.9319992F, 9.08500004F), new Vector2(12.9060001F, 9.08500004F));
                    builder.AddLine(new Vector2(12.4280005F, 9.08300018F));
                    builder.AddLine(new Vector2(-22F, 9.08300018F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<16.76, 49.162>
            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostGainsboro_FFE8E5CD_to_TransparentAlmostGainsboro_00E8E5CD()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0xE8, 0xE5, 0xCD), _stepThenHoldEasingFunction);
                // Frame 89.
                // AlmostGainsboro_FFE8E5CD
                result.InsertKeyFrame(0.556249976F, Color.FromArgb(0xFF, 0xE8, 0xE5, 0xCD), _holdThenStepEasingFunction);
                // Frame 148.
                // TransparentAlmostGainsboro_00E8E5CD
                result.InsertKeyFrame(0.925000012F, Color.FromArgb(0x00, 0xE8, 0xE5, 0xCD), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - Layer aggregator
            // Offset:<16.76, 49.162>
            CompositionColorBrush AnimatedColorBrush_AlmostGainsboro_FFE8E5CD_to_TransparentAlmostGainsboro_00E8E5CD()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_AlmostGainsboro_FFE8E5CD_to_TransparentAlmostGainsboro_00E8E5CD(), _rootProgress);
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostAntiqueWhite_FFE9E6CD()
            {
                return _colorBrush_AlmostAntiqueWhite_FFE9E6CD = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE9, 0xE6, 0xCD));
            }

            CompositionColorBrush ColorBrush_AlmostChartreuse_FFADFF00()
            {
                return _colorBrush_AlmostChartreuse_FFADFF00 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xAD, 0xFF, 0x00));
            }

            CompositionColorBrush ColorBrush_AlmostOrange_FFFFBD00()
            {
                return _colorBrush_AlmostOrange_FFFFBD00 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xBD, 0x00));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(15.5959997F, 12.2749996F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<15.596, 12.276>
                shapes.Add(SpriteShape_1());
                // ShapeGroup: Group 1 Offset:<9.887, 16.078>
                shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_40_to_0(), RootProgressRemapped_0());
                StartProgressBoundAnimation(result, "Scale.X", ScalarAnimation_0_to_1(), RootProgressRemapped_1());
                StartProgressBoundAnimation(result, "Scale.Y", _scalarAnimation_0_to_1, _rootProgressRemapped_1);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgressRemapped_0);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(15.5959997F, 12.2749996F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 2 Offset:<15.596, 12.276>
                shapes.Add(SpriteShape_3());
                // ShapeGroup: Group 1 Offset:<9.887, 16.078>
                shapes.Add(SpriteShape_4());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m10p366_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 1F);
                propertySet.InsertScalar("TStart", 1F);
                StartProgressBoundAnimation(result, "TStart", TStartScalarAnimation_1_to_0_0(), RootProgress());
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TEnd", TEndScalarAnimation_1_to_0_0(), _rootProgress);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                return result;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            CompositionPathGeometry PathGeometry_2()
            {
                return _pathGeometry_2 = _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 0F);
                propertySet.InsertScalar("TStart", 0F);
                StartProgressBoundAnimation(result, "TStart", TStartScalarAnimation_0_to_1(), _rootProgress);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TEnd", TEndScalarAnimation_0_to_1(), _rootProgress);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                return result;
            }

            CompositionPathGeometry PathGeometry_4()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
                var propertySet = result.Properties;
                propertySet.InsertScalar("TEnd", 1F);
                propertySet.InsertScalar("TStart", 1F);
                StartProgressBoundAnimation(result, "TStart", TStartScalarAnimation_1_to_0_1(), _rootProgress);
                BindProperty(result, "TrimStart", "Min(my.TStart,my.TEnd)", "my", result);
                StartProgressBoundAnimation(result, "TEnd", TEndScalarAnimation_1_to_0_1(), _rootProgress);
                BindProperty(result, "TrimEnd", "Max(my.TStart,my.TEnd)", "my", result);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<16.76, 49.162>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 16.7600002F, 49.1619987F));;
                result.StrokeBrush = AnimatedColorBrush_AlmostGainsboro_FFE8E5CD_to_TransparentAlmostGainsboro_00E8E5CD();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<15.596, 12.276>
                var result = CreateSpriteShape(PathGeometry_1(), new Matrix3x2(1F, 0F, 0F, 1F, 15.5959997F, 12.276F));;
                result.StrokeBrush = ColorBrush_AlmostChartreuse_FFADFF00();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<9.887, 16.078>
                var result = CreateSpriteShape(PathGeometry_2(), new Matrix3x2(1F, 0F, 0F, 1F, 9.88700008F, 16.0779991F));;
                result.StrokeBrush = _colorBrush_AlmostChartreuse_FFADFF00;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<15.596, 12.276>
                var result = CreateSpriteShape(_pathGeometry_1, new Matrix3x2(1F, 0F, 0F, 1F, 15.5959997F, 12.276F));;
                result.StrokeBrush = ColorBrush_AlmostOrange_FFFFBD00();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                // Offset:<9.887, 16.078>
                var result = CreateSpriteShape(_pathGeometry_2, new Matrix3x2(1F, 0F, 0F, 1F, 9.88700008F, 16.0779991F));;
                result.StrokeBrush = _colorBrush_AlmostOrange_FFFFBD00;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                // Offset:<51.019, 62.111>
                var result = CreateSpriteShape(PathGeometry_3(), new Matrix3x2(1F, 0F, 0F, 1F, 51.019001F, 62.1110001F));;
                result.StrokeBrush = ColorBrush_AlmostAntiqueWhite_FFE9E6CD();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_6()
            {
                // Offset:<57.761, 35.855>
                var result = CreateSpriteShape(PathGeometry_4(), new Matrix3x2(1F, 0F, 0F, 1F, 57.7610016F, 35.8549995F));;
                result.StrokeBrush = _colorBrush_AlmostAntiqueWhite_FFE9E6CD;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3F;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                propertySet.InsertScalar("t3", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgressRemapped_0);
                StartProgressBoundAnimation(result.Properties, "t1", t1ScalarAnimation_0_to_1(), _rootProgressRemapped_0);
                StartProgressBoundAnimation(result.Properties, "t2", t2ScalarAnimation_0_to_1(), _rootProgressRemapped_0);
                StartProgressBoundAnimation(result.Properties, "t3", t3ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.490999997F, 0F), new Vector2(0.469000012F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.746999979F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(1F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.504999995F, 0F), new Vector2(0.456F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_0()
            {
                var result = _rootProgressRemapped_0 = _c.CreateExpressionAnimation("_.Progress*0.7272727+0.06363636");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_1()
            {
                var result = _rootProgressRemapped_1 = _c.CreateExpressionAnimation("_.Progress*0.8205128+0.07179487");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_40_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 40F, _c.CreateCubicBezierEasingFunction(new Vector2(0.490999997F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 43.64.
                result.InsertKeyFrame(0.272727281F, 0F, CubicBezierEasingFunction_0());
                // Frame 58.91.
                result.InsertKeyFrame(0.368181825F, 40F, CubicBezierEasingFunction_1());
                // Frame 102.55.
                result.InsertKeyFrame(0.640909076F, 0F, _cubicBezierEasingFunction_0);
                // Frame 116.36.
                result.InsertKeyFrame(0.727272749F, 40F, _cubicBezierEasingFunction_1);
                // Frame 160.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m10p366_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, -10.3660002F, _stepThenHoldEasingFunction);
                // Frame 31.
                result.InsertKeyFrame(0.193749994F, -10.3660002F, _holdThenStepEasingFunction);
                // Frame 95.
                result.InsertKeyFrame(0.59375F, 47.3330002F, CubicBezierEasingFunction_4());
                // Frame 159.
                result.InsertKeyFrame(0.993749976F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.296000004F, 0F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            // Scale
            ScalarKeyFrameAnimation ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = _scalarAnimation_0_to_1 = CreateScalarKeyFrameAnimation(0F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.666999996F, 1F)));
                // Frame 28.72.
                result.InsertKeyFrame(0.179487184F, 1F, CubicBezierEasingFunction_2());
                // Frame 49.23.
                result.InsertKeyFrame(0.307692319F, 0F, CubicBezierEasingFunction_3());
                // Frame 66.46.
                result.InsertKeyFrame(0.41538462F, 0F, _cubicBezierEasingFunction_1);
                // Frame 95.18.
                result.InsertKeyFrame(0.594871819F, 1F, _cubicBezierEasingFunction_2);
                // Frame 115.69.
                result.InsertKeyFrame(0.72307694F, 0F, _cubicBezierEasingFunction_3);
                // Frame 131.28.
                result.InsertKeyFrame(0.820512831F, 0F, _cubicBezierEasingFunction_1);
                // Frame 160.
                result.InsertKeyFrame(1F, 1F, _cubicBezierEasingFunction_2);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 43.64.
                result.InsertKeyFrame(0.272727251F, 1F, CubicBezierEasingFunction_5());
                // Frame 43.64.
                result.InsertKeyFrame(0.272727281F, 0F, _stepThenHoldEasingFunction);
                // Frame 58.91.
                result.InsertKeyFrame(0.368181795F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 58.91.
                var result = CreateScalarKeyFrameAnimation(0.368181825F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 102.55.
                result.InsertKeyFrame(0.640909016F, 1F, _cubicBezierEasingFunction_5);
                // Frame 102.55.
                result.InsertKeyFrame(0.640909076F, 0F, _stepThenHoldEasingFunction);
                // Frame 116.36.
                result.InsertKeyFrame(0.727272689F, 1F, _cubicBezierEasingFunction_1);
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 116.36.
                var result = CreateScalarKeyFrameAnimation(0.727272749F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 160.
                result.InsertKeyFrame(0.99999994F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            ScalarKeyFrameAnimation t3ScalarAnimation_0_to_1()
            {
                // Frame 31.
                var result = CreateScalarKeyFrameAnimation(0.193750009F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 159.
                result.InsertKeyFrame(0.993749917F, 1F, _c.CreateCubicBezierEasingFunction(new Vector2(0.569999993F, 0F), new Vector2(0.569000006F, 1F)));
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 36.
                result.InsertKeyFrame(0.224999994F, 0F, _holdThenStepEasingFunction);
                // Frame 108.
                result.InsertKeyFrame(0.675000012F, 1F, _cubicBezierEasingFunction_4);
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _stepThenHoldEasingFunction);
                // Frame 16.
                result.InsertKeyFrame(0.100000001F, 1F, _holdThenStepEasingFunction);
                // Frame 148.
                result.InsertKeyFrame(0.925000012F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.123999998F, 1F)));
                return result;
            }

            // TEnd
            ScalarKeyFrameAnimation TEndScalarAnimation_1_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _stepThenHoldEasingFunction);
                // Frame 21.
                result.InsertKeyFrame(0.131249994F, 1F, _holdThenStepEasingFunction);
                // Frame 108.
                result.InsertKeyFrame(0.675000012F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.381000012F, 1F)));
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_0_to_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.125F, 0F, _holdThenStepEasingFunction);
                // Frame 94.
                result.InsertKeyFrame(0.587499976F, 1F, _cubicBezierEasingFunction_4);
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_1_to_0_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, StepThenHoldEasingFunction());
                // Frame 50.
                result.InsertKeyFrame(0.3125F, 1F, HoldThenStepEasingFunction());
                // Frame 148.
                result.InsertKeyFrame(0.925000012F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0F, 1F)));
                return result;
            }

            // TStart
            ScalarKeyFrameAnimation TStartScalarAnimation_1_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 1F, _stepThenHoldEasingFunction);
                // Frame 5.
                result.InsertKeyFrame(0.03125F, 1F, _holdThenStepEasingFunction);
                // Frame 96.
                result.InsertKeyFrame(0.600000024F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.335999995F, 1F)));
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(100F, 100F);
                var shapes = result.Shapes;
                // Offset:<16.76, 49.162>
                shapes.Add(SpriteShape_0());
                shapes.Add(ContainerShape_0());
                shapes.Add(ContainerShape_1());
                // Offset:<18.653, 48.915>
                shapes.Add(SpriteShape_5());
                // Offset:<28.261002, 19.269>
                shapes.Add(SpriteShape_6());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.48099995F, 31.7609997F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 43.64.
                result.InsertExpressionKeyFrame(0.272727251F, "Pow(1-_.t0,3)*Vector2(-3.481,31.761)+(3*Square(1-_.t0)*_.t0*Vector2(19.8315,50.4485))+(3*(1-_.t0)*Square(_.t0)*Vector2(62.5815,53.6985))+(Pow(_.t0,3)*Vector2(78.269,28.511))", _stepThenHoldEasingFunction);
                // Frame 58.91.
                result.InsertExpressionKeyFrame(0.368181795F, "Pow(1-_.t0,3)*Vector2(78.269,28.511)+(3*Square(1-_.t0)*_.t0*Vector2(80.6813,24.63787))+(3*(1-_.t0)*Square(_.t0)*Vector2(-7.041253,28.90707))+(Pow(_.t0,3)*Vector2(-3.481,31.761))", _stepThenHoldEasingFunction);
                // Frame 102.55.
                result.InsertExpressionKeyFrame(0.640909016F, "Pow(1-_.t1,3)*Vector2(-3.481,31.761)+(3*Square(1-_.t1)*_.t1*Vector2(19.8315,50.4485))+(3*(1-_.t1)*Square(_.t1)*Vector2(62.5815,53.6985))+(Pow(_.t1,3)*Vector2(78.269,28.511))", _stepThenHoldEasingFunction);
                // Frame 116.36.
                result.InsertExpressionKeyFrame(0.727272689F, "Pow(1-_.t1,3)*Vector2(78.269,28.511)+(3*Square(1-_.t1)*_.t1*Vector2(80.6813,24.63787))+(3*(1-_.t1)*Square(_.t1)*Vector2(-7.041253,28.90707))+(Pow(_.t1,3)*Vector2(-3.481,31.761))", _stepThenHoldEasingFunction);
                // Frame 160.
                result.InsertExpressionKeyFrame(0.99999994F, "Pow(1-_.t2,3)*Vector2(-3.481,31.761)+(3*Square(1-_.t2)*_.t2*Vector2(19.8315,50.4485))+(3*(1-_.t2)*Square(_.t2)*Vector2(62.5815,53.6985))+(Pow(_.t2,3)*Vector2(78.269,28.511))", _stepThenHoldEasingFunction);
                // Frame 160.
                result.InsertKeyFrame(1F, new Vector2(78.2689972F, 28.5109997F), _stepThenHoldEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-3.48099995F, 31.7609997F), _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 31.
                result.InsertKeyFrame(0.193749994F, new Vector2(-3.48099995F, 31.7609997F), _holdThenStepEasingFunction);
                // Frame 159.
                result.InsertExpressionKeyFrame(0.993749917F, "Pow(1-_.t3,3)*Vector2(-3.481,31.761)+(3*Square(1-_.t3)*_.t3*Vector2(22.7065,-2.0515))+(3*(1-_.t3)*Square(_.t3)*Vector2(62.5815,53.6985))+(Pow(_.t3,3)*Vector2(78.269,28.511))", _stepThenHoldEasingFunction);
                // Frame 159.
                result.InsertKeyFrame(0.993749976F, new Vector2(78.2689972F, 28.5109997F), _stepThenHoldEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 31.
                result.InsertKeyFrame(0.193749994F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 99.
                result.InsertKeyFrame(0.618749976F, new Vector2(1F, 1F), _cubicBezierEasingFunction_4);
                // Frame 159.
                result.InsertKeyFrame(0.993749976F, new Vector2(0F, 0F), _cubicBezierEasingFunction_4);
                return result;
            }

            internal Wind_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(100F, 100F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
