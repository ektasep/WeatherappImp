//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile Animation - 1721323548400 (1).json
//       
//       Input file:
//           Animation - 1721323548400 (1).json (5432 bytes created 23:00+05:30 Jul 18 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// __________________________________________________________________________
// |       Object stats       | UAP v11 count | UAP v8 count | UAP v7 count |
// |__________________________|_______________|______________|______________|
// | All CompositionObjects   |            72 |           64 |           36 |
// |--------------------------+---------------+--------------+--------------|
// | Expression animators     |             8 |            7 |            4 |
// | KeyFrame animators       |             4 |            3 |            2 |
// | Reference parameters     |             7 |            6 |            4 |
// | Expression operations    |             0 |            0 |            0 |
// |--------------------------+---------------+--------------+--------------|
// | Animated brushes         |             - |            - |            - |
// | Animated gradient stops  |             - |            - |            - |
// | ExpressionAnimations     |             1 |            1 |            1 |
// | PathKeyFrameAnimations   |             1 |            - |            - |
// |--------------------------+---------------+--------------+--------------|
// | ContainerVisuals         |             3 |            3 |            1 |
// | ShapeVisuals             |             3 |            3 |            2 |
// |--------------------------+---------------+--------------+--------------|
// | ContainerShapes          |             2 |            2 |            1 |
// | CompositionSpriteShapes  |             3 |            3 |            2 |
// |--------------------------+---------------+--------------+--------------|
// | Brushes                  |             5 |            5 |            1 |
// | Gradient stops           |             - |            - |            - |
// | CompositionVisualSurface |             2 |            2 |            - |
// --------------------------------------------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        ic-eye-shakemyart
    // Frame rate:  24 fps
    // Frame count: 47
    // Duration:    1958.3 mS
    sealed class Eyes
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 1.958 seconds.
        internal const long c_durationTicks = 19583333;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Animation__1721323548400_1__AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                var res = 
                    new Animation__1721323548400_1__AnimatedVisual_UAPv11(
                        compositor
                        );
                    return res;
            }

            if (Animation__1721323548400_1__AnimatedVisual_UAPv8.IsRuntimeCompatible())
            {
                var res = 
                    new Animation__1721323548400_1__AnimatedVisual_UAPv8(
                        compositor
                        );
                    return res;
            }

            if (Animation__1721323548400_1__AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res = 
                    new Animation__1721323548400_1__AnimatedVisual_UAPv7(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 47d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 24d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 47d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Animation__1721323548400_1__AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 19583333;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostGray_FF8C8C8C;
            CompositionPath _path;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -127.660004F));
                    builder.AddCubicBezier(new Vector2(-87.2819977F, -127.660004F), new Vector2(-164.330994F, -83.8580017F), new Vector2(-210.376007F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(-217.432007F, -6.80100012F), new Vector2(-217.432007F, 6.80200005F), new Vector2(-210.376007F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(-164.330994F, 83.8580017F), new Vector2(-87.2819977F, 127.660004F), new Vector2(0F, 127.660004F));
                    builder.AddCubicBezier(new Vector2(87.2819977F, 127.660004F), new Vector2(164.330002F, 83.8580017F), new Vector2(210.375F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(217.432007F, 6.80200005F), new Vector2(217.432007F, -6.80100012F), new Vector2(210.375F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(164.330002F, -83.8580017F), new Vector2(87.2819977F, -127.660004F), new Vector2(0F, -127.660004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: eye
            // - - - ShapeGroup: Group 2 Offset:<249.985, 250.309>
            // - Path
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.8440001F, -18.8780003F));
                    builder.AddCubicBezier(new Vector2(-90.1259995F, -18.8780003F), new Vector2(-205.964996F, -20.0389996F), new Vector2(-210.376007F, -17.0419998F));
                    builder.AddCubicBezier(new Vector2(-217.059998F, -6.55700016F), new Vector2(-217.966995F, 7.1960001F), new Vector2(-210.376007F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(-203.964996F, 20.9610004F), new Vector2(-90.4380035F, 16.5030003F), new Vector2(-3.1559999F, 16.5030003F));
                    builder.AddCubicBezier(new Vector2(84.1259995F, 16.5030003F), new Vector2(206.035995F, 17.9610004F), new Vector2(210.375F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(217.876999F, 7.12599993F), new Vector2(218.128998F, -7.32700014F), new Vector2(210.375F, -17.0419998F));
                    builder.AddCubicBezier(new Vector2(201.035995F, -18.0389996F), new Vector2(84.4380035F, -18.8780003F), new Vector2(-2.8440001F, -18.8780003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: white
            // - - - Transforms: dot
            // - - Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(44.8860016F, 76.7460022F));
                    builder.AddCubicBezier(new Vector2(-36.9749985F, 118.225998F), new Vector2(-118.226997F, 36.9749985F), new Vector2(-76.7470016F, -44.8860016F));
                    builder.AddCubicBezier(new Vector2(-69.7929993F, -58.6100006F), new Vector2(-58.6110001F, -69.7929993F), new Vector2(-44.887001F, -76.7470016F));
                    builder.AddCubicBezier(new Vector2(36.9749985F, -118.227997F), new Vector2(118.227997F, -36.973999F), new Vector2(76.7450027F, 44.887001F));
                    builder.AddCubicBezier(new Vector2(69.7910004F, 58.6100006F), new Vector2(58.6100006F, 69.7919998F), new Vector2(44.8860016F, 76.7460022F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: dot
            // - - - Transforms: dot
            // - - ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(55.2179985F, 30.4969997F), new Vector2(30.4960003F, 55.2179985F), new Vector2(0F, 55.2179985F));
                    builder.AddCubicBezier(new Vector2(-30.4960003F, 55.2179985F), new Vector2(-55.2179985F, 30.4969997F), new Vector2(-55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(-55.2179985F, -30.4960003F), new Vector2(-30.4960003F, -55.2179985F), new Vector2(0F, -55.2179985F));
                    builder.AddCubicBezier(new Vector2(30.4960003F, -55.2179985F), new Vector2(55.2179985F, -30.4960003F), new Vector2(55.2179985F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostGray_FF8C8C8C()
            {
                return _colorBrush_AlmostGray_FF8C8C8C = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x8C, 0x8C, 0x8C));
            }

            // - - Shape tree root for layer: white
            // - Transforms: dot
            // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CompositionColorBrush ColorBrush_White()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Shape tree root for layer: white
            // Transforms for dot
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(249.667007F, 249.667007F);
                result.Scale = new Vector2(1.03243005F, 1.03243005F);
                // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), _rootProgress);
                return result;
            }

            // Shape tree root for layer: dot
            // Transforms for dot
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(249.667007F, 249.667007F);
                result.Scale = new Vector2(1.03243005F, 1.03243005F);
                // ShapeGroup: Group 1 Offset:<249.667, 249.667>
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation, _rootProgress);
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionPath Path()
            {
                var result = _path = new CompositionPath(Geometry_0());
                return result;
            }

            // - Shape tree root for layer: eye
            // ShapeGroup: Group 2 Offset:<249.985, 250.309>
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgress());
                return result;
            }

            // - - Shape tree root for layer: white
            // - Transforms: dot
            // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - - Shape tree root for layer: dot
            // - Transforms: dot
            // ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // Shape tree root for layer: eye
            // Path 2
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<249.985, 250.309>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.985001F, 250.309006F), ColorBrush_AlmostGray_FF8C8C8C());;
                return result;
            }

            // - Shape tree root for layer: white
            // Transforms: dot
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<249.66814, 249.667>, Scale:<1.12279, 1.12279>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1.12278998F, 0F, 0F, 1.12278998F, 249.668137F, 249.667007F), ColorBrush_White());;
                return result;
            }

            // - Shape tree root for layer: dot
            // Transforms: dot
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<249.667, 249.667>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.667007F, 249.667007F), _colorBrush_AlmostGray_FF8C8C8C);;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(500F, 500F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(500F, 500F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: eye
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: white
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                var children = result.Children;
                children.InsertAtTop(SpriteVisual_0());
                // Shape tree root for layer: dot
                children.InsertAtTop(ShapeVisual_2());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Shape tree root for layer: eye
            // - ShapeGroup: Group 2 Offset:<249.985, 250.309>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path(), StepThenHoldEasingFunction());
                // Frame 2.
                result.InsertKeyFrame(0.0425531901F, _path, HoldThenStepEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.170212761F, new CompositionPath(Geometry_1()), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 14.
                result.InsertKeyFrame(0.297872335F, _path, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F)));
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 13.24.
                var result = CreateScalarKeyFrameAnimation(0.281595767F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 20.91.
                result.InsertKeyFrame(0.444829762F, 1F, _cubicBezierEasingFunction_0);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, 0F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446754F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: eye
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // ShapeGroup: Group 2 Offset:<249.985, 250.309>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: white
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // Transforms: dot
                result.Shapes.Add(ContainerShape_0());
                return result;
            }

            // Shape tree root for layer: dot
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // Transforms: dot
                result.Shapes.Add(ContainerShape_1());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(500F, 500F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = _offsetVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(-0.00100000005F, 0F), _holdThenStepEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 13.23.
                result.InsertKeyFrame(0.281595737F, new Vector2(-0.00100000005F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F)));
                // Frame 20.91.
                result.InsertExpressionKeyFrame(0.444829762F, "Pow(1-_.t0,3)*Vector2(-0.001,0)+(3*Square(1-_.t0)*_.t0*Vector2(-11.593,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(-81.145,0))+(Pow(_.t0,3)*Vector2(-69.553,0))", _stepThenHoldEasingFunction);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723375F, new Vector2(-69.5530014F, 0F), _stepThenHoldEasingFunction);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, new Vector2(69.5510025F, 0F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertExpressionKeyFrame(0.957446754F, "Pow(1-_.t0,3)*Vector2(69.551,0)+(3*Square(1-_.t0)*_.t0*Vector2(81.14301,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(11.591,0))+(Pow(_.t0,3)*Vector2(-0.001,0))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446814F, new Vector2(-0.00100000005F, 0F), _stepThenHoldEasingFunction);
                return result;
            }

            internal Animation__1721323548400_1__AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(500F, 500F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class Animation__1721323548400_1__AnimatedVisual_UAPv8 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 19583333;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostGray_FF8C8C8C;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: eye
            // - - ShapeGroup: Group 2 Offset:<249.985, 250.309>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -127.660004F));
                    builder.AddCubicBezier(new Vector2(-87.2819977F, -127.660004F), new Vector2(-164.330994F, -83.8580017F), new Vector2(-210.376007F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(-217.432007F, -6.80100012F), new Vector2(-217.432007F, 6.80200005F), new Vector2(-210.376007F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(-164.330994F, 83.8580017F), new Vector2(-87.2819977F, 127.660004F), new Vector2(0F, 127.660004F));
                    builder.AddCubicBezier(new Vector2(87.2819977F, 127.660004F), new Vector2(164.330002F, 83.8580017F), new Vector2(210.375F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(217.432007F, 6.80200005F), new Vector2(217.432007F, -6.80100012F), new Vector2(210.375F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(164.330002F, -83.8580017F), new Vector2(87.2819977F, -127.660004F), new Vector2(0F, -127.660004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: white
            // - - - Transforms: dot
            // - - Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(44.8860016F, 76.7460022F));
                    builder.AddCubicBezier(new Vector2(-36.9749985F, 118.225998F), new Vector2(-118.226997F, 36.9749985F), new Vector2(-76.7470016F, -44.8860016F));
                    builder.AddCubicBezier(new Vector2(-69.7929993F, -58.6100006F), new Vector2(-58.6110001F, -69.7929993F), new Vector2(-44.887001F, -76.7470016F));
                    builder.AddCubicBezier(new Vector2(36.9749985F, -118.227997F), new Vector2(118.227997F, -36.973999F), new Vector2(76.7450027F, 44.887001F));
                    builder.AddCubicBezier(new Vector2(69.7910004F, 58.6100006F), new Vector2(58.6100006F, 69.7919998F), new Vector2(44.8860016F, 76.7460022F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: dot
            // - - - Transforms: dot
            // - - ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(55.2179985F, 30.4969997F), new Vector2(30.4960003F, 55.2179985F), new Vector2(0F, 55.2179985F));
                    builder.AddCubicBezier(new Vector2(-30.4960003F, 55.2179985F), new Vector2(-55.2179985F, 30.4969997F), new Vector2(-55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(-55.2179985F, -30.4960003F), new Vector2(-30.4960003F, -55.2179985F), new Vector2(0F, -55.2179985F));
                    builder.AddCubicBezier(new Vector2(30.4960003F, -55.2179985F), new Vector2(55.2179985F, -30.4960003F), new Vector2(55.2179985F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostGray_FF8C8C8C()
            {
                return _colorBrush_AlmostGray_FF8C8C8C = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x8C, 0x8C, 0x8C));
            }

            // - - Shape tree root for layer: white
            // - Transforms: dot
            // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CompositionColorBrush ColorBrush_White()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Shape tree root for layer: white
            // Transforms for dot
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(249.667007F, 249.667007F);
                result.Scale = new Vector2(1.03243005F, 1.03243005F);
                // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), RootProgress());
                return result;
            }

            // Shape tree root for layer: dot
            // Transforms for dot
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(249.667007F, 249.667007F);
                result.Scale = new Vector2(1.03243005F, 1.03243005F);
                // ShapeGroup: Group 1 Offset:<249.667, 249.667>
                result.Shapes.Add(SpriteShape_2());
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation, _rootProgress);
                return result;
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationOut;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - Shape tree root for layer: eye
            // ShapeGroup: Group 2 Offset:<249.985, 250.309>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - Shape tree root for layer: white
            // - Transforms: dot
            // Transforms: white Scale:1.12279,1.12279, Offset:<0.0010070801, 0>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - - Shape tree root for layer: dot
            // - Transforms: dot
            // ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // Shape tree root for layer: eye
            // Path 2
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<249.985, 250.309>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.985001F, 250.309006F), ColorBrush_AlmostGray_FF8C8C8C());;
                return result;
            }

            // - Shape tree root for layer: white
            // Transforms: dot
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<249.66814, 249.667>, Scale:<1.12279, 1.12279>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1.12278998F, 0F, 0F, 1.12278998F, 249.668137F, 249.667007F), ColorBrush_White());;
                return result;
            }

            // - Shape tree root for layer: dot
            // Transforms: dot
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<249.667, 249.667>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.667007F, 249.667007F), _colorBrush_AlmostGray_FF8C8C8C);;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(500F, 500F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(500F, 500F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: eye
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: white
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                var children = result.Children;
                children.InsertAtTop(SpriteVisual_0());
                // Shape tree root for layer: dot
                children.InsertAtTop(ShapeVisual_2());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 13.24.
                var result = CreateScalarKeyFrameAnimation(0.281595767F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 20.91.
                result.InsertKeyFrame(0.444829762F, 1F, _cubicBezierEasingFunction_0);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, 0F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446754F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: eye
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // ShapeGroup: Group 2 Offset:<249.985, 250.309>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: white
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // Transforms: dot
                result.Shapes.Add(ContainerShape_0());
                return result;
            }

            // Shape tree root for layer: dot
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // Transforms: dot
                result.Shapes.Add(ContainerShape_1());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(500F, 500F);
                result.Brush = EffectBrush();
                return result;
            }

            // Offset
            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = _offsetVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(-0.00100000005F, 0F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 13.23.
                result.InsertKeyFrame(0.281595737F, new Vector2(-0.00100000005F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F)));
                // Frame 20.91.
                result.InsertExpressionKeyFrame(0.444829762F, "Pow(1-_.t0,3)*Vector2(-0.001,0)+(3*Square(1-_.t0)*_.t0*Vector2(-11.593,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(-81.145,0))+(Pow(_.t0,3)*Vector2(-69.553,0))", StepThenHoldEasingFunction());
                // Frame 29.36.
                result.InsertKeyFrame(0.624723375F, new Vector2(-69.5530014F, 0F), _stepThenHoldEasingFunction);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, new Vector2(69.5510025F, 0F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertExpressionKeyFrame(0.957446754F, "Pow(1-_.t0,3)*Vector2(69.551,0)+(3*Square(1-_.t0)*_.t0*Vector2(81.14301,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(11.591,0))+(Pow(_.t0,3)*Vector2(-0.001,0))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446814F, new Vector2(-0.00100000005F, 0F), _stepThenHoldEasingFunction);
                return result;
            }

            internal Animation__1721323548400_1__AnimatedVisual_UAPv8(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(500F, 500F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 8);
            }
        }

        sealed class Animation__1721323548400_1__AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 19583333;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostGray_FF8C8C8C;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: eye
            // - - ShapeGroup: Group 2 Offset:<249.985, 250.309>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, -127.660004F));
                    builder.AddCubicBezier(new Vector2(-87.2819977F, -127.660004F), new Vector2(-164.330994F, -83.8580017F), new Vector2(-210.376007F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(-217.432007F, -6.80100012F), new Vector2(-217.432007F, 6.80200005F), new Vector2(-210.376007F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(-164.330994F, 83.8580017F), new Vector2(-87.2819977F, 127.660004F), new Vector2(0F, 127.660004F));
                    builder.AddCubicBezier(new Vector2(87.2819977F, 127.660004F), new Vector2(164.330002F, 83.8580017F), new Vector2(210.375F, 17.0419998F));
                    builder.AddCubicBezier(new Vector2(217.432007F, 6.80200005F), new Vector2(217.432007F, -6.80100012F), new Vector2(210.375F, -17.0410004F));
                    builder.AddCubicBezier(new Vector2(164.330002F, -83.8580017F), new Vector2(87.2819977F, -127.660004F), new Vector2(0F, -127.660004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: dot
            // - - - Transforms: dot
            // - - ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(55.2179985F, 30.4969997F), new Vector2(30.4960003F, 55.2179985F), new Vector2(0F, 55.2179985F));
                    builder.AddCubicBezier(new Vector2(-30.4960003F, 55.2179985F), new Vector2(-55.2179985F, 30.4969997F), new Vector2(-55.2179985F, 0F));
                    builder.AddCubicBezier(new Vector2(-55.2179985F, -30.4960003F), new Vector2(-30.4960003F, -55.2179985F), new Vector2(0F, -55.2179985F));
                    builder.AddCubicBezier(new Vector2(30.4960003F, -55.2179985F), new Vector2(55.2179985F, -30.4960003F), new Vector2(55.2179985F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostGray_FF8C8C8C()
            {
                return _colorBrush_AlmostGray_FF8C8C8C = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x8C, 0x8C, 0x8C));
            }

            // Shape tree root for layer: dot
            // Transforms for dot
            CompositionContainerShape ContainerShape()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(249.667007F, 249.667007F);
                result.Scale = new Vector2(1.03243005F, 1.03243005F);
                // ShapeGroup: Group 1 Offset:<249.667, 249.667>
                result.Shapes.Add(SpriteShape_1());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), RootProgress());
                return result;
            }

            // - Shape tree root for layer: eye
            // ShapeGroup: Group 2 Offset:<249.985, 250.309>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - - Shape tree root for layer: dot
            // - Transforms: dot
            // ShapeGroup: Group 1 Offset:<249.667, 249.667>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // Shape tree root for layer: eye
            // Path 2
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<249.985, 250.309>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.985001F, 250.309006F), ColorBrush_AlmostGray_FF8C8C8C());;
                return result;
            }

            // - Shape tree root for layer: dot
            // Transforms: dot
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<249.667, 249.667>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 249.667007F, 249.667007F), _colorBrush_AlmostGray_FF8C8C8C);;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                var children = result.Children;
                // Shape tree root for layer: eye
                children.InsertAtTop(ShapeVisual_0());
                // Shape tree root for layer: dot
                children.InsertAtTop(ShapeVisual_1());
                StartProgressBoundAnimation(result.Properties, "t0", t0ScalarAnimation_0_to_1(), _rootProgress);
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 13.24.
                var result = CreateScalarKeyFrameAnimation(0.281595767F, 0F, _stepThenHoldEasingFunction);
                result.SetReferenceParameter("_", _root);
                // Frame 20.91.
                result.InsertKeyFrame(0.444829762F, 1F, _cubicBezierEasingFunction_0);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, 0F, _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446754F, 1F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: eye
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // ShapeGroup: Group 2 Offset:<249.985, 250.309>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: dot
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(500F, 500F);
                // Transforms: dot
                result.Shapes.Add(ContainerShape());
                return result;
            }

            // - - Shape tree root for layer: dot
            // - Transforms: dot
            // Offset
            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Shape tree root for layer: dot
            // Transforms: dot
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-0.00100000005F, 0F), HoldThenStepEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 13.23.
                result.InsertKeyFrame(0.281595737F, new Vector2(-0.00100000005F, 0F), _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0.333000004F), new Vector2(0.666999996F, 0.666999996F)));
                // Frame 20.91.
                result.InsertExpressionKeyFrame(0.444829762F, "Pow(1-_.t0,3)*Vector2(-0.001,0)+(3*Square(1-_.t0)*_.t0*Vector2(-11.593,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(-81.145,0))+(Pow(_.t0,3)*Vector2(-69.553,0))", StepThenHoldEasingFunction());
                // Frame 29.36.
                result.InsertKeyFrame(0.624723375F, new Vector2(-69.5530014F, 0F), _stepThenHoldEasingFunction);
                // Frame 29.36.
                result.InsertKeyFrame(0.624723434F, new Vector2(69.5510025F, 0F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertExpressionKeyFrame(0.957446754F, "Pow(1-_.t0,3)*Vector2(69.551,0)+(3*Square(1-_.t0)*_.t0*Vector2(81.14301,0))+(3*(1-_.t0)*Square(_.t0)*Vector2(11.591,0))+(Pow(_.t0,3)*Vector2(-0.001,0))", _stepThenHoldEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.957446814F, new Vector2(-0.00100000005F, 0F), _stepThenHoldEasingFunction);
                return result;
            }

            internal Animation__1721323548400_1__AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(500F, 500F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
