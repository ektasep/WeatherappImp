//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile dust-day.json
//       
//       Input file:
//           dust-day.json (33141 bytes created 20:02+05:30 Dec 24 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// __________________________________________________________
// |       Object stats       | UAP v8 count | UAP v7 count |
// |__________________________|______________|______________|
// | All CompositionObjects   |          268 |          244 |
// |--------------------------+--------------+--------------|
// | Expression animators     |           49 |           49 |
// | KeyFrame animators       |           13 |           13 |
// | Reference parameters     |           49 |           49 |
// | Expression operations    |            0 |            0 |
// |--------------------------+--------------+--------------|
// | Animated brushes         |            - |            - |
// | Animated gradient stops  |           36 |           36 |
// | ExpressionAnimations     |           28 |           28 |
// | PathKeyFrameAnimations   |            - |            - |
// |--------------------------+--------------+--------------|
// | ContainerVisuals         |            3 |            1 |
// | ShapeVisuals             |            3 |            2 |
// |--------------------------+--------------+--------------|
// | ContainerShapes          |            - |            - |
// | CompositionSpriteShapes  |           15 |           14 |
// |--------------------------+--------------+--------------|
// | Brushes                  |           19 |           15 |
// | Gradient stops           |           39 |           39 |
// | CompositionVisualSurface |            2 |            - |
// ----------------------------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        dust-day
    // Frame rate:  60 fps
    // Frame count: 360
    // Duration:    6000.0 mS
    sealed class DustDay
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 6.000 seconds.
        internal const long c_durationTicks = 60000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Dust_day_AnimatedVisual_UAPv8.IsRuntimeCompatible())
            {
                var res = 
                    new Dust_day_AnimatedVisual_UAPv8(
                        compositor
                        );
                    return res;
            }

            if (Dust_day_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res = 
                    new Dust_day_AnimatedVisual_UAPv7(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 360d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 360d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Dust_day_AnimatedVisual_UAPv8 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 60000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionLinearGradientBrush _linearGradientBrush_01;
            CompositionLinearGradientBrush _linearGradientBrush_02;
            CompositionLinearGradientBrush _linearGradientBrush_03;
            CompositionLinearGradientBrush _linearGradientBrush_04;
            CompositionLinearGradientBrush _linearGradientBrush_05;
            CompositionLinearGradientBrush _linearGradientBrush_06;
            CompositionLinearGradientBrush _linearGradientBrush_07;
            CompositionLinearGradientBrush _linearGradientBrush_08;
            CompositionLinearGradientBrush _linearGradientBrush_09;
            CompositionLinearGradientBrush _linearGradientBrush_10;
            CompositionLinearGradientBrush _linearGradientBrush_11;
            CompositionLinearGradientBrush _linearGradientBrush_12;
            CompositionPathGeometry _pathGeometry_3;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _colorExpressionAnimation_00;
            ExpressionAnimation _colorExpressionAnimation_01;
            ExpressionAnimation _colorExpressionAnimation_02;
            ExpressionAnimation _colorExpressionAnimation_03;
            ExpressionAnimation _colorExpressionAnimation_04;
            ExpressionAnimation _colorExpressionAnimation_05;
            ExpressionAnimation _colorExpressionAnimation_06;
            ExpressionAnimation _colorExpressionAnimation_07;
            ExpressionAnimation _colorExpressionAnimation_08;
            ExpressionAnimation _colorExpressionAnimation_09;
            ExpressionAnimation _colorExpressionAnimation_10;
            ExpressionAnimation _colorExpressionAnimation_11;
            ExpressionAnimation _rootProgress;
            ExpressionAnimation _rootProgressRemapped_0;
            ExpressionAnimation _rootProgressRemapped_1;
            ExpressionAnimation _rootProgressRemapped_2;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_155p55_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_188p7_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_221p85_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_255_to_255;
            StepEasingFunction _holdThenStepEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: sun
            // - -  Offset:<256, 256>
            // - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_00()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_01(), Geometry_02(), Geometry_03(), Geometry_04(), Geometry_05(), Geometry_06(), Geometry_07(), Geometry_08() },
                    CanvasFilledRegionDetermination.Alternate);
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, -130.345001F));
                    builder.AddLine(new Vector2(0F, -180F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, 180F));
                    builder.AddLine(new Vector2(0F, 130.345001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(92.1679993F, -92.1679993F));
                    builder.AddLine(new Vector2(127.278999F, -127.278999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-127.278999F, 127.278999F));
                    builder.AddLine(new Vector2(-92.1679993F, 92.1679993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-92.1679993F, -92.1679993F));
                    builder.AddLine(new Vector2(-127.278999F, -127.278999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(127.278999F, 127.278999F));
                    builder.AddLine(new Vector2(92.1679993F, 92.1679993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-130.345001F, 0F));
                    builder.AddLine(new Vector2(-180F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(180F, 0F));
                    builder.AddLine(new Vector2(130.345001F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: sun
            // - -  Offset:<256, 256>
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(84F, 0F));
                    builder.AddCubicBezier(new Vector2(84F, 46.3919983F), new Vector2(46.3919983F, 84F), new Vector2(0F, 84F));
                    builder.AddCubicBezier(new Vector2(-46.3919983F, 84F), new Vector2(-84F, 46.3919983F), new Vector2(-84F, 0F));
                    builder.AddCubicBezier(new Vector2(-84F, -46.3919983F), new Vector2(-46.3919983F, -84F), new Vector2(0F, -84F));
                    builder.AddCubicBezier(new Vector2(46.3919983F, -84F), new Vector2(84F, -46.3919983F), new Vector2(84F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Masks
            // - -  Offset:<256, 256>
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-255.5F, -255.5F));
                    builder.AddLine(new Vector2(256.5F, -255.5F));
                    builder.AddLine(new Vector2(-255.5F, 256.5F));
                    builder.AddLine(new Vector2(-255.5F, -255.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12F, 0F));
                    builder.AddCubicBezier(new Vector2(12F, 6.62699986F), new Vector2(6.62699986F, 12F), new Vector2(0F, 12F));
                    builder.AddCubicBezier(new Vector2(-6.62699986F, 12F), new Vector2(-12F, 6.62699986F), new Vector2(-12F, 0F));
                    builder.AddCubicBezier(new Vector2(-12F, -6.62699986F), new Vector2(-6.62699986F, -12F), new Vector2(0F, -12F));
                    builder.AddCubicBezier(new Vector2(6.62699986F, -12F), new Vector2(12F, -6.62699986F), new Vector2(12F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFFBBF24()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFB, 0xBF, 0x24));
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_AlmostOrange_FFF8AF18()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF8, 0xAF, 0x18));
            }

            // - Masks
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_Black()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_00()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_00());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_01()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_01());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_02()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_02());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_03()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_03());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_04()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_04());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_05()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_05());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_06()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_06());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_07()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_07());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_08()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_08());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_09()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_09());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_10()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_10());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_11()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_11());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_00()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_00);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_01()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_01);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_02()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_02);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_03()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_03);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_04()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_04);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_05()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_05);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_06()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_06);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_07()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_07);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_08()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_08);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_09()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_09);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_10()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_10);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_11()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_11);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_00()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_01);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_01()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_02);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_02()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_03);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_03()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_04);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_04()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_05);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_05()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_06);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_06()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_07);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_07()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_08);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_08()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_09);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_09()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_10);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_10()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_11);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_11()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_12);
                return result;
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostGoldenrod_FFFABE23()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xFA, 0xBE, 0x23));
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p45_AlmostGoldenrod_FFFABE23()
            {
                return _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0xFF, 0xFA, 0xBE, 0x23));
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 2
            CompositionColorGradientStop GradientStop_1_AlmostOrange_FFF59E0A()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xF5, 0x9E, 0x0A));
            }

            CompositionEffectBrush EffectBrush()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionLinearGradientBrush LinearGradientBrush_00()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostGoldenrod_FFFABE23());
                colorStops.Add(GradientStop_0p45_AlmostGoldenrod_FFFABE23());
                colorStops.Add(GradientStop_1_AlmostOrange_FFF59E0A());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-41.5169983F, -71.8710022F);
                result.EndPoint = new Vector2(42.4970016F, 73.6449966F);
                return result;
            }

            // - Layer aggregator
            // Offset:<424, 194>
            CompositionLinearGradientBrush LinearGradientBrush_01()
            {
                var result = _linearGradientBrush_01 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_00());
                colorStops.Add(AnimatedGradientStop_0p45_00());
                colorStops.Add(AnimatedGradientStop_1_00());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_155p55_to_255(), RootProgressRemapped_0());
                return result;
            }

            // - Layer aggregator
            // Offset:<364, 194>
            CompositionLinearGradientBrush LinearGradientBrush_02()
            {
                var result = _linearGradientBrush_02 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_01());
                colorStops.Add(AnimatedGradientStop_0p45_01());
                colorStops.Add(AnimatedGradientStop_1_01());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_188p7_to_255(), RootProgressRemapped_1());
                return result;
            }

            // - Layer aggregator
            // Offset:<392, 226>
            CompositionLinearGradientBrush LinearGradientBrush_03()
            {
                var result = _linearGradientBrush_03 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_02());
                colorStops.Add(AnimatedGradientStop_0p45_02());
                colorStops.Add(AnimatedGradientStop_1_02());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_221p85_to_255(), RootProgressRemapped_2());
                return result;
            }

            // - Layer aggregator
            // Offset:<332, 226>
            CompositionLinearGradientBrush LinearGradientBrush_04()
            {
                var result = _linearGradientBrush_04 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_03());
                colorStops.Add(AnimatedGradientStop_0p45_03());
                colorStops.Add(AnimatedGradientStop_1_03());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_255_to_255(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<360, 262>
            CompositionLinearGradientBrush LinearGradientBrush_05()
            {
                var result = _linearGradientBrush_05 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_04());
                colorStops.Add(AnimatedGradientStop_0p45_04());
                colorStops.Add(AnimatedGradientStop_1_04());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_155p55_to_255, _rootProgressRemapped_0);
                return result;
            }

            // - Layer aggregator
            // Offset:<300, 262>
            CompositionLinearGradientBrush LinearGradientBrush_06()
            {
                var result = _linearGradientBrush_06 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_05());
                colorStops.Add(AnimatedGradientStop_0p45_05());
                colorStops.Add(AnimatedGradientStop_1_05());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_188p7_to_255, _rootProgressRemapped_1);
                return result;
            }

            // - Layer aggregator
            // Offset:<328, 294>
            CompositionLinearGradientBrush LinearGradientBrush_07()
            {
                var result = _linearGradientBrush_07 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_06());
                colorStops.Add(AnimatedGradientStop_0p45_06());
                colorStops.Add(AnimatedGradientStop_1_06());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_221p85_to_255, _rootProgressRemapped_2);
                return result;
            }

            // - Layer aggregator
            // Offset:<268, 294>
            CompositionLinearGradientBrush LinearGradientBrush_08()
            {
                var result = _linearGradientBrush_08 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_07());
                colorStops.Add(AnimatedGradientStop_0p45_07());
                colorStops.Add(AnimatedGradientStop_1_07());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_255_to_255, _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<296, 330>
            CompositionLinearGradientBrush LinearGradientBrush_09()
            {
                var result = _linearGradientBrush_09 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_08());
                colorStops.Add(AnimatedGradientStop_0p45_08());
                colorStops.Add(AnimatedGradientStop_1_08());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_155p55_to_255, _rootProgressRemapped_0);
                return result;
            }

            // - Layer aggregator
            // Offset:<236, 330>
            CompositionLinearGradientBrush LinearGradientBrush_10()
            {
                var result = _linearGradientBrush_10 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_09());
                colorStops.Add(AnimatedGradientStop_0p45_09());
                colorStops.Add(AnimatedGradientStop_1_09());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_188p7_to_255, _rootProgressRemapped_1);
                return result;
            }

            // - Layer aggregator
            // Offset:<264, 362>
            CompositionLinearGradientBrush LinearGradientBrush_11()
            {
                var result = _linearGradientBrush_11 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_10());
                colorStops.Add(AnimatedGradientStop_0p45_10());
                colorStops.Add(AnimatedGradientStop_1_10());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_221p85_to_255, _rootProgressRemapped_2);
                return result;
            }

            // - Layer aggregator
            // Offset:<204, 362>
            CompositionLinearGradientBrush LinearGradientBrush_12()
            {
                var result = _linearGradientBrush_12 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_11());
                colorStops.Add(AnimatedGradientStop_0p45_11());
                colorStops.Add(AnimatedGradientStop_1_11());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_255_to_255, _rootProgress);
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            // Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - Masks
            // Offset:<256, 256>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            CompositionPathGeometry PathGeometry_3()
            {
                return _pathGeometry_3 = _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // Shape tree root for layer: sun
            // Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostGoldenrod_FFFBBF24();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 24F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_45(), RootProgress());
                return result;
            }

            // Shape tree root for layer: sun
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<256, 256>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), LinearGradientBrush_00());;
                result.StrokeBrush = ColorBrush_AlmostOrange_FFF8AF18();
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 6F;
                return result;
            }

            // Masks
            // Offset:<256, 256>
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<256, 256>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), ColorBrush_Black());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<424, 194>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 424F, 194F), LinearGradientBrush_01());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<364, 194>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 364F, 194F), LinearGradientBrush_02());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<392, 226>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 392F, 226F), LinearGradientBrush_03());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<332, 226>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 332F, 226F), LinearGradientBrush_04());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<360, 262>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 360F, 262F), LinearGradientBrush_05());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<300, 262>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 300F, 262F), LinearGradientBrush_06());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<328, 294>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 328F, 294F), LinearGradientBrush_07());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<268, 294>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 268F, 294F), LinearGradientBrush_08());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<296, 330>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 296F, 330F), LinearGradientBrush_09());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<236, 330>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 236F, 330F), LinearGradientBrush_10());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<264, 362>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 264F, 362F), LinearGradientBrush_11());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<204, 362>
                var geometry = _pathGeometry_3;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 204F, 362F), LinearGradientBrush_12());;
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(512F, 512F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(512F, 512F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: sun
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                children.InsertAtTop(SpriteVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation ColorExpressionAnimation_00()
            {
                var result = _colorExpressionAnimation_00 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_01.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_01()
            {
                var result = _colorExpressionAnimation_01 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_02.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_02()
            {
                var result = _colorExpressionAnimation_02 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_03.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_03()
            {
                var result = _colorExpressionAnimation_03 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_04.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_04()
            {
                var result = _colorExpressionAnimation_04 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_05.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_05()
            {
                var result = _colorExpressionAnimation_05 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_06.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_06()
            {
                var result = _colorExpressionAnimation_06 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_07.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_07()
            {
                var result = _colorExpressionAnimation_07 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_08.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_08()
            {
                var result = _colorExpressionAnimation_08 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_09.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_09()
            {
                var result = _colorExpressionAnimation_09 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_10.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_10()
            {
                var result = _colorExpressionAnimation_10 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_11.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_11()
            {
                var result = _colorExpressionAnimation_11 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_12.Properties);
                return result;
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_0()
            {
                var result = _rootProgressRemapped_0 = _c.CreateExpressionAnimation("_.Progress*0.9625669");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_1()
            {
                var result = _rootProgressRemapped_1 = _c.CreateExpressionAnimation("_.Progress*0.9756098");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_2()
            {
                var result = _rootProgressRemapped_2 = _c.CreateExpressionAnimation("_.Progress*0.989011");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_155p55_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_155p55_to_255 = CreateScalarKeyFrameAnimation(0F, 155.550003F, _holdThenStepEasingFunction);
                // Frame 14.44.
                result.InsertKeyFrame(0.0401069522F, 255F, _cubicBezierEasingFunction_0);
                // Frame 33.69.
                result.InsertKeyFrame(0.0935828909F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 52.94.
                result.InsertKeyFrame(0.14705883F, 255F, _cubicBezierEasingFunction_0);
                // Frame 72.19.
                result.InsertKeyFrame(0.200534761F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 91.44.
                result.InsertKeyFrame(0.254010707F, 255F, _cubicBezierEasingFunction_0);
                // Frame 110.7.
                result.InsertKeyFrame(0.307486624F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 129.95.
                result.InsertKeyFrame(0.36096257F, 255F, _cubicBezierEasingFunction_0);
                // Frame 149.2.
                result.InsertKeyFrame(0.414438516F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 168.45.
                result.InsertKeyFrame(0.467914432F, 255F, _cubicBezierEasingFunction_0);
                // Frame 187.7.
                result.InsertKeyFrame(0.521390378F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 206.95.
                result.InsertKeyFrame(0.574866295F, 255F, _cubicBezierEasingFunction_0);
                // Frame 226.2.
                result.InsertKeyFrame(0.628342271F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 245.45.
                result.InsertKeyFrame(0.681818187F, 255F, _cubicBezierEasingFunction_0);
                // Frame 264.71.
                result.InsertKeyFrame(0.735294104F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 283.96.
                result.InsertKeyFrame(0.78877008F, 255F, _cubicBezierEasingFunction_0);
                // Frame 303.21.
                result.InsertKeyFrame(0.842245996F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 322.46.
                result.InsertKeyFrame(0.895721912F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.71.
                result.InsertKeyFrame(0.949197888F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 345.56.
                result.InsertKeyFrame(0.959893048F, 154.341293F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_188p7_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_188p7_to_255 = CreateScalarKeyFrameAnimation(0F, 188.699997F, _holdThenStepEasingFunction);
                // Frame 9.76.
                result.InsertKeyFrame(0.0271002706F, 255F, _cubicBezierEasingFunction_0);
                // Frame 29.27.
                result.InsertKeyFrame(0.08130081F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 48.78.
                result.InsertKeyFrame(0.135501355F, 255F, _cubicBezierEasingFunction_0);
                // Frame 68.29.
                result.InsertKeyFrame(0.1897019F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 87.8.
                result.InsertKeyFrame(0.243902445F, 255F, _cubicBezierEasingFunction_0);
                // Frame 107.32.
                result.InsertKeyFrame(0.298102975F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 126.83.
                result.InsertKeyFrame(0.352303535F, 255F, _cubicBezierEasingFunction_0);
                // Frame 146.34.
                result.InsertKeyFrame(0.406504065F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 165.85.
                result.InsertKeyFrame(0.460704595F, 255F, _cubicBezierEasingFunction_0);
                // Frame 185.37.
                result.InsertKeyFrame(0.514905155F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 204.88.
                result.InsertKeyFrame(0.569105685F, 255F, _cubicBezierEasingFunction_0);
                // Frame 224.39.
                result.InsertKeyFrame(0.623306215F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 243.9.
                result.InsertKeyFrame(0.677506804F, 255F, _cubicBezierEasingFunction_0);
                // Frame 263.41.
                result.InsertKeyFrame(0.731707335F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 282.93.
                result.InsertKeyFrame(0.785907865F, 255F, _cubicBezierEasingFunction_0);
                // Frame 302.44.
                result.InsertKeyFrame(0.840108395F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 321.95.
                result.InsertKeyFrame(0.894308925F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.46.
                result.InsertKeyFrame(0.948509514F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 350.24.
                result.InsertKeyFrame(0.972899735F, 187.894196F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_221p85_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_221p85_to_255 = CreateScalarKeyFrameAnimation(0F, 221.850006F, _holdThenStepEasingFunction);
                // Frame 4.95.
                result.InsertKeyFrame(0.0137362638F, 255F, _cubicBezierEasingFunction_0);
                // Frame 24.73.
                result.InsertKeyFrame(0.068681322F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 44.51.
                result.InsertKeyFrame(0.123626374F, 255F, _cubicBezierEasingFunction_0);
                // Frame 64.29.
                result.InsertKeyFrame(0.178571433F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 84.07.
                result.InsertKeyFrame(0.233516484F, 255F, _cubicBezierEasingFunction_0);
                // Frame 103.85.
                result.InsertKeyFrame(0.288461536F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 123.63.
                result.InsertKeyFrame(0.343406588F, 255F, _cubicBezierEasingFunction_0);
                // Frame 143.41.
                result.InsertKeyFrame(0.39835164F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 163.19.
                result.InsertKeyFrame(0.453296691F, 255F, _cubicBezierEasingFunction_0);
                // Frame 182.97.
                result.InsertKeyFrame(0.508241773F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 202.75.
                result.InsertKeyFrame(0.563186824F, 255F, _cubicBezierEasingFunction_0);
                // Frame 222.53.
                result.InsertKeyFrame(0.618131876F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 242.31.
                result.InsertKeyFrame(0.673076928F, 255F, _cubicBezierEasingFunction_0);
                // Frame 262.09.
                result.InsertKeyFrame(0.728021979F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 281.87.
                result.InsertKeyFrame(0.782967031F, 255F, _cubicBezierEasingFunction_0);
                // Frame 301.65.
                result.InsertKeyFrame(0.837912083F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 321.43.
                result.InsertKeyFrame(0.892857134F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.21.
                result.InsertKeyFrame(0.947802186F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 355.05.
                result.InsertKeyFrame(0.986263752F, 221.447098F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_255_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_255_to_255 = CreateScalarKeyFrameAnimation(0F, 255F, _holdThenStepEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.055555556F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 40.
                result.InsertKeyFrame(0.111111112F, 255F, _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 80.
                result.InsertKeyFrame(0.222222224F, 255F, _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(0.277777791F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, 255F, _cubicBezierEasingFunction_0);
                // Frame 140.
                result.InsertKeyFrame(0.388888896F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 160.
                result.InsertKeyFrame(0.444444448F, 255F, _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 200.
                result.InsertKeyFrame(0.555555582F, 255F, _cubicBezierEasingFunction_0);
                // Frame 220.
                result.InsertKeyFrame(0.611111104F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, 255F, _cubicBezierEasingFunction_0);
                // Frame 260.
                result.InsertKeyFrame(0.722222209F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 280.
                result.InsertKeyFrame(0.777777791F, 255F, _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 320.
                result.InsertKeyFrame(0.888888896F, 255F, _cubicBezierEasingFunction_0);
                // Frame 340.
                result.InsertKeyFrame(0.944444418F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 359.
                result.InsertKeyFrame(0.997222245F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_45()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 359.
                result.InsertKeyFrame(0.997222245F, 45F, CubicBezierEasingFunction_0());
                return result;
            }

            // Shape tree root for layer: sun
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Offset:<256, 256>
                shapes.Add(SpriteShape_00());
                // Offset:<256, 256>
                shapes.Add(SpriteShape_01());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                // Offset:<256, 256>
                result.Shapes.Add(SpriteShape_02());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Offset:<424, 194>
                shapes.Add(SpriteShape_03());
                // Offset:<364, 194>
                shapes.Add(SpriteShape_04());
                // Offset:<392, 226>
                shapes.Add(SpriteShape_05());
                // Offset:<332, 226>
                shapes.Add(SpriteShape_06());
                // Offset:<360, 262>
                shapes.Add(SpriteShape_07());
                // Offset:<300, 262>
                shapes.Add(SpriteShape_08());
                // Offset:<328, 294>
                shapes.Add(SpriteShape_09());
                // Offset:<268, 294>
                shapes.Add(SpriteShape_10());
                // Offset:<296, 330>
                shapes.Add(SpriteShape_11());
                // Offset:<236, 330>
                shapes.Add(SpriteShape_12());
                // Offset:<264, 362>
                shapes.Add(SpriteShape_13());
                // Offset:<204, 362>
                shapes.Add(SpriteShape_14());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(512F, 512F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            internal Dust_day_AnimatedVisual_UAPv8(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(512F, 512F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 8);
            }
        }

        sealed class Dust_day_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 60000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionLinearGradientBrush _linearGradientBrush_01;
            CompositionLinearGradientBrush _linearGradientBrush_02;
            CompositionLinearGradientBrush _linearGradientBrush_03;
            CompositionLinearGradientBrush _linearGradientBrush_04;
            CompositionLinearGradientBrush _linearGradientBrush_05;
            CompositionLinearGradientBrush _linearGradientBrush_06;
            CompositionLinearGradientBrush _linearGradientBrush_07;
            CompositionLinearGradientBrush _linearGradientBrush_08;
            CompositionLinearGradientBrush _linearGradientBrush_09;
            CompositionLinearGradientBrush _linearGradientBrush_10;
            CompositionLinearGradientBrush _linearGradientBrush_11;
            CompositionLinearGradientBrush _linearGradientBrush_12;
            CompositionPathGeometry _pathGeometry_2;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _colorExpressionAnimation_00;
            ExpressionAnimation _colorExpressionAnimation_01;
            ExpressionAnimation _colorExpressionAnimation_02;
            ExpressionAnimation _colorExpressionAnimation_03;
            ExpressionAnimation _colorExpressionAnimation_04;
            ExpressionAnimation _colorExpressionAnimation_05;
            ExpressionAnimation _colorExpressionAnimation_06;
            ExpressionAnimation _colorExpressionAnimation_07;
            ExpressionAnimation _colorExpressionAnimation_08;
            ExpressionAnimation _colorExpressionAnimation_09;
            ExpressionAnimation _colorExpressionAnimation_10;
            ExpressionAnimation _colorExpressionAnimation_11;
            ExpressionAnimation _rootProgress;
            ExpressionAnimation _rootProgressRemapped_0;
            ExpressionAnimation _rootProgressRemapped_1;
            ExpressionAnimation _rootProgressRemapped_2;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_155p55_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_188p7_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_221p85_to_255;
            ScalarKeyFrameAnimation _opacity0ScalarAnimation_255_to_255;
            StepEasingFunction _holdThenStepEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: sun
            // - -  Offset:<256, 256>
            // - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_00()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_01(), Geometry_02(), Geometry_03(), Geometry_04(), Geometry_05(), Geometry_06(), Geometry_07(), Geometry_08() },
                    CanvasFilledRegionDetermination.Alternate);
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, -130.345001F));
                    builder.AddLine(new Vector2(0F, -180F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(0F, 180F));
                    builder.AddLine(new Vector2(0F, 130.345001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(92.1679993F, -92.1679993F));
                    builder.AddLine(new Vector2(127.278999F, -127.278999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-127.278999F, 127.278999F));
                    builder.AddLine(new Vector2(-92.1679993F, 92.1679993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-92.1679993F, -92.1679993F));
                    builder.AddLine(new Vector2(-127.278999F, -127.278999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(127.278999F, 127.278999F));
                    builder.AddLine(new Vector2(92.1679993F, 92.1679993F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-130.345001F, 0F));
                    builder.AddLine(new Vector2(-180F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: sun
            // - - -  Offset:<256, 256>
            // - - Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(180F, 0F));
                    builder.AddLine(new Vector2(130.345001F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: sun
            // - -  Offset:<256, 256>
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(84F, 0F));
                    builder.AddCubicBezier(new Vector2(84F, 46.3919983F), new Vector2(46.3919983F, 84F), new Vector2(0F, 84F));
                    builder.AddCubicBezier(new Vector2(-46.3919983F, 84F), new Vector2(-84F, 46.3919983F), new Vector2(-84F, 0F));
                    builder.AddCubicBezier(new Vector2(-84F, -46.3919983F), new Vector2(-46.3919983F, -84F), new Vector2(0F, -84F));
                    builder.AddCubicBezier(new Vector2(46.3919983F, -84F), new Vector2(84F, -46.3919983F), new Vector2(84F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12F, 0F));
                    builder.AddCubicBezier(new Vector2(12F, 6.62699986F), new Vector2(6.62699986F, 12F), new Vector2(0F, 12F));
                    builder.AddCubicBezier(new Vector2(-6.62699986F, 12F), new Vector2(-12F, 6.62699986F), new Vector2(-12F, 0F));
                    builder.AddCubicBezier(new Vector2(-12F, -6.62699986F), new Vector2(-6.62699986F, -12F), new Vector2(0F, -12F));
                    builder.AddCubicBezier(new Vector2(6.62699986F, -12F), new Vector2(12F, -6.62699986F), new Vector2(12F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFFBBF24()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFB, 0xBF, 0x24));
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_AlmostOrange_FFF8AF18()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF8, 0xAF, 0x18));
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_00()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_00());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_01()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_01());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_02()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_02());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_03()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_03());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_04()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_04());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_05()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_05());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_06()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_06());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_07()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_07());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_08()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_08());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_09()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_09());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_10()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_10());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_11()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", ColorExpressionAnimation_11());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_00()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_00);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_01()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_01);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_02()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_02);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_03()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_03);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_04()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_04);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_05()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_05);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_06()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_06);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_07()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_07);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_08()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_08);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_09()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_09);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_10()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_10);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_11()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                result.StartAnimation("Color", _colorExpressionAnimation_11);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<424, 194>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_00()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_01);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<364, 194>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_01()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_02);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<392, 226>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_02()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_03);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<332, 226>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_03()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_04);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<360, 262>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_04()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_05);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<300, 262>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_05()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_06);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<328, 294>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_06()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_07);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<268, 294>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_07()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_08);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<296, 330>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_08()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_09);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<236, 330>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_09()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_10);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<264, 362>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_10()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_11);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<204, 362>
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_11()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,252,224,112)", "my", _linearGradientBrush_12);
                return result;
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostGoldenrod_FFFABE23()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xFA, 0xBE, 0x23));
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p45_AlmostGoldenrod_FFFABE23()
            {
                return _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0xFF, 0xFA, 0xBE, 0x23));
            }

            // - - Shape tree root for layer: sun
            // -  Offset:<256, 256>
            // Stop 2
            CompositionColorGradientStop GradientStop_1_AlmostOrange_FFF59E0A()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xF5, 0x9E, 0x0A));
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionLinearGradientBrush LinearGradientBrush_00()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostGoldenrod_FFFABE23());
                colorStops.Add(GradientStop_0p45_AlmostGoldenrod_FFFABE23());
                colorStops.Add(GradientStop_1_AlmostOrange_FFF59E0A());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-41.5169983F, -71.8710022F);
                result.EndPoint = new Vector2(42.4970016F, 73.6449966F);
                return result;
            }

            // - Layer aggregator
            // Offset:<424, 194>
            CompositionLinearGradientBrush LinearGradientBrush_01()
            {
                var result = _linearGradientBrush_01 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_00());
                colorStops.Add(AnimatedGradientStop_0p45_00());
                colorStops.Add(AnimatedGradientStop_1_00());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_155p55_to_255(), RootProgressRemapped_0());
                return result;
            }

            // - Layer aggregator
            // Offset:<364, 194>
            CompositionLinearGradientBrush LinearGradientBrush_02()
            {
                var result = _linearGradientBrush_02 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_01());
                colorStops.Add(AnimatedGradientStop_0p45_01());
                colorStops.Add(AnimatedGradientStop_1_01());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_188p7_to_255(), RootProgressRemapped_1());
                return result;
            }

            // - Layer aggregator
            // Offset:<392, 226>
            CompositionLinearGradientBrush LinearGradientBrush_03()
            {
                var result = _linearGradientBrush_03 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_02());
                colorStops.Add(AnimatedGradientStop_0p45_02());
                colorStops.Add(AnimatedGradientStop_1_02());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_221p85_to_255(), RootProgressRemapped_2());
                return result;
            }

            // - Layer aggregator
            // Offset:<332, 226>
            CompositionLinearGradientBrush LinearGradientBrush_04()
            {
                var result = _linearGradientBrush_04 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_03());
                colorStops.Add(AnimatedGradientStop_0p45_03());
                colorStops.Add(AnimatedGradientStop_1_03());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_255_to_255(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<360, 262>
            CompositionLinearGradientBrush LinearGradientBrush_05()
            {
                var result = _linearGradientBrush_05 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_04());
                colorStops.Add(AnimatedGradientStop_0p45_04());
                colorStops.Add(AnimatedGradientStop_1_04());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_155p55_to_255, _rootProgressRemapped_0);
                return result;
            }

            // - Layer aggregator
            // Offset:<300, 262>
            CompositionLinearGradientBrush LinearGradientBrush_06()
            {
                var result = _linearGradientBrush_06 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_05());
                colorStops.Add(AnimatedGradientStop_0p45_05());
                colorStops.Add(AnimatedGradientStop_1_05());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_188p7_to_255, _rootProgressRemapped_1);
                return result;
            }

            // - Layer aggregator
            // Offset:<328, 294>
            CompositionLinearGradientBrush LinearGradientBrush_07()
            {
                var result = _linearGradientBrush_07 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_06());
                colorStops.Add(AnimatedGradientStop_0p45_06());
                colorStops.Add(AnimatedGradientStop_1_06());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_221p85_to_255, _rootProgressRemapped_2);
                return result;
            }

            // - Layer aggregator
            // Offset:<268, 294>
            CompositionLinearGradientBrush LinearGradientBrush_08()
            {
                var result = _linearGradientBrush_08 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_07());
                colorStops.Add(AnimatedGradientStop_0p45_07());
                colorStops.Add(AnimatedGradientStop_1_07());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_255_to_255, _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<296, 330>
            CompositionLinearGradientBrush LinearGradientBrush_09()
            {
                var result = _linearGradientBrush_09 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 155.550003F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_08());
                colorStops.Add(AnimatedGradientStop_0p45_08());
                colorStops.Add(AnimatedGradientStop_1_08());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_155p55_to_255, _rootProgressRemapped_0);
                return result;
            }

            // - Layer aggregator
            // Offset:<236, 330>
            CompositionLinearGradientBrush LinearGradientBrush_10()
            {
                var result = _linearGradientBrush_10 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 188.699997F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_09());
                colorStops.Add(AnimatedGradientStop_0p45_09());
                colorStops.Add(AnimatedGradientStop_1_09());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_188p7_to_255, _rootProgressRemapped_1);
                return result;
            }

            // - Layer aggregator
            // Offset:<264, 362>
            CompositionLinearGradientBrush LinearGradientBrush_11()
            {
                var result = _linearGradientBrush_11 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 221.850006F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_10());
                colorStops.Add(AnimatedGradientStop_0p45_10());
                colorStops.Add(AnimatedGradientStop_1_10());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_221p85_to_255, _rootProgressRemapped_2);
                return result;
            }

            // - Layer aggregator
            // Offset:<204, 362>
            CompositionLinearGradientBrush LinearGradientBrush_12()
            {
                var result = _linearGradientBrush_12 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_11());
                colorStops.Add(AnimatedGradientStop_0p45_11());
                colorStops.Add(AnimatedGradientStop_1_11());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-7F, -11F);
                result.EndPoint = new Vector2(5.00199986F, 9.78800011F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", _opacity0ScalarAnimation_255_to_255, _rootProgress);
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            // Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            CompositionPathGeometry PathGeometry_2()
            {
                return _pathGeometry_2 = _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // Shape tree root for layer: sun
            // Path 8+Path 7+Path 6+Path 5+Path 4+Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<256, 256>
                var result = CreateSpriteShape(PathGeometry_0(), new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F));;
                result.StrokeBrush = ColorBrush_AlmostGoldenrod_FFFBBF24();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 24F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_45(), RootProgress());
                return result;
            }

            // Shape tree root for layer: sun
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<256, 256>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), LinearGradientBrush_00());;
                result.StrokeBrush = ColorBrush_AlmostOrange_FFF8AF18();
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 6F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<424, 194>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 424F, 194F), LinearGradientBrush_01());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<364, 194>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 364F, 194F), LinearGradientBrush_02());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<392, 226>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 392F, 226F), LinearGradientBrush_03());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<332, 226>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 332F, 226F), LinearGradientBrush_04());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<360, 262>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 360F, 262F), LinearGradientBrush_05());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<300, 262>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 300F, 262F), LinearGradientBrush_06());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<328, 294>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 328F, 294F), LinearGradientBrush_07());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<268, 294>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 268F, 294F), LinearGradientBrush_08());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<296, 330>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 296F, 330F), LinearGradientBrush_09());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<236, 330>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 236F, 330F), LinearGradientBrush_10());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<264, 362>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 264F, 362F), LinearGradientBrush_11());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<204, 362>
                var geometry = _pathGeometry_2;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 204F, 362F), LinearGradientBrush_12());;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Shape tree root for layer: sun
                children.InsertAtTop(ShapeVisual_0());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation ColorExpressionAnimation_00()
            {
                var result = _colorExpressionAnimation_00 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_01.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_01()
            {
                var result = _colorExpressionAnimation_01 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_02.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_02()
            {
                var result = _colorExpressionAnimation_02 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_03.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_03()
            {
                var result = _colorExpressionAnimation_03 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_04.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_04()
            {
                var result = _colorExpressionAnimation_04 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_05.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_05()
            {
                var result = _colorExpressionAnimation_05 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_06.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_06()
            {
                var result = _colorExpressionAnimation_06 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_07.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_07()
            {
                var result = _colorExpressionAnimation_07 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_08.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_08()
            {
                var result = _colorExpressionAnimation_08 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_09.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_09()
            {
                var result = _colorExpressionAnimation_09 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_10.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_10()
            {
                var result = _colorExpressionAnimation_10 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_11.Properties);
                return result;
            }

            ExpressionAnimation ColorExpressionAnimation_11()
            {
                var result = _colorExpressionAnimation_11 = _c.CreateExpressionAnimation("ColorRGB(my.Opacity0,252,230,137)");
                result.SetReferenceParameter("my", _linearGradientBrush_12.Properties);
                return result;
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_0()
            {
                var result = _rootProgressRemapped_0 = _c.CreateExpressionAnimation("_.Progress*0.9625669");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_1()
            {
                var result = _rootProgressRemapped_1 = _c.CreateExpressionAnimation("_.Progress*0.9756098");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            ExpressionAnimation RootProgressRemapped_2()
            {
                var result = _rootProgressRemapped_2 = _c.CreateExpressionAnimation("_.Progress*0.989011");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_155p55_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_155p55_to_255 = CreateScalarKeyFrameAnimation(0F, 155.550003F, _holdThenStepEasingFunction);
                // Frame 14.44.
                result.InsertKeyFrame(0.0401069522F, 255F, _cubicBezierEasingFunction_0);
                // Frame 33.69.
                result.InsertKeyFrame(0.0935828909F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 52.94.
                result.InsertKeyFrame(0.14705883F, 255F, _cubicBezierEasingFunction_0);
                // Frame 72.19.
                result.InsertKeyFrame(0.200534761F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 91.44.
                result.InsertKeyFrame(0.254010707F, 255F, _cubicBezierEasingFunction_0);
                // Frame 110.7.
                result.InsertKeyFrame(0.307486624F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 129.95.
                result.InsertKeyFrame(0.36096257F, 255F, _cubicBezierEasingFunction_0);
                // Frame 149.2.
                result.InsertKeyFrame(0.414438516F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 168.45.
                result.InsertKeyFrame(0.467914432F, 255F, _cubicBezierEasingFunction_0);
                // Frame 187.7.
                result.InsertKeyFrame(0.521390378F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 206.95.
                result.InsertKeyFrame(0.574866295F, 255F, _cubicBezierEasingFunction_0);
                // Frame 226.2.
                result.InsertKeyFrame(0.628342271F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 245.45.
                result.InsertKeyFrame(0.681818187F, 255F, _cubicBezierEasingFunction_0);
                // Frame 264.71.
                result.InsertKeyFrame(0.735294104F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 283.96.
                result.InsertKeyFrame(0.78877008F, 255F, _cubicBezierEasingFunction_0);
                // Frame 303.21.
                result.InsertKeyFrame(0.842245996F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 322.46.
                result.InsertKeyFrame(0.895721912F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.71.
                result.InsertKeyFrame(0.949197888F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 345.56.
                result.InsertKeyFrame(0.959893048F, 154.341293F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_188p7_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_188p7_to_255 = CreateScalarKeyFrameAnimation(0F, 188.699997F, _holdThenStepEasingFunction);
                // Frame 9.76.
                result.InsertKeyFrame(0.0271002706F, 255F, _cubicBezierEasingFunction_0);
                // Frame 29.27.
                result.InsertKeyFrame(0.08130081F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 48.78.
                result.InsertKeyFrame(0.135501355F, 255F, _cubicBezierEasingFunction_0);
                // Frame 68.29.
                result.InsertKeyFrame(0.1897019F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 87.8.
                result.InsertKeyFrame(0.243902445F, 255F, _cubicBezierEasingFunction_0);
                // Frame 107.32.
                result.InsertKeyFrame(0.298102975F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 126.83.
                result.InsertKeyFrame(0.352303535F, 255F, _cubicBezierEasingFunction_0);
                // Frame 146.34.
                result.InsertKeyFrame(0.406504065F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 165.85.
                result.InsertKeyFrame(0.460704595F, 255F, _cubicBezierEasingFunction_0);
                // Frame 185.37.
                result.InsertKeyFrame(0.514905155F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 204.88.
                result.InsertKeyFrame(0.569105685F, 255F, _cubicBezierEasingFunction_0);
                // Frame 224.39.
                result.InsertKeyFrame(0.623306215F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 243.9.
                result.InsertKeyFrame(0.677506804F, 255F, _cubicBezierEasingFunction_0);
                // Frame 263.41.
                result.InsertKeyFrame(0.731707335F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 282.93.
                result.InsertKeyFrame(0.785907865F, 255F, _cubicBezierEasingFunction_0);
                // Frame 302.44.
                result.InsertKeyFrame(0.840108395F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 321.95.
                result.InsertKeyFrame(0.894308925F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.46.
                result.InsertKeyFrame(0.948509514F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 350.24.
                result.InsertKeyFrame(0.972899735F, 187.894196F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_221p85_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_221p85_to_255 = CreateScalarKeyFrameAnimation(0F, 221.850006F, _holdThenStepEasingFunction);
                // Frame 4.95.
                result.InsertKeyFrame(0.0137362638F, 255F, _cubicBezierEasingFunction_0);
                // Frame 24.73.
                result.InsertKeyFrame(0.068681322F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 44.51.
                result.InsertKeyFrame(0.123626374F, 255F, _cubicBezierEasingFunction_0);
                // Frame 64.29.
                result.InsertKeyFrame(0.178571433F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 84.07.
                result.InsertKeyFrame(0.233516484F, 255F, _cubicBezierEasingFunction_0);
                // Frame 103.85.
                result.InsertKeyFrame(0.288461536F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 123.63.
                result.InsertKeyFrame(0.343406588F, 255F, _cubicBezierEasingFunction_0);
                // Frame 143.41.
                result.InsertKeyFrame(0.39835164F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 163.19.
                result.InsertKeyFrame(0.453296691F, 255F, _cubicBezierEasingFunction_0);
                // Frame 182.97.
                result.InsertKeyFrame(0.508241773F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 202.75.
                result.InsertKeyFrame(0.563186824F, 255F, _cubicBezierEasingFunction_0);
                // Frame 222.53.
                result.InsertKeyFrame(0.618131876F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 242.31.
                result.InsertKeyFrame(0.673076928F, 255F, _cubicBezierEasingFunction_0);
                // Frame 262.09.
                result.InsertKeyFrame(0.728021979F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 281.87.
                result.InsertKeyFrame(0.782967031F, 255F, _cubicBezierEasingFunction_0);
                // Frame 301.65.
                result.InsertKeyFrame(0.837912083F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 321.43.
                result.InsertKeyFrame(0.892857134F, 255F, _cubicBezierEasingFunction_0);
                // Frame 341.21.
                result.InsertKeyFrame(0.947802186F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 355.05.
                result.InsertKeyFrame(0.986263752F, 221.447098F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_255_to_255()
            {
                // Frame 0.
                var result = _opacity0ScalarAnimation_255_to_255 = CreateScalarKeyFrameAnimation(0F, 255F, _holdThenStepEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.055555556F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 40.
                result.InsertKeyFrame(0.111111112F, 255F, _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 80.
                result.InsertKeyFrame(0.222222224F, 255F, _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(0.277777791F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, 255F, _cubicBezierEasingFunction_0);
                // Frame 140.
                result.InsertKeyFrame(0.388888896F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 160.
                result.InsertKeyFrame(0.444444448F, 255F, _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 200.
                result.InsertKeyFrame(0.555555582F, 255F, _cubicBezierEasingFunction_0);
                // Frame 220.
                result.InsertKeyFrame(0.611111104F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, 255F, _cubicBezierEasingFunction_0);
                // Frame 260.
                result.InsertKeyFrame(0.722222209F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 280.
                result.InsertKeyFrame(0.777777791F, 255F, _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 320.
                result.InsertKeyFrame(0.888888896F, 255F, _cubicBezierEasingFunction_0);
                // Frame 340.
                result.InsertKeyFrame(0.944444418F, 127.5F, _cubicBezierEasingFunction_0);
                // Frame 359.
                result.InsertKeyFrame(0.997222245F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: sun
            // Offset:<256, 256>
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_45()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 359.
                result.InsertKeyFrame(0.997222245F, 45F, CubicBezierEasingFunction_0());
                return result;
            }

            // Shape tree root for layer: sun
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Offset:<256, 256>
                shapes.Add(SpriteShape_00());
                // Offset:<256, 256>
                shapes.Add(SpriteShape_01());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Offset:<424, 194>
                shapes.Add(SpriteShape_02());
                // Offset:<364, 194>
                shapes.Add(SpriteShape_03());
                // Offset:<392, 226>
                shapes.Add(SpriteShape_04());
                // Offset:<332, 226>
                shapes.Add(SpriteShape_05());
                // Offset:<360, 262>
                shapes.Add(SpriteShape_06());
                // Offset:<300, 262>
                shapes.Add(SpriteShape_07());
                // Offset:<328, 294>
                shapes.Add(SpriteShape_08());
                // Offset:<268, 294>
                shapes.Add(SpriteShape_09());
                // Offset:<296, 330>
                shapes.Add(SpriteShape_10());
                // Offset:<236, 330>
                shapes.Add(SpriteShape_11());
                // Offset:<264, 362>
                shapes.Add(SpriteShape_12());
                // Offset:<204, 362>
                shapes.Add(SpriteShape_13());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            internal Dust_day_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(512F, 512F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
