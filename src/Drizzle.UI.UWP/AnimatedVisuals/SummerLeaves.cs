//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile SummerLeaves.json
//       
//       Input file:
//           SummerLeaves.json (16654 bytes created 22:55+05:30 Aug 25 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   132 |
// |--------------------------+-------|
// | Expression animators     |    12 |
// | KeyFrame animators       |    12 |
// | Reference parameters     |    12 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |    12 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |    13 |
// |--------------------------+-------|
// | Brushes                  |    13 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        summer
    // Frame rate:  25 fps
    // Frame count: 54
    // Duration:    2160.0 mS
    sealed class SummerLeaves
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 2.160 seconds.
        internal const long c_durationTicks = 21600000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (SummerLeaves_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new SummerLeaves_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 54d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 25d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 54d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class SummerLeaves_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 21600000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionPathGeometry _pathGeometry_7;
            CompositionPathGeometry _pathGeometry_8;
            CompositionPathGeometry _pathGeometry_9;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<1027.147, 519.312>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-32.8709984F, -64.9560013F));
                    builder.AddCubicBezier(new Vector2(-64.7249985F, -61.6980019F), new Vector2(-88.8389969F, -36.112999F), new Vector2(-91.4140015F, -5.32200003F));
                    builder.AddLine(new Vector2(-27.8409996F, -21.2140007F));
                    builder.AddLine(new Vector2(-89.2139969F, 17.7689991F));
                    builder.AddCubicBezier(new Vector2(-80.8330002F, 47.9580002F), new Vector2(-51.7400017F, 68.6340027F), new Vector2(-19.5249996F, 65.3300018F));
                    builder.AddCubicBezier(new Vector2(16.4549999F, 61.6640015F), new Vector2(91.4140015F, -11.8570004F), new Vector2(91.4140015F, -11.8570004F));
                    builder.AddCubicBezier(new Vector2(91.4140015F, -11.8570004F), new Vector2(3.10400009F, -68.6350021F), new Vector2(-32.8709984F, -64.9560013F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<678.60004, 519.31305>
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(91.2300034F, -8.49499989F));
                    builder.AddCubicBezier(new Vector2(87.3570023F, -37.8880005F), new Vector2(63.8180008F, -61.894001F), new Vector2(33.0410004F, -65.038002F));
                    builder.AddCubicBezier(new Vector2(-2.93400002F, -68.7170029F), new Vector2(-91.2300034F, -11.9399996F), new Vector2(-91.2300034F, -11.9399996F));
                    builder.AddCubicBezier(new Vector2(-91.2300034F, -11.9399996F), new Vector2(-16.2709999F, 61.5800018F), new Vector2(19.7029991F, 65.2460022F));
                    builder.AddCubicBezier(new Vector2(53.5569992F, 68.7170029F), new Vector2(84.0059967F, 45.7400017F), new Vector2(90.5479965F, 13.0360003F));
                    builder.AddLine(new Vector2(39.2820015F, -22.6289997F));
                    builder.AddLine(new Vector2(91.2300034F, -8.49499989F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<673.91003, 405.147>
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-11.5649996F, 36.4300003F));
                    builder.AddCubicBezier(new Vector2(8.56200027F, 47.8009987F), new Vector2(34.0960007F, 40.6839981F), new Vector2(45.4399986F, 20.5499992F));
                    builder.AddCubicBezier(new Vector2(56.7980003F, 0.42899999F), new Vector2(49.6870003F, -25.0979996F), new Vector2(29.566F, -36.4560013F));
                    builder.AddCubicBezier(new Vector2(9.43900013F, -47.8009987F), new Vector2(-56.7980003F, -37.125F), new Vector2(-56.7980003F, -37.125F));
                    builder.AddCubicBezier(new Vector2(-56.7980003F, -37.125F), new Vector2(-31.6860008F, 25.0849991F), new Vector2(-11.5649996F, 36.4300003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<749.84, 282.80798>
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(37.4269981F, 27.8840008F));
                    builder.AddCubicBezier(new Vector2(52.3170013F, 10.2180004F), new Vector2(50.0740013F, -16.191F), new Vector2(32.4230003F, -31.0949993F));
                    builder.AddCubicBezier(new Vector2(14.7489996F, -45.9780006F), new Vector2(-52.3160019F, -47.7980003F), new Vector2(-52.3160019F, -47.7980003F));
                    builder.AddCubicBezier(new Vector2(-52.3160019F, -47.7980003F), new Vector2(-39.2190018F, 18.0109997F), new Vector2(-21.5459995F, 32.887001F));
                    builder.AddCubicBezier(new Vector2(-3.87299991F, 47.7980003F), new Vector2(22.5300007F, 45.5559998F), new Vector2(37.4269981F, 27.8840008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<819.16003, 404.056>
            CanvasGeometry Geometry_4()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-36.9410019F, 29.0919991F));
                    builder.AddCubicBezier(new Vector2(-26.0979996F, 49.5130005F), new Vector2(-0.759000003F, 57.2529984F), new Vector2(19.6490002F, 46.4039993F));
                    builder.AddCubicBezier(new Vector2(40.0439987F, 35.5600014F), new Vector2(47.7980003F, 10.2209997F), new Vector2(36.9550018F, -10.1750002F));
                    builder.AddCubicBezier(new Vector2(26.118F, -30.5890007F), new Vector2(-35.4560013F, -57.2529984F), new Vector2(-35.4560013F, -57.2529984F));
                    builder.AddCubicBezier(new Vector2(-35.4560013F, -57.2529984F), new Vector2(-47.7980003F, 8.6960001F), new Vector2(-36.9410019F, 29.0919991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<885.095, 204.39798>
            CanvasGeometry Geometry_5()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.62600005F, 91.7050018F));
                    builder.AddCubicBezier(new Vector2(-0.167999998F, 91.7389984F), new Vector2(1.28299999F, 91.7990036F), new Vector2(2.76200008F, 91.7389984F));
                    builder.AddCubicBezier(new Vector2(38.9099998F, 90.2129974F), new Vector2(66.9720001F, 59.6699982F), new Vector2(65.4059982F, 23.5219994F));
                    builder.AddCubicBezier(new Vector2(63.8810005F, -12.6059999F), new Vector2(-5.03800011F, -91.7990036F), new Vector2(-5.03800011F, -91.7990036F));
                    builder.AddCubicBezier(new Vector2(-5.03800011F, -91.7990036F), new Vector2(-66.9729996F, -7.03399992F), new Vector2(-65.4349976F, 29.1070004F));
                    builder.AddCubicBezier(new Vector2(-64.0970001F, 60.5940018F), new Vector2(-40.730999F, 85.9120026F), new Vector2(-10.8439999F, 90.8949966F));
                    builder.AddLine(new Vector2(-6.69000006F, 40.3510017F));
                    builder.AddLine(new Vector2(-1.62600005F, 91.7050018F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<809.113, 336.54904>
            CanvasGeometry Geometry_6()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(77.2310028F, -37.8050003F));
                    builder.AddLine(new Vector2(21.1009998F, -23.7779999F));
                    builder.AddLine(new Vector2(0.524999976F, -232.528F));
                    builder.AddLine(new Vector2(-4.53800011F, -283.881012F));
                    builder.AddLine(new Vector2(-8.69200039F, -233.337006F));
                    builder.AddLine(new Vector2(-25.9169998F, -23.7779999F));
                    builder.AddLine(new Vector2(-88.8560028F, -40.8950005F));
                    builder.AddLine(new Vector2(-140.804001F, -55.0299988F));
                    builder.AddLine(new Vector2(-89.538002F, -19.3640003F));
                    builder.AddLine(new Vector2(-23.4220009F, 26.8059998F));
                    builder.AddLine(new Vector2(-31.9710007F, 283.881012F));
                    builder.AddLine(new Vector2(22.8799992F, 283.881012F));
                    builder.AddLine(new Vector2(14.3319998F, 26.8059998F));
                    builder.AddLine(new Vector2(79.4309998F, -14.6300001F));
                    builder.AddLine(new Vector2(140.804001F, -53.6570015F));
                    builder.AddLine(new Vector2(77.2310028F, -37.8050003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_7()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-45.4389992F, 20.5499992F));
                    builder.AddCubicBezier(new Vector2(-34.0810013F, 40.6839981F), new Vector2(-8.56299973F, 47.8009987F), new Vector2(11.5649996F, 36.4300003F));
                    builder.AddCubicBezier(new Vector2(31.7000008F, 25.0849991F), new Vector2(56.7970009F, -37.1240005F), new Vector2(56.7970009F, -37.1240005F));
                    builder.AddCubicBezier(new Vector2(56.7970009F, -37.1240005F), new Vector2(-9.43799973F, -47.8009987F), new Vector2(-29.552F, -36.4560013F));
                    builder.AddCubicBezier(new Vector2(-49.6870003F, -25.0970001F), new Vector2(-56.7970009F, 0.42899999F), new Vector2(-45.4389992F, 20.5499992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_8()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(21.5459995F, 32.887001F));
                    builder.AddCubicBezier(new Vector2(39.2190018F, 18.0109997F), new Vector2(52.3170013F, -47.7980003F), new Vector2(52.3170013F, -47.7980003F));
                    builder.AddCubicBezier(new Vector2(52.3170013F, -47.7980003F), new Vector2(-14.7360001F, -45.9780006F), new Vector2(-32.4099998F, -31.0949993F));
                    builder.AddCubicBezier(new Vector2(-50.0760002F, -16.191F), new Vector2(-52.3160019F, 10.2180004F), new Vector2(-37.4119987F, 27.8840008F));
                    builder.AddCubicBezier(new Vector2(-22.5160007F, 45.5559998F), new Vector2(3.87299991F, 47.7980003F), new Vector2(21.5459995F, 32.887001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_9()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-36.9679985F, -10.1750002F));
                    builder.AddCubicBezier(new Vector2(-47.8040009F, 10.2209997F), new Vector2(-40.0509987F, 35.5589981F), new Vector2(-19.6429996F, 46.4029999F));
                    builder.AddCubicBezier(new Vector2(0.765999973F, 57.2529984F), new Vector2(26.0909996F, 49.5130005F), new Vector2(36.9480019F, 29.0919991F));
                    builder.AddCubicBezier(new Vector2(47.8040009F, 8.6960001F), new Vector2(35.4500008F, -57.2529984F), new Vector2(35.4500008F, -57.2529984F));
                    builder.AddCubicBezier(new Vector2(35.4500008F, -57.2529984F), new Vector2(-26.1119995F, -30.5900002F), new Vector2(-36.9679985F, -10.1750002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<1027.147, 519.312>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_0()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), StepThenHoldEasingFunction());
                // Frame 48.9.
                // TransparentAlmostChocolate_00F05A23
                result.InsertKeyFrame(0.90559262F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), HoldThenStepEasingFunction());
                // Frame 51.
                // AlmostChocolate_FFF05A23
                result.InsertKeyFrame(0.944444418F, Color.FromArgb(0xFF, 0xF0, 0x5A, 0x23), CubicBezierEasingFunction_0());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<678.60004, 519.31305>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_1()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _stepThenHoldEasingFunction);
                // Frame 44.01.
                // TransparentAlmostChocolate_00F05A23
                result.InsertKeyFrame(0.814944446F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _holdThenStepEasingFunction);
                // Frame 46.1.
                // AlmostChocolate_FFF05A23
                result.InsertKeyFrame(0.853786886F, Color.FromArgb(0xFF, 0xF0, 0x5A, 0x23), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<673.91003, 405.147>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_2()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _stepThenHoldEasingFunction);
                // Frame 39.11.
                // TransparentAlmostChocolate_00F05A23
                result.InsertKeyFrame(0.724296272F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _holdThenStepEasingFunction);
                // Frame 41.21.
                // AlmostChocolate_FFF05A23
                result.InsertKeyFrame(0.763147414F, Color.FromArgb(0xFF, 0xF0, 0x5A, 0x23), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<885.095, 204.39798>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_3()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _stepThenHoldEasingFunction);
                // Frame 25.82.
                // TransparentAlmostChocolate_00F05A23
                result.InsertKeyFrame(0.478240728F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _holdThenStepEasingFunction);
                // Frame 27.92.
                // AlmostChocolate_FFF05A23
                result.InsertKeyFrame(0.517089844F, Color.FromArgb(0xFF, 0xF0, 0x5A, 0x23), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<1107.511, 405.147>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_4()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _stepThenHoldEasingFunction);
                // Frame 17.43.
                // TransparentAlmostChocolate_00F05A23
                result.InsertKeyFrame(0.322851866F, Color.FromArgb(0x00, 0xF0, 0x5A, 0x23), _holdThenStepEasingFunction);
                // Frame 19.53.
                // AlmostChocolate_FFF05A23
                result.InsertKeyFrame(0.361689806F, Color.FromArgb(0xFF, 0xF0, 0x5A, 0x23), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<749.84, 282.80798>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_0()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _stepThenHoldEasingFunction);
                // Frame 34.22.
                // TransparentAlmostDarkOrange_00F7921E
                result.InsertKeyFrame(0.633648157F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _holdThenStepEasingFunction);
                // Frame 36.31.
                // AlmostDarkOrange_FFF7921E
                result.InsertKeyFrame(0.672489882F, Color.FromArgb(0xFF, 0xF7, 0x92, 0x1E), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<819.16003, 404.056>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_1()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _stepThenHoldEasingFunction);
                // Frame 30.02.
                // TransparentAlmostDarkOrange_00F7921E
                result.InsertKeyFrame(0.555944443F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _holdThenStepEasingFunction);
                // Frame 32.12.
                // AlmostDarkOrange_FFF7921E
                result.InsertKeyFrame(0.594798923F, Color.FromArgb(0xFF, 0xF7, 0x92, 0x1E), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<1040.545, 282.80798>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_2()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _stepThenHoldEasingFunction);
                // Frame 9.39.
                // TransparentAlmostDarkOrange_00F7921E
                result.InsertKeyFrame(0.173925921F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _holdThenStepEasingFunction);
                // Frame 11.84.
                // AlmostDarkOrange_FFF7921E
                result.InsertKeyFrame(0.219238281F, Color.FromArgb(0xFF, 0xF7, 0x92, 0x1E), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<980.263, 404.057>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_3()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _stepThenHoldEasingFunction);
                // Frame 1.
                // TransparentAlmostDarkOrange_00F7921E
                result.InsertKeyFrame(0.0185185187F, Color.FromArgb(0x00, 0xF7, 0x92, 0x1E), _holdThenStepEasingFunction);
                // Frame 4.15.
                // AlmostDarkOrange_FFF7921E
                result.InsertKeyFrame(0.0767867491F, Color.FromArgb(0xFF, 0xF7, 0x92, 0x1E), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<1107.511, 405.147>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_0()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _stepThenHoldEasingFunction);
                // Frame 21.28.
                // TransparentAlmostYellowGreen_00A6C82D
                result.InsertKeyFrame(0.394055545F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _holdThenStepEasingFunction);
                // Frame 23.38.
                // AlmostYellowGreen_FFA6C82D
                result.InsertKeyFrame(0.432924628F, Color.FromArgb(0xFF, 0xA6, 0xC8, 0x2D), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<1040.545, 282.80798>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_1()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _stepThenHoldEasingFunction);
                // Frame 13.59.
                // TransparentAlmostYellowGreen_00A6C82D
                result.InsertKeyFrame(0.251629621F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _holdThenStepEasingFunction);
                // Frame 16.04.
                // AlmostYellowGreen_FFA6C82D
                result.InsertKeyFrame(0.29694733F, Color.FromArgb(0xFF, 0xA6, 0xC8, 0x2D), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<980.263, 404.057>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_2()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _stepThenHoldEasingFunction);
                // Frame 4.85.
                // TransparentAlmostYellowGreen_00A6C82D
                result.InsertKeyFrame(0.0897407383F, Color.FromArgb(0x00, 0xA6, 0xC8, 0x2D), _holdThenStepEasingFunction);
                // Frame 7.29.
                // AlmostYellowGreen_FFA6C82D
                result.InsertKeyFrame(0.135073066F, Color.FromArgb(0xFF, 0xA6, 0xC8, 0x2D), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // Offset:<1027.147, 519.312>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_0()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_0(), RootProgress());
                return result;
            }

            // - Layer aggregator
            // Offset:<678.60004, 519.31305>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_1()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<673.91003, 405.147>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_2()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<885.095, 204.39798>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_3()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_3(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<1107.511, 405.147>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_4()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_4(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<749.84, 282.80798>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_0()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<819.16003, 404.056>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_1()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<1040.545, 282.80798>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_2()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<980.263, 404.057>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_3()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_3(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<1107.511, 405.147>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_0()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<1040.545, 282.80798>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_1()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<980.263, 404.057>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_2()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<809.113, 336.54904>
            CompositionColorBrush ColorBrush_AlmostSaddleBrown_FF754B23()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x75, 0x4B, 0x23));
            }

            // - Layer aggregator
            // Offset:<1027.147, 519.312>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - Layer aggregator
            // Offset:<678.60004, 519.31305>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - Layer aggregator
            // Offset:<673.91003, 405.147>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - Layer aggregator
            // Offset:<749.84, 282.80798>
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - Layer aggregator
            // Offset:<819.16003, 404.056>
            CompositionPathGeometry PathGeometry_4()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_4()));
            }

            // - Layer aggregator
            // Offset:<885.095, 204.39798>
            CompositionPathGeometry PathGeometry_5()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_5()));
            }

            // - Layer aggregator
            // Offset:<809.113, 336.54904>
            CompositionPathGeometry PathGeometry_6()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_6()));
            }

            CompositionPathGeometry PathGeometry_7()
            {
                return _pathGeometry_7 = _c.CreatePathGeometry(new CompositionPath(Geometry_7()));
            }

            CompositionPathGeometry PathGeometry_8()
            {
                return _pathGeometry_8 = _c.CreatePathGeometry(new CompositionPath(Geometry_8()));
            }

            CompositionPathGeometry PathGeometry_9()
            {
                return _pathGeometry_9 = _c.CreatePathGeometry(new CompositionPath(Geometry_9()));
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<1118.811, 588.197>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1118.81104F, 588.197021F), AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_0());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<770.08, 588.28>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 770.080017F, 588.280029F), AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_1());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<730.958, 453.198>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 730.958008F, 453.197998F), AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_2());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<802.406, 330.856>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 802.406006F, 330.855988F), AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_0());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<867.208, 461.559>
                var geometry = PathGeometry_4();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 867.208008F, 461.55899F), AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_1());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<952.318, 296.447>
                var geometry = PathGeometry_5();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 952.317993F, 296.446991F), AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_3());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<950.167, 620.681>
                var geometry = PathGeometry_6();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 950.166992F, 620.68103F), ColorBrush_AlmostSaddleBrown_FF754B23());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<1164.559, 453.198>
                var geometry = PathGeometry_7();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1164.55896F, 453.197998F), AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_0());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<1164.559, 453.198>
                var geometry = _pathGeometry_7;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1164.55896F, 453.197998F), AnimatedColorBrush_TransparentAlmostChocolate_00F05A23_to_AlmostChocolate_FFF05A23_4());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<1093.1111, 330.856>
                var geometry = PathGeometry_8();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1093.11108F, 330.855988F), AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_1());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<1093.1111, 330.856>
                var geometry = _pathGeometry_8;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1093.11108F, 330.855988F), AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_2());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<1028.317, 461.56>
                var geometry = PathGeometry_9();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1028.31702F, 461.559998F), AnimatedColorBrush_TransparentAlmostYellowGreen_00A6C82D_to_AlmostYellowGreen_FFA6C82D_2());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<1028.317, 461.56>
                var geometry = _pathGeometry_9;
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 1028.31702F, 461.559998F), AnimatedColorBrush_TransparentAlmostDarkOrange_00F7921E_to_AlmostDarkOrange_FFF7921E_3());;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1920F, 1080F);
                var shapes = result.Shapes;
                // Offset:<1027.147, 519.312>
                shapes.Add(SpriteShape_00());
                // Offset:<678.60004, 519.31305>
                shapes.Add(SpriteShape_01());
                // Offset:<673.91003, 405.147>
                shapes.Add(SpriteShape_02());
                // Offset:<749.84, 282.80798>
                shapes.Add(SpriteShape_03());
                // Offset:<819.16003, 404.056>
                shapes.Add(SpriteShape_04());
                // Offset:<885.095, 204.39798>
                shapes.Add(SpriteShape_05());
                // Offset:<809.113, 336.54904>
                shapes.Add(SpriteShape_06());
                // Offset:<1107.511, 405.147>
                shapes.Add(SpriteShape_07());
                // Offset:<1107.511, 405.147>
                shapes.Add(SpriteShape_08());
                // Offset:<1040.545, 282.80798>
                shapes.Add(SpriteShape_09());
                // Offset:<1040.545, 282.80798>
                shapes.Add(SpriteShape_10());
                // Offset:<980.263, 404.057>
                shapes.Add(SpriteShape_11());
                // Offset:<980.263, 404.057>
                shapes.Add(SpriteShape_12());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            internal SummerLeaves_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1920F, 1080F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
