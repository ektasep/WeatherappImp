//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile Animation - 1702889123243.json
//       
//       Input file:
//           Animation - 1702889123243.json (13302 bytes created 14:15+05:30 Dec 18 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |    66 |
// |--------------------------+-------|
// | Expression animators     |     1 |
// | KeyFrame animators       |     1 |
// | Reference parameters     |     1 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     4 |
// | ShapeVisuals             |     2 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |     6 |
// |--------------------------+-------|
// | Brushes                  |     3 |
// | Gradient stops           |     6 |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        sleeping panda
    // Frame rate:  60 fps
    // Frame count: 151
    // Duration:    2516.7 mS
    sealed class Missing
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 2.517 seconds.
        internal const long c_durationTicks = 25166666;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Animation__1702889123243_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new Animation__1702889123243_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 151d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 151d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Animation__1702889123243_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 25166666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostBlack_FF231F20;
            CompositionColorBrush _colorBrush_White;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            InsetClip _insetClip_0;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - - - - PreComp layer: panda
            // - - - - - PreComp layer: â½ Group 11
            // - - - Layer aggregator
            // - -  Offset:<108.83, 251.302>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.61999989F, -8.06900024F));
                    builder.AddCubicBezier(new Vector2(3.72399998F, -11.6499996F), new Vector2(8.09599972F, -10.8479996F), new Vector2(10.1289997F, -8.625F));
                    builder.AddCubicBezier(new Vector2(14.3170004F, -4.1789999F), new Vector2(10.9919996F, 4.03299999F), new Vector2(3.10800004F, 8.04599953F));
                    builder.AddCubicBezier(new Vector2(-3.35899997F, 11.3179998F), new Vector2(-8.65699959F, 11.3190002F), new Vector2(-10.8739996F, 8.23200035F));
                    builder.AddCubicBezier(new Vector2(-13.8920002F, 4.09499979F), new Vector2(-10.3809996F, -3.74699998F), new Vector2(-2.61999989F, -8.06900024F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: panda
            // - - - - - PreComp layer: â½ Group 11
            // - - - Layer aggregator
            // - -  Offset:<230.089, 142.444>
            CanvasGeometry Geometry_01()
            {
                var result = Geometry_02().
                    CombineWith(Geometry_05(),
                    Matrix3x2.Identity,
                    CanvasGeometryCombine.Xor);
                return result;
            }

            // - - - - - - - PreComp layer: panda
            // - - - - - - PreComp layer: â½ Group 11
            // - - - - Layer aggregator
            // - - -  Offset:<230.089, 142.444>
            CanvasGeometry Geometry_02()
            {
                var result = Geometry_03().
                    CombineWith(Geometry_04(),
                    Matrix3x2.Identity,
                    CanvasGeometryCombine.Xor);
                return result;
            }

            // - - - - - - - - PreComp layer: panda
            // - - - - - - - PreComp layer: â½ Group 11
            // - - - - - Layer aggregator
            // - - - -  Offset:<230.089, 142.444>
            // Path 3
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(59.2039986F, 15.6829996F));
                    builder.AddCubicBezier(new Vector2(57.1100006F, 18.5849991F), new Vector2(63.5149994F, 24.1420002F), new Vector2(65.6709976F, 21.4249992F));
                    builder.AddCubicBezier(new Vector2(68.3190002F, 18.0909996F), new Vector2(69.3050003F, 13.151F), new Vector2(65.0550003F, 13.151F));
                    builder.AddCubicBezier(new Vector2(65.0550003F, 13.151F), new Vector2(60.9290009F, 13.2749996F), new Vector2(59.2039986F, 15.6829996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - PreComp layer: panda
            // - - - - - - - PreComp layer: â½ Group 11
            // - - - - - Layer aggregator
            // - - - -  Offset:<230.089, 142.444>
            // Path 2
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(40.355999F, 20.3139992F));
                    builder.AddCubicBezier(new Vector2(45.0369987F, 18.3999996F), new Vector2(43.1889992F, 14.2010002F), new Vector2(50.026001F, 9.44699955F));
                    builder.AddCubicBezier(new Vector2(52.7360001F, 7.53299999F), new Vector2(53.2910004F, 4.81599998F), new Vector2(52.0589981F, 1.97599995F));
                    builder.AddCubicBezier(new Vector2(50.2729988F, -2.09899998F), new Vector2(45.2220001F, -5.49499989F), new Vector2(39.3709984F, -4.75400019F));
                    builder.AddCubicBezier(new Vector2(31.7950001F, -3.82800007F), new Vector2(28.5300007F, 1.41999996F), new Vector2(27.1749992F, 5.37200022F));
                    builder.AddCubicBezier(new Vector2(24.2800007F, 13.6459999F), new Vector2(30.132F, 24.5739994F), new Vector2(40.355999F, 20.3139992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: panda
            // - - - - - - PreComp layer: â½ Group 11
            // - - - - Layer aggregator
            // - - -  Offset:<230.089, 142.444>
            // Path 1
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(62.4070015F, 8.27400017F));
                    builder.AddCubicBezier(new Vector2(62.9000015F, 8.52099991F), new Vector2(63.5149994F, 8.76799965F), new Vector2(64.1930008F, 9.01500034F));
                    builder.AddCubicBezier(new Vector2(68.3809967F, 10.4969997F), new Vector2(70.7829971F, 15.8059998F), new Vector2(69.7979965F, 20.0049992F));
                    builder.AddCubicBezier(new Vector2(68.4430008F, 25.6240005F), new Vector2(63.7610016F, 29.4519997F), new Vector2(61.112999F, 31.3040009F));
                    builder.AddCubicBezier(new Vector2(54.6459999F, 35.8730011F), new Vector2(47.6860008F, 38.651001F), new Vector2(42.3889999F, 39.7010002F));
                    builder.AddCubicBezier(new Vector2(42.8199997F, 33.5880013F), new Vector2(38.9399986F, 26.118F), new Vector2(30.1940002F, 24.5739994F));
                    builder.AddCubicBezier(new Vector2(22.4950008F, 23.2159996F), new Vector2(19.1690006F, 24.2660007F), new Vector2(10.9770002F, 22.9689999F));
                    builder.AddCubicBezier(new Vector2(4.81799984F, 22.0429993F), new Vector2(-3.8670001F, 15.1280003F), new Vector2(-5.71500015F, 3.9519999F));
                    builder.AddCubicBezier(new Vector2(-7.0079999F, -3.704F), new Vector2(-6.57700014F, -8.52000046F), new Vector2(-10.7040005F, -9.32299995F));
                    builder.AddCubicBezier(new Vector2(-16.9860001F, -10.5579996F), new Vector2(-20.7439995F, 1.66700006F), new Vector2(-20.1280003F, 10.6820002F));
                    builder.AddCubicBezier(new Vector2(-19.1429996F, 25.1299992F), new Vector2(-13.9069996F, 37.8499985F), new Vector2(-3.55900002F, 44.5180016F));
                    builder.AddLine(new Vector2(-31.7070007F, 44.5180016F));
                    builder.AddCubicBezier(new Vector2(-23.1459999F, 37.5410004F), new Vector2(-23.1450005F, 25.809F), new Vector2(-27.8880005F, 19.6350002F));
                    builder.AddCubicBezier(new Vector2(-32.0149994F, 14.2629995F), new Vector2(-38.3590012F, 14.8190002F), new Vector2(-42.9169998F, 16.2390003F));
                    builder.AddCubicBezier(new Vector2(-44.3950005F, 11.4230003F), new Vector2(-45.6889992F, 6.85400009F), new Vector2(-46.1819992F, 4.69299984F));
                    builder.AddCubicBezier(new Vector2(-48.8300018F, -6.4829998F), new Vector2(-61.4570007F, -11.1140003F), new Vector2(-70.0179977F, -3.08699989F));
                    builder.AddCubicBezier(new Vector2(-67.677002F, -25.7469997F), new Vector2(-48.4609985F, -44.5180016F), new Vector2(-23.7619991F, -44.5180016F));
                    builder.AddCubicBezier(new Vector2(-11.4429998F, -44.5180016F), new Vector2(0.32100001F, -39.5779991F), new Vector2(9.06700039F, -30.9960003F));
                    builder.AddCubicBezier(new Vector2(6.29500008F, -27.6000004F), new Vector2(6.35699987F, -23.1539993F), new Vector2(6.35699987F, -20.2520008F));
                    builder.AddCubicBezier(new Vector2(6.35699987F, -11.6079998F), new Vector2(13.9329996F, -10.9899998F), new Vector2(16.2740002F, -14.8800001F));
                    builder.AddCubicBezier(new Vector2(18.9839993F, -19.5109997F), new Vector2(17.5669994F, -18.0909996F), new Vector2(22.3099995F, -22.5979996F));
                    builder.AddCubicBezier(new Vector2(23.4799995F, -23.7089996F), new Vector2(23.9729996F, -25.3770008F), new Vector2(23.9109993F, -27.1060009F));
                    builder.AddCubicBezier(new Vector2(39.1240005F, -28.4640007F), new Vector2(52.6749992F, -19.6970005F), new Vector2(58.2799988F, -6.79199982F));
                    builder.AddCubicBezier(new Vector2(59.3269997F, -3.14899993F), new Vector2(56.6780014F, -1.11099994F), new Vector2(56.9860001F, 2.96399999F));
                    builder.AddCubicBezier(new Vector2(57.2319984F, 5.92799997F), new Vector2(59.3269997F, 7.03900003F), new Vector2(62.4070015F, 8.27400017F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: panda
            // - - - - - PreComp layer: â½ Group 11
            // - - - Layer aggregator
            // - -  Offset:<348.835, 167.028>
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4060001F, -2.82299995F));
                    builder.AddCubicBezier(new Vector2(-11.0509996F, -6.7750001F), new Vector2(-7.78700018F, -12.0229998F), new Vector2(-0.210999995F, -12.9490004F));
                    builder.AddCubicBezier(new Vector2(5.63999987F, -13.6899996F), new Vector2(10.691F, -10.2939997F), new Vector2(12.5389996F, -6.21899986F));
                    builder.AddCubicBezier(new Vector2(13.7709999F, -3.37899995F), new Vector2(13.1549997F, -0.662F), new Vector2(10.4449997F, 1.25199997F));
                    builder.AddCubicBezier(new Vector2(3.60800004F, 6.00600004F), new Vector2(5.45599985F, 10.2049999F), new Vector2(0.774999976F, 12.1190004F));
                    builder.AddCubicBezier(new Vector2(-9.44900036F, 16.3180008F), new Vector2(-15.3009996F, 5.45100021F), new Vector2(-12.4060001F, -2.82299995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: panda
            // - - - - - PreComp layer: â½ Group 11
            // - - - Layer aggregator
            // - -  Offset:<420.398, 195.4>
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(2.296F, 3.773F));
                    builder.AddCubicBezier(new Vector2(0.140000001F, 6.48999977F), new Vector2(-6.26499987F, 0.933000028F), new Vector2(-4.171F, -1.96899998F));
                    builder.AddCubicBezier(new Vector2(-2.4460001F, -4.31500006F), new Vector2(1.67999995F, -4.50099993F), new Vector2(1.74199998F, -4.50099993F));
                    builder.AddCubicBezier(new Vector2(5.92999983F, -4.50099993F), new Vector2(4.94399977F, 0.43900001F), new Vector2(2.296F, 3.773F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: panda
            // - - - - - PreComp layer: â½ Group 11
            // - - - Layer aggregator
            // - -  Offset:<235.449, 145.545>
            CanvasGeometry Geometry_08()
            {
                var result = Geometry_09().
                    CombineWith(Geometry_12(),
                    Matrix3x2.Identity,
                    CanvasGeometryCombine.Xor);
                return result;
            }

            // - - - - - - - PreComp layer: panda
            // - - - - - - PreComp layer: â½ Group 11
            // - - - - Layer aggregator
            // - - -  Offset:<235.449, 145.545>
            CanvasGeometry Geometry_09()
            {
                var result = Geometry_10().
                    CombineWith(Geometry_11(),
                    Matrix3x2.Identity,
                    CanvasGeometryCombine.Xor);
                return result;
            }

            // - - - - - - - - PreComp layer: panda
            // - - - - - - - PreComp layer: â½ Group 11
            // - - - - - Layer aggregator
            // - - - -  Offset:<235.449, 145.545>
            // Path 3
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(59.2649994F, 30.2089996F));
                    builder.AddCubicBezier(new Vector2(61.8520012F, 28.2950001F), new Vector2(66.5950012F, 24.4669991F), new Vector2(67.9499969F, 18.9099998F));
                    builder.AddCubicBezier(new Vector2(68.9970016F, 14.7729998F), new Vector2(66.5940018F, 9.4630003F), new Vector2(62.4059982F, 7.98099995F));
                    builder.AddCubicBezier(new Vector2(61.6669998F, 7.73400021F), new Vector2(61.112999F, 7.48699999F), new Vector2(60.6199989F, 7.23999977F));
                    builder.AddCubicBezier(new Vector2(57.5400009F, 5.94299984F), new Vector2(55.3849983F, 4.89400005F), new Vector2(55.2000008F, 1.92999995F));
                    builder.AddCubicBezier(new Vector2(54.8919983F, -2.14499998F), new Vector2(57.5400009F, -4.24499989F), new Vector2(56.493F, -7.82600021F));
                    builder.AddCubicBezier(new Vector2(50.8260002F, -20.7310009F), new Vector2(37.276001F, -29.4969997F), new Vector2(22.0629997F, -28.1389999F));
                    builder.AddCubicBezier(new Vector2(22.125F, -26.4099998F), new Vector2(21.6310005F, -24.743F), new Vector2(20.4610004F, -23.632F));
                    builder.AddCubicBezier(new Vector2(15.7180004F, -19.125F), new Vector2(17.1970005F, -20.5450001F), new Vector2(14.4250002F, -15.9139996F));
                    builder.AddCubicBezier(new Vector2(12.0839996F, -12.0240002F), new Vector2(4.5710001F, -12.6420002F), new Vector2(4.50899982F, -21.2859993F));
                    builder.AddCubicBezier(new Vector2(4.50899982F, -24.1879997F), new Vector2(4.44700003F, -28.6329994F), new Vector2(7.21899986F, -32.0289993F));
                    builder.AddCubicBezier(new Vector2(-1.40400004F, -40.6110001F), new Vector2(-13.2290001F, -45.5509987F), new Vector2(-25.5480003F, -45.5509987F));
                    builder.AddCubicBezier(new Vector2(-50.2470016F, -45.5509987F), new Vector2(-69.526001F, -26.7810001F), new Vector2(-71.8050003F, -4.18300009F));
                    builder.AddCubicBezier(new Vector2(-63.2439995F, -12.21F), new Vector2(-50.6160011F, -7.579F), new Vector2(-47.9679985F, 3.59699988F));
                    builder.AddCubicBezier(new Vector2(-47.4140015F, 5.7579999F), new Vector2(-46.1819992F, 10.3889999F), new Vector2(-44.7039986F, 15.1429996F));
                    builder.AddCubicBezier(new Vector2(-40.1459999F, 13.7229996F), new Vector2(-33.8019981F, 13.1059999F), new Vector2(-29.6749992F, 18.5389996F));
                    builder.AddCubicBezier(new Vector2(-24.9939995F, 24.6520004F), new Vector2(-24.9330006F, 36.4449997F), new Vector2(-33.4939995F, 43.4220009F));
                    builder.AddLine(new Vector2(-5.40799999F, 43.4220009F));
                    builder.AddCubicBezier(new Vector2(-15.7559996F, 36.7540016F), new Vector2(-20.9909992F, 24.0960007F), new Vector2(-21.9759998F, 9.58600044F));
                    builder.AddCubicBezier(new Vector2(-22.6539993F, 0.57099998F), new Vector2(-18.8339996F, -11.6540003F), new Vector2(-12.552F, -10.4189997F));
                    builder.AddCubicBezier(new Vector2(-8.36400032F, -9.61600018F), new Vector2(-8.79500008F, -4.80000019F), new Vector2(-7.5630002F, 2.85599995F));
                    builder.AddCubicBezier(new Vector2(-5.77699995F, 14.0319996F), new Vector2(2.9690001F, 20.8850002F), new Vector2(9.12800026F, 21.8729992F));
                    builder.AddCubicBezier(new Vector2(17.3810005F, 23.1700001F), new Vector2(20.6459999F, 22.1210003F), new Vector2(28.3449993F, 23.4790001F));
                    builder.AddCubicBezier(new Vector2(37.1529999F, 25.0839996F), new Vector2(41.0340004F, 32.493F), new Vector2(40.5410004F, 38.605999F));
                    builder.AddCubicBezier(new Vector2(45.8380013F, 37.5559998F), new Vector2(52.7980003F, 34.7779999F), new Vector2(59.2649994F, 30.2089996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - PreComp layer: panda
            // - - - - - - - PreComp layer: â½ Group 11
            // - - - - - Layer aggregator
            // - - - -  Offset:<235.449, 145.545>
            // Path 2
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-53.0800018F, 43.4840012F));
                    builder.AddCubicBezier(new Vector2(-50.862999F, 46.5089989F), new Vector2(-45.5660019F, 46.5709991F), new Vector2(-39.098999F, 43.2989998F));
                    builder.AddCubicBezier(new Vector2(-31.2150002F, 39.2859993F), new Vector2(-27.8889999F, 31.0739994F), new Vector2(-32.0769997F, 26.6280003F));
                    builder.AddCubicBezier(new Vector2(-34.1710014F, 24.4669991F), new Vector2(-38.4830017F, 23.6639996F), new Vector2(-44.8269997F, 27.1830006F));
                    builder.AddCubicBezier(new Vector2(-52.5880013F, 31.5049992F), new Vector2(-56.0979996F, 39.3470001F), new Vector2(-53.0800018F, 43.4840012F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: panda
            // - - - - - - PreComp layer: â½ Group 11
            // - - - - Layer aggregator
            // - - -  Offset:<235.449, 145.545>
            // Path 1
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(62.3450012F, 4.76999998F));
                    builder.AddCubicBezier(new Vector2(63.3300018F, 5.26399994F), new Vector2(66.6559982F, 5.88199997F), new Vector2(69.2429962F, 10.0190001F));
                    builder.AddCubicBezier(new Vector2(78.2969971F, 13.4770002F), new Vector2(80.5149994F, 24.0340004F), new Vector2(76.6959991F, 29.4060001F));
                    builder.AddCubicBezier(new Vector2(73.6780014F, 33.7900009F), new Vector2(67.2109985F, 34.4070015F), new Vector2(58.0950012F, 34.7159996F));
                    builder.AddCubicBezier(new Vector2(51.6889992F, 39.0379982F), new Vector2(44.7290001F, 40.8909988F), new Vector2(39.8019981F, 41.7550011F));
                    builder.AddCubicBezier(new Vector2(36.9070015F, 49.4729996F), new Vector2(26.9909992F, 48.4230003F), new Vector2(12.7010002F, 48.4230003F));
                    builder.AddCubicBezier(new Vector2(8.26599979F, 48.4230003F), new Vector2(4.26200008F, 47.7449989F), new Vector2(0.689999998F, 46.4480019F));
                    builder.AddLine(new Vector2(-38.4210014F, 46.4480019F));
                    builder.AddCubicBezier(new Vector2(-42.0550003F, 47.9920006F), new Vector2(-46.4900017F, 48.6699982F), new Vector2(-51.4790001F, 48.4850006F));
                    builder.AddCubicBezier(new Vector2(-74.4530029F, 47.6819992F), new Vector2(-78.4560013F, 24.5279999F), new Vector2(-77.9020004F, 12.2410002F));
                    builder.AddCubicBezier(new Vector2(-77.6559982F, 6.86899996F), new Vector2(-76.5469971F, 2.98000002F), new Vector2(-75.0070038F, 0.0780000016F));
                    builder.AddCubicBezier(new Vector2(-74.9449997F, -4.67600012F), new Vector2(-74.2689972F, -9.30799961F), new Vector2(-72.8519974F, -13.8149996F));
                    builder.AddCubicBezier(new Vector2(-78.8270035F, -15.7910004F), new Vector2(-81.2900009F, -26.4109993F), new Vector2(-73.9599991F, -31.2269993F));
                    builder.AddCubicBezier(new Vector2(-69.6490021F, -34.0670013F), new Vector2(-66.1999969F, -32.4609985F), new Vector2(-63.9210014F, -30.3619995F));
                    builder.AddCubicBezier(new Vector2(-54.3129997F, -42.0929985F), new Vector2(-40.3300018F, -48.5149994F), new Vector2(-25.5480003F, -48.5149994F));
                    builder.AddCubicBezier(new Vector2(-12.4289999F, -48.5149994F), new Vector2(0.135000005F, -43.2050018F), new Vector2(9.43599987F, -34.0050011F));
                    builder.AddCubicBezier(new Vector2(14.6099997F, -37.6479988F), new Vector2(19.6609993F, -35.8580017F), new Vector2(21.5699997F, -30.9799995F));
                    builder.AddCubicBezier(new Vector2(22.3710003F, -31.1030006F), new Vector2(23.2329998F, -31.1650009F), new Vector2(24.0340004F, -31.1650009F));
                    builder.AddCubicBezier(new Vector2(25.882F, -34.2519989F), new Vector2(28.8379993F, -37.0929985F), new Vector2(33.9500008F, -37.4630013F));
                    builder.AddCubicBezier(new Vector2(42.3269997F, -38.1419983F), new Vector2(45.5299988F, -30.9799995F), new Vector2(44.4830017F, -25.8549995F));
                    builder.AddCubicBezier(new Vector2(54.8310013F, -19.5569992F), new Vector2(61.9749985F, -8.31999969F), new Vector2(62.3450012F, 4.76999998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlack_FF231F20()
            {
                return _colorBrush_AlmostBlack_FF231F20 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x23, 0x1F, 0x20));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostHoneydew_FFEAFFEC_0()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xEA, 0xFF, 0xEC));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 1
            CompositionColorGradientStop GradientStop_0_AlmostHoneydew_FFEAFFEC_1()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xEA, 0xFF, 0xEC));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 2
            CompositionColorGradientStop GradientStop_0p5_SemiTransparentAlmostBeige_7FD7FDDB_0()
            {
                return _c.CreateColorGradientStop(0.5F, Color.FromArgb(0x7F, 0xD7, 0xFD, 0xDB));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 3
            CompositionColorGradientStop GradientStop_0p5_SemiTransparentAlmostBeige_7FD7FDDB_1()
            {
                return _c.CreateColorGradientStop(0.5F, Color.FromArgb(0x7F, 0xD7, 0xFD, 0xDB));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 4
            CompositionColorGradientStop GradientStop_1_TransparentAlmostGainsboro_00C4FCC9_0()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0xC4, 0xFC, 0xC9));
            }

            // - - Shape tree root for layer: Ellipse 19
            // -  Scale:1.6593,1.6593, Offset:<82, 79>
            // Stop 5
            CompositionColorGradientStop GradientStop_1_TransparentAlmostGainsboro_00C4FCC9_1()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0xC4, 0xFC, 0xC9));
            }

            // - Shape tree root for layer: Ellipse 19
            // Scale:1.6593,1.6593, Offset:<82, 79>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_79p5()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(79.5F, 79.5F);
                return result;
            }

            // - Shape tree root for layer: Ellipse 19
            // Scale:1.6593,1.6593, Offset:<82, 79>
            CompositionLinearGradientBrush LinearGradientBrush()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostHoneydew_FFEAFFEC_0());
                colorStops.Add(GradientStop_0_AlmostHoneydew_FFEAFFEC_1());
                colorStops.Add(GradientStop_0p5_SemiTransparentAlmostBeige_7FD7FDDB_0());
                colorStops.Add(GradientStop_0p5_SemiTransparentAlmostBeige_7FD7FDDB_1());
                colorStops.Add(GradientStop_1_TransparentAlmostGainsboro_00C4FCC9_0());
                colorStops.Add(GradientStop_1_TransparentAlmostGainsboro_00C4FCC9_1());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(0F, -79.5F);
                result.EndPoint = new Vector2(0F, 56.118F);
                return result;
            }

            // - - - - PreComp layer: panda
            // - - - PreComp layer: â½ Group 11
            // - Layer aggregator
            // Offset:<108.83, 251.302>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - - - PreComp layer: panda
            // - - - PreComp layer: â½ Group 11
            // - Layer aggregator
            // Offset:<230.089, 142.444>
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - - - PreComp layer: panda
            // - - - PreComp layer: â½ Group 11
            // - Layer aggregator
            // Offset:<348.835, 167.028>
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
            }

            // - - - - PreComp layer: panda
            // - - - PreComp layer: â½ Group 11
            // - Layer aggregator
            // Offset:<420.398, 195.4>
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - - - - PreComp layer: panda
            // - - - PreComp layer: â½ Group 11
            // - Layer aggregator
            // Offset:<235.449, 145.545>
            CompositionPathGeometry PathGeometry_4()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // Shape tree root for layer: Ellipse 19
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<82, 79>, Rotation:-0.013134353018834028 degrees,
                // Scale:<0.7256617, 0.7256617>
                var geometry = Ellipse_79p5();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.725661695F, 0F, 0F, 0.725661695F, 82F, 79F), LinearGradientBrush());;
                return result;
            }

            // - - - PreComp layer: panda
            // - - PreComp layer: â½ Group 11
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                // Offset:<108.83, 251.302>, Scale:<3, 3>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(3F, 0F, 0F, 3F, 108.830002F, 251.302002F), ColorBrush_White());;
                return result;
            }

            // - - - PreComp layer: panda
            // - - PreComp layer: â½ Group 11
            // Layer aggregator
            // ShapeGroup: Vector Scale:3,3
            CompositionSpriteShape SpriteShape_2()
            {
                // Offset:<230.089, 142.444>, Scale:<3, 3>
                var geometry = PathGeometry_1();
                var result = CreateSpriteShape(geometry, new Matrix3x2(3F, 0F, 0F, 3F, 230.089005F, 142.444F), _colorBrush_White);;
                return result;
            }

            // - - - PreComp layer: panda
            // - - PreComp layer: â½ Group 11
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                // Offset:<348.835, 167.028>, Scale:<3, 3>
                var geometry = PathGeometry_2();
                var result = CreateSpriteShape(geometry, new Matrix3x2(3F, 0F, 0F, 3F, 348.834991F, 167.028F), ColorBrush_AlmostBlack_FF231F20());;
                return result;
            }

            // - - - PreComp layer: panda
            // - - PreComp layer: â½ Group 11
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_4()
            {
                // Offset:<420.398, 195.4>, Scale:<3, 3>
                var geometry = PathGeometry_3();
                var result = CreateSpriteShape(geometry, new Matrix3x2(3F, 0F, 0F, 3F, 420.39801F, 195.399994F), _colorBrush_AlmostBlack_FF231F20);;
                return result;
            }

            // - - - PreComp layer: panda
            // - - PreComp layer: â½ Group 11
            // Layer aggregator
            // ShapeGroup: Vector Scale:3,3
            CompositionSpriteShape SpriteShape_5()
            {
                // Offset:<235.449, 145.545>, Scale:<3, 3>
                var geometry = PathGeometry_4();
                var result = CreateSpriteShape(geometry, new Matrix3x2(3F, 0F, 0F, 3F, 235.449005F, 145.544998F), _colorBrush_AlmostBlack_FF231F20);;
                return result;
            }

            // Transforms for panda Scale(0.23778,0.23778,0), Offset(-223,-93.5,0)
            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(600F, 371F);
                // Offset:<5.6660004, 47.891815>, Scale:<0.23778, 0.23778>
                result.TransformMatrix = new Matrix4x4(0.237780005F, 0F, 0F, 0F, 0F, 0.237780005F, 0F, 0F, 0F, 0F, 0F, 0F, 5.66600037F, 47.8918152F, 0F, 1F);
                // PreComp layer: â½ Group 11
                result.Children.InsertAtTop(ContainerVisual_1());
                return result;
            }

            // PreComp layer: panda
            // Transforms for â½ Group 11
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(51.5F, 259.5F, 0F);
                result.Offset = new Vector3(64.5510025F, 39.4549866F, 0F);
                result.Children.InsertAtTop(ContainerVisual_2());
                result.StartAnimation("Scale", ScaleVector3Animation());
                var controller = result.TryGetAnimationController("Scale");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - PreComp layer: panda
            // PreComp layer: â½ Group 11
            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = _insetClip_0;
                result.Size = new Vector2(471F, 291F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Shape tree root for layer: Ellipse 19
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: panda
                children.InsertAtTop(ContainerVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            InsetClip InsetClip_0()
            {
                var result = _insetClip_0 = _c.CreateInsetClip();
                return result;
            }

            // Shape tree root for layer: Ellipse 19
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(164F, 159F);
                // Scale:1.6593,1.6593, Offset:<82, 79>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // - - PreComp layer: panda
            // - PreComp layer: â½ Group 11
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(471F, 291F);
                var shapes = result.Shapes;
                // Offset:<108.83, 251.302>
                shapes.Add(SpriteShape_1());
                // Offset:<230.089, 142.444>
                shapes.Add(SpriteShape_2());
                // Offset:<348.835, 167.028>
                shapes.Add(SpriteShape_3());
                // Offset:<420.398, 195.4>
                shapes.Add(SpriteShape_4());
                // Offset:<235.449, 145.545>
                shapes.Add(SpriteShape_5());
                return result;
            }

            // - - PreComp layer: panda
            // - PreComp layer: â½ Group 11
            // Scale
            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            // - PreComp layer: panda
            // PreComp layer: â½ Group 11
            // Scale
            Vector3KeyFrameAnimation ScaleVector3Animation()
            {
                // Frame 0.
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(1F, 1F, 1F), HoldThenStepEasingFunction());
                // Frame 65.
                result.InsertKeyFrame(0.430463582F, new Vector3(1F, 0.949999988F, 1F), CubicBezierEasingFunction_0());
                // Frame 130.
                result.InsertKeyFrame(0.860927165F, new Vector3(1F, 1F, 1F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Animation__1702889123243_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(164F, 159F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
