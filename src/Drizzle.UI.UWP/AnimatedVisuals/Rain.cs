//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile rain.json
//       
//       Input file:
//           rain.json (15627 bytes created 20:09+05:30 Aug 3 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   120 |
// |--------------------------+-------|
// | Expression animators     |    18 |
// | KeyFrame animators       |     9 |
// | Reference parameters     |    18 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     3 |
// | Animated gradient stops  |     9 |
// | ExpressionAnimations     |    11 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     - |
// | CompositionSpriteShapes  |     4 |
// |--------------------------+-------|
// | Brushes                  |     8 |
// | Gradient stops           |    12 |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        rain
    // Frame rate:  60 fps
    // Frame count: 360
    // Duration:    6000.0 mS
    sealed class Rain
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 6.000 seconds.
        internal const long c_durationTicks = 60000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Rain_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new Rain_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 360d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 360d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Rain_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 60000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionLinearGradientBrush _linearGradientBrush_1;
            CompositionLinearGradientBrush _linearGradientBrush_2;
            CompositionLinearGradientBrush _linearGradientBrush_3;
            CompositionPathGeometry _pathGeometry_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgress;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<256, 256>
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(116F, -8.875F));
                    builder.AddCubicBezier(new Vector2(115.146004F, -8.875F), new Vector2(114.315002F, -8.78600025F), new Vector2(113.471001F, -8.74800014F));
                    builder.AddCubicBezier(new Vector2(115.063004F, -15.2069998F), new Vector2(116F, -21.9239998F), new Vector2(116F, -28.875F));
                    builder.AddCubicBezier(new Vector2(116F, -75.2669983F), new Vector2(78.3919983F, -112.875F), new Vector2(32F, -112.875F));
                    builder.AddCubicBezier(new Vector2(1.79900002F, -112.875F), new Vector2(-24.6009998F, -96.8840027F), new Vector2(-39.4039993F, -72.9599991F));
                    builder.AddCubicBezier(new Vector2(-47.7820015F, -77.9540024F), new Vector2(-57.5390015F, -80.875F), new Vector2(-68F, -80.875F));
                    builder.AddCubicBezier(new Vector2(-98.9280014F, -80.875F), new Vector2(-124F, -55.8030014F), new Vector2(-124F, -24.875F));
                    builder.AddCubicBezier(new Vector2(-124F, -21.7749996F), new Vector2(-123.682999F, -18.7549992F), new Vector2(-123.198997F, -15.7919998F));
                    builder.AddCubicBezier(new Vector2(-150.977997F, -10.5419998F), new Vector2(-172F, 13.8190002F), new Vector2(-172F, 43.125F));
                    builder.AddCubicBezier(new Vector2(-172F, 76.262001F), new Vector2(-145.136993F, 103.125F), new Vector2(-112F, 103.125F));
                    builder.AddCubicBezier(new Vector2(-110.649002F, 103.125F), new Vector2(-109.328003F, 103.011002F), new Vector2(-108F, 102.922997F));
                    builder.AddLine(new Vector2(-108F, 103.125F));
                    builder.AddLine(new Vector2(116F, 103.125F));
                    builder.AddCubicBezier(new Vector2(146.927994F, 103.125F), new Vector2(172F, 78.0530014F), new Vector2(172F, 47.125F));
                    builder.AddCubicBezier(new Vector2(172F, 16.1970005F), new Vector2(146.927994F, -8.875F), new Vector2(116F, -8.875F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 28F));
                    builder.AddCubicBezier(new Vector2(-4.41800022F, 28F), new Vector2(-8F, 24.4220009F), new Vector2(-8F, 20F));
                    builder.AddLine(new Vector2(-8F, -20F));
                    builder.AddCubicBezier(new Vector2(-8F, -24.4220009F), new Vector2(-4.41800022F, -28F), new Vector2(0F, -28F));
                    builder.AddCubicBezier(new Vector2(4.41800022F, -28F), new Vector2(8F, -24.4220009F), new Vector2(8F, -20F));
                    builder.AddLine(new Vector2(8F, 20F));
                    builder.AddCubicBezier(new Vector2(8F, 24.4220009F), new Vector2(4.41800022F, 28F), new Vector2(0F, 28F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-2
            // Color
            ColorKeyFrameAnimation ColorAnimation_AlmostRoyalBlue_FF0A5AD4_to_AlmostRoyalBlue_FF0A5AD4()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 13.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.0361111127F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 20.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.055555556F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 40.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.111111112F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 47.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.130555555F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 73.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.202777773F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 80.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.222222224F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 100.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.277777791F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 107.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.297222227F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 133.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.36944443F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 140.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.388888896F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 160.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.444444448F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 167.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.463888884F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 193.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.536111116F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 200.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.555555582F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 220.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.611111104F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 227.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.63055557F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 253.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.702777803F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 260.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.722222209F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 280.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.777777791F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 287.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.797222197F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 313.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.86944443F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 320.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.888888896F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 340.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.944444418F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 347.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.963888884F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-1
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_0()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _holdThenStepEasingFunction);
                // Frame 7.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.0194444451F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 33.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.0916666687F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 40.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.111111112F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 60.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.166666672F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 67.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.186111107F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 93.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.258333325F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 100.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.277777791F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 120.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.333333343F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 127.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.352777779F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 153.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.425000012F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 160.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.444444448F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 180.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.5F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 187.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.519444466F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 213.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.591666639F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 220.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.611111104F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 240.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.666666687F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 247.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.686111093F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 273.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.758333325F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 280.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.777777791F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 300.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.833333313F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 307.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.852777779F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 333.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.925000012F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 340.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.944444418F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-3
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_1()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _stepThenHoldEasingFunction);
                // Frame 20.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.055555556F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _holdThenStepEasingFunction);
                // Frame 27.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.075000003F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 53.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.147222221F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 60.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.166666672F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 80.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.222222224F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 87.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.24166666F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 113.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.313888878F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 120.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.333333343F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 140.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.388888896F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 147.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.408333331F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 173.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.480555564F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 180.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.5F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 200.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.555555582F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 207.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.574999988F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 233.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.647222221F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 240.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.666666687F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 260.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.722222209F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 267.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.741666675F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 293.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.813888907F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 300.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.833333313F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 320.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(0.888888896F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 327.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.908333361F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 353.
                // AlmostRoyalBlue_FF0A5AD4
                result.InsertKeyFrame(0.980555534F, Color.FromArgb(0xFF, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                // Frame 360.
                // TransparentAlmostRoyalBlue_000A5AD4
                result.InsertKeyFrame(1F, Color.FromArgb(0x00, 0x0A, 0x5A, 0xD4), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-2
            CompositionColorBrush AnimatedColorBrush_AlmostRoyalBlue_FF0A5AD4_to_AlmostRoyalBlue_FF0A5AD4()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_AlmostRoyalBlue_FF0A5AD4_to_AlmostRoyalBlue_FF0A5AD4(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-1
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_0()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-3
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_1()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<256, 256>
            CompositionColorBrush ColorBrush_AlmostLavender_FFE6EFFC()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE6, 0xEF, 0xFC));
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-1
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_0()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,10,100,236)", "my", _linearGradientBrush_1);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-2
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_1()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,10,100,236)", "my", _linearGradientBrush_2);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-3
            // Stop 0
            CompositionColorGradientStop AnimatedGradientStop_0_2()
            {
                var result = _c.CreateColorGradientStop(0F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,10,100,236)", "my", _linearGradientBrush_3);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-1
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_0()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,9,90,211)", "my", _linearGradientBrush_1);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-2
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_1()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,9,90,211)", "my", _linearGradientBrush_2);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-3
            // Stop 1
            CompositionColorGradientStop AnimatedGradientStop_0p45_2()
            {
                var result = _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,9,90,211)", "my", _linearGradientBrush_3);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-1
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_0()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,8,80,187)", "my", _linearGradientBrush_1);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-2
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_1()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,8,80,187)", "my", _linearGradientBrush_2);
                return result;
            }

            // - - Layer aggregator
            // - ShapeGroup: raindrop-3
            // Stop 2
            CompositionColorGradientStop AnimatedGradientStop_1_2()
            {
                var result = _c.CreateColorGradientStop(1F, Color.FromArgb(0x00, 0x00, 0x00, 0x00));
                BindProperty(result, "Color", "ColorRGB(my.Opacity0,8,80,187)", "my", _linearGradientBrush_3);
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<256, 256>
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostAliceBlue_FFF3F7FD()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0xF3, 0xF7, 0xFD));
            }

            // - - Layer aggregator
            // -  Offset:<256, 256>
            // Stop 1
            CompositionColorGradientStop GradientStop_0p45_AlmostAliceBlue_FFF3F7FD()
            {
                return _c.CreateColorGradientStop(0.449999988F, Color.FromArgb(0xFF, 0xF3, 0xF7, 0xFD));
            }

            // - - Layer aggregator
            // -  Offset:<256, 256>
            // Stop 2
            CompositionColorGradientStop GradientStop_1_AlmostLavender_FFDEEAFA()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0xDE, 0xEA, 0xFA));
            }

            // - Layer aggregator
            // Offset:<256, 256>
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostAliceBlue_FFF3F7FD());
                colorStops.Add(GradientStop_0p45_AlmostAliceBlue_FFF3F7FD());
                colorStops.Add(GradientStop_1_AlmostLavender_FFDEEAFA());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-75.5169983F, -84.8710022F);
                result.EndPoint = new Vector2(57.6689987F, 145.813995F);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _linearGradientBrush_1 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 0F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_0());
                colorStops.Add(AnimatedGradientStop_0p45_0());
                colorStops.Add(AnimatedGradientStop_1_0());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(502.279999F, -993.299988F);
                result.EndPoint = new Vector2(527.60199F, -949.440002F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_0_to_0_0(), RootProgress());
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-2
            CompositionLinearGradientBrush LinearGradientBrush_2()
            {
                var result = _linearGradientBrush_2 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 255F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_1());
                colorStops.Add(AnimatedGradientStop_0p45_1());
                colorStops.Add(AnimatedGradientStop_1_1());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(502.388F, -986.229004F);
                result.EndPoint = new Vector2(527.710022F, -942.369995F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_255_to_255(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-3
            CompositionLinearGradientBrush LinearGradientBrush_3()
            {
                var result = _linearGradientBrush_3 = _c.CreateLinearGradientBrush();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Opacity0", 0F);
                var colorStops = result.ColorStops;
                colorStops.Add(AnimatedGradientStop_0_2());
                colorStops.Add(AnimatedGradientStop_0p45_2());
                colorStops.Add(AnimatedGradientStop_1_2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(502.651001F, -978.171997F);
                result.EndPoint = new Vector2(527.973022F, -934.312012F);
                StartProgressBoundAnimation(result.Properties, "Opacity0", Opacity0ScalarAnimation_0_to_0_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Offset:<256, 256>
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<256, 256>
                var geometry = PathGeometry_0();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 256F, 256F), LinearGradientBrush_0());;
                result.StrokeBrush = ColorBrush_AlmostLavender_FFE6EFFC();
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 6F;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.FillBrush = LinearGradientBrush_1();
                result.StrokeBrush = AnimatedColorBrush_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_0();
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.FillBrush = LinearGradientBrush_2();
                result.StrokeBrush = AnimatedColorBrush_AlmostRoyalBlue_FF0A5AD4_to_AlmostRoyalBlue_FF0A5AD4();
                result.StrokeMiterLimit = 5F;
                result.StartAnimation("Offset", OffsetVector2Animation_1());
                var controller = result.TryGetAnimationController("Offset");
                controller.Pause();
                BindProperty(controller, "Progress", "_.Progress*0.9473684", "_", _root);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.FillBrush = LinearGradientBrush_3();
                result.StrokeBrush = AnimatedColorBrush_TransparentAlmostRoyalBlue_000A5AD4_to_TransparentAlmostRoyalBlue_000A5AD4_1();
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 7.
                result.InsertKeyFrame(0.0194444451F, 255F, CubicBezierEasingFunction_0());
                // Frame 33.
                result.InsertKeyFrame(0.0916666687F, 255F, _cubicBezierEasingFunction_0);
                // Frame 40.
                result.InsertKeyFrame(0.111111112F, 0F, _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, 0F, _cubicBezierEasingFunction_0);
                // Frame 67.
                result.InsertKeyFrame(0.186111107F, 255F, _cubicBezierEasingFunction_0);
                // Frame 93.
                result.InsertKeyFrame(0.258333325F, 255F, _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(0.277777791F, 0F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, 0F, _cubicBezierEasingFunction_0);
                // Frame 127.
                result.InsertKeyFrame(0.352777779F, 255F, _cubicBezierEasingFunction_0);
                // Frame 153.
                result.InsertKeyFrame(0.425000012F, 255F, _cubicBezierEasingFunction_0);
                // Frame 160.
                result.InsertKeyFrame(0.444444448F, 0F, _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, 0F, _cubicBezierEasingFunction_0);
                // Frame 187.
                result.InsertKeyFrame(0.519444466F, 255F, _cubicBezierEasingFunction_0);
                // Frame 213.
                result.InsertKeyFrame(0.591666639F, 255F, _cubicBezierEasingFunction_0);
                // Frame 220.
                result.InsertKeyFrame(0.611111104F, 0F, _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, 0F, _cubicBezierEasingFunction_0);
                // Frame 247.
                result.InsertKeyFrame(0.686111093F, 255F, _cubicBezierEasingFunction_0);
                // Frame 273.
                result.InsertKeyFrame(0.758333325F, 255F, _cubicBezierEasingFunction_0);
                // Frame 280.
                result.InsertKeyFrame(0.777777791F, 0F, _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, 0F, _cubicBezierEasingFunction_0);
                // Frame 307.
                result.InsertKeyFrame(0.852777779F, 255F, _cubicBezierEasingFunction_0);
                // Frame 333.
                result.InsertKeyFrame(0.925000012F, 255F, _cubicBezierEasingFunction_0);
                // Frame 340.
                result.InsertKeyFrame(0.944444418F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.055555556F, 0F, _holdThenStepEasingFunction);
                // Frame 27.
                result.InsertKeyFrame(0.075000003F, 255F, _cubicBezierEasingFunction_0);
                // Frame 53.
                result.InsertKeyFrame(0.147222221F, 255F, _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, 0F, _cubicBezierEasingFunction_0);
                // Frame 80.
                result.InsertKeyFrame(0.222222224F, 0F, _cubicBezierEasingFunction_0);
                // Frame 87.
                result.InsertKeyFrame(0.24166666F, 255F, _cubicBezierEasingFunction_0);
                // Frame 113.
                result.InsertKeyFrame(0.313888878F, 255F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, 0F, _cubicBezierEasingFunction_0);
                // Frame 140.
                result.InsertKeyFrame(0.388888896F, 0F, _cubicBezierEasingFunction_0);
                // Frame 147.
                result.InsertKeyFrame(0.408333331F, 255F, _cubicBezierEasingFunction_0);
                // Frame 173.
                result.InsertKeyFrame(0.480555564F, 255F, _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, 0F, _cubicBezierEasingFunction_0);
                // Frame 200.
                result.InsertKeyFrame(0.555555582F, 0F, _cubicBezierEasingFunction_0);
                // Frame 207.
                result.InsertKeyFrame(0.574999988F, 255F, _cubicBezierEasingFunction_0);
                // Frame 233.
                result.InsertKeyFrame(0.647222221F, 255F, _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, 0F, _cubicBezierEasingFunction_0);
                // Frame 260.
                result.InsertKeyFrame(0.722222209F, 0F, _cubicBezierEasingFunction_0);
                // Frame 267.
                result.InsertKeyFrame(0.741666675F, 255F, _cubicBezierEasingFunction_0);
                // Frame 293.
                result.InsertKeyFrame(0.813888907F, 255F, _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, 0F, _cubicBezierEasingFunction_0);
                // Frame 320.
                result.InsertKeyFrame(0.888888896F, 0F, _cubicBezierEasingFunction_0);
                // Frame 327.
                result.InsertKeyFrame(0.908333361F, 255F, _cubicBezierEasingFunction_0);
                // Frame 353.
                result.InsertKeyFrame(0.980555534F, 255F, _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Opacity0
            ScalarKeyFrameAnimation Opacity0ScalarAnimation_255_to_255()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 255F, _cubicBezierEasingFunction_0);
                // Frame 13.
                result.InsertKeyFrame(0.0361111127F, 255F, _cubicBezierEasingFunction_0);
                // Frame 20.
                result.InsertKeyFrame(0.055555556F, 0F, _cubicBezierEasingFunction_0);
                // Frame 40.
                result.InsertKeyFrame(0.111111112F, 0F, _cubicBezierEasingFunction_0);
                // Frame 47.
                result.InsertKeyFrame(0.130555555F, 255F, _cubicBezierEasingFunction_0);
                // Frame 73.
                result.InsertKeyFrame(0.202777773F, 255F, _cubicBezierEasingFunction_0);
                // Frame 80.
                result.InsertKeyFrame(0.222222224F, 0F, _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(0.277777791F, 0F, _cubicBezierEasingFunction_0);
                // Frame 107.
                result.InsertKeyFrame(0.297222227F, 255F, _cubicBezierEasingFunction_0);
                // Frame 133.
                result.InsertKeyFrame(0.36944443F, 255F, _cubicBezierEasingFunction_0);
                // Frame 140.
                result.InsertKeyFrame(0.388888896F, 0F, _cubicBezierEasingFunction_0);
                // Frame 160.
                result.InsertKeyFrame(0.444444448F, 0F, _cubicBezierEasingFunction_0);
                // Frame 167.
                result.InsertKeyFrame(0.463888884F, 255F, _cubicBezierEasingFunction_0);
                // Frame 193.
                result.InsertKeyFrame(0.536111116F, 255F, _cubicBezierEasingFunction_0);
                // Frame 200.
                result.InsertKeyFrame(0.555555582F, 0F, _cubicBezierEasingFunction_0);
                // Frame 220.
                result.InsertKeyFrame(0.611111104F, 0F, _cubicBezierEasingFunction_0);
                // Frame 227.
                result.InsertKeyFrame(0.63055557F, 255F, _cubicBezierEasingFunction_0);
                // Frame 253.
                result.InsertKeyFrame(0.702777803F, 255F, _cubicBezierEasingFunction_0);
                // Frame 260.
                result.InsertKeyFrame(0.722222209F, 0F, _cubicBezierEasingFunction_0);
                // Frame 280.
                result.InsertKeyFrame(0.777777791F, 0F, _cubicBezierEasingFunction_0);
                // Frame 287.
                result.InsertKeyFrame(0.797222197F, 255F, _cubicBezierEasingFunction_0);
                // Frame 313.
                result.InsertKeyFrame(0.86944443F, 255F, _cubicBezierEasingFunction_0);
                // Frame 320.
                result.InsertKeyFrame(0.888888896F, 0F, _cubicBezierEasingFunction_0);
                // Frame 340.
                result.InsertKeyFrame(0.944444418F, 0F, _cubicBezierEasingFunction_0);
                // Frame 347.
                result.InsertKeyFrame(0.963888884F, 255F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(512F, 512F);
                var shapes = result.Shapes;
                // Offset:<256, 256>
                shapes.Add(SpriteShape_0());
                // ShapeGroup: raindrop-1
                shapes.Add(SpriteShape_1());
                // ShapeGroup: raindrop-2
                shapes.Add(SpriteShape_2());
                // ShapeGroup: raindrop-3
                shapes.Add(SpriteShape_3());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(200F, 330F), _holdThenStepEasingFunction);
                // Frame 40.
                result.InsertKeyFrame(0.111111112F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, new Vector2(200F, 330F), _cubicBezierEasingFunction_0);
                // Frame 100.
                result.InsertKeyFrame(0.277777791F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, new Vector2(200F, 330F), _cubicBezierEasingFunction_0);
                // Frame 160.
                result.InsertKeyFrame(0.444444448F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, new Vector2(200F, 330F), _cubicBezierEasingFunction_0);
                // Frame 220.
                result.InsertKeyFrame(0.611111104F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, new Vector2(200F, 330F), _cubicBezierEasingFunction_0);
                // Frame 280.
                result.InsertKeyFrame(0.777777791F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, new Vector2(200F, 330F), _cubicBezierEasingFunction_0);
                // Frame 340.
                result.InsertKeyFrame(0.944444418F, new Vector2(200F, 450F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-2
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(256F, 390F), _holdThenStepEasingFunction);
                // Frame 18.95.
                result.InsertKeyFrame(0.0526315793F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 37.89.
                result.InsertKeyFrame(0.105263159F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 75.79.
                result.InsertKeyFrame(0.210526317F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 94.74.
                result.InsertKeyFrame(0.263157904F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 132.63.
                result.InsertKeyFrame(0.368421048F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 151.58.
                result.InsertKeyFrame(0.421052635F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 189.47.
                result.InsertKeyFrame(0.526315808F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 208.42.
                result.InsertKeyFrame(0.578947365F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 246.32.
                result.InsertKeyFrame(0.684210539F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 265.26.
                result.InsertKeyFrame(0.736842096F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 303.16.
                result.InsertKeyFrame(0.842105269F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                // Frame 322.11.
                result.InsertKeyFrame(0.894736826F, new Vector2(256F, 330F), _cubicBezierEasingFunction_0);
                // Frame 340.11.
                result.InsertKeyFrame(0.944736838F, new Vector2(256F, 387.001007F), _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, new Vector2(256F, 450F), _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // ShapeGroup: raindrop-3
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(312F, 330F), _stepThenHoldEasingFunction);
                // Frame 20.
                result.InsertKeyFrame(0.055555556F, new Vector2(312F, 330F), _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.166666672F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                // Frame 80.
                result.InsertKeyFrame(0.222222224F, new Vector2(312F, 330F), _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(0.333333343F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                // Frame 140.
                result.InsertKeyFrame(0.388888896F, new Vector2(312F, 330F), _cubicBezierEasingFunction_0);
                // Frame 180.
                result.InsertKeyFrame(0.5F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                // Frame 200.
                result.InsertKeyFrame(0.555555582F, new Vector2(312F, 330F), _cubicBezierEasingFunction_0);
                // Frame 240.
                result.InsertKeyFrame(0.666666687F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                // Frame 260.
                result.InsertKeyFrame(0.722222209F, new Vector2(312F, 330F), _cubicBezierEasingFunction_0);
                // Frame 300.
                result.InsertKeyFrame(0.833333313F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                // Frame 320.
                result.InsertKeyFrame(0.888888896F, new Vector2(312F, 330F), _cubicBezierEasingFunction_0);
                // Frame 360.
                result.InsertKeyFrame(1F, new Vector2(312F, 450F), _cubicBezierEasingFunction_0);
                return result;
            }

            internal Rain_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(512F, 512F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
