//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.1+g046e9eb0a2
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile Water.json
//       
//       Input file:
//           Water.json (9044 bytes created 20:19+05:30 Aug 31 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// __________________________________________________________________________
// |       Object stats       | UAP v11 count | UAP v8 count | UAP v7 count |
// |__________________________|_______________|______________|______________|
// | All CompositionObjects   |           154 |          134 |           64 |
// |--------------------------+---------------+--------------+--------------|
// | Expression animators     |             9 |            6 |            3 |
// | KeyFrame animators       |             9 |            6 |            3 |
// | Reference parameters     |             9 |            6 |            3 |
// | Expression operations    |             0 |            0 |            0 |
// |--------------------------+---------------+--------------+--------------|
// | Animated brushes         |             - |            - |            - |
// | Animated gradient stops  |             - |            - |            - |
// | ExpressionAnimations     |             1 |            1 |            1 |
// | PathKeyFrameAnimations   |             3 |            - |            - |
// |--------------------------+---------------+--------------+--------------|
// | ContainerVisuals         |             7 |            7 |            1 |
// | ShapeVisuals             |             7 |            7 |            4 |
// |--------------------------+---------------+--------------+--------------|
// | ContainerShapes          |             - |            - |            - |
// | CompositionSpriteShapes  |             7 |            7 |            4 |
// |--------------------------+---------------+--------------+--------------|
// | Brushes                  |            14 |           14 |            4 |
// | Gradient stops           |             6 |            6 |            6 |
// | CompositionVisualSurface |             6 |            6 |            - |
// --------------------------------------------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;
using Windows.UI.Composition;

namespace Drizzle.UI.UWP.AnimatedVisuals
{
    // Name:        Liquid Load
    // Frame rate:  30 fps
    // Frame count: 120
    // Duration:    4000.0 mS
    sealed class Water
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 4.000 seconds.
        internal const long c_durationTicks = 40000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Water_AnimatedVisual_UAPv11.IsRuntimeCompatible())
            {
                var res = 
                    new Water_AnimatedVisual_UAPv11(
                        compositor
                        );
                    return res;
            }

            if (Water_AnimatedVisual_UAPv8.IsRuntimeCompatible())
            {
                var res = 
                    new Water_AnimatedVisual_UAPv8(
                        compositor
                        );
                    return res;
            }

            if (Water_AnimatedVisual_UAPv7.IsRuntimeCompatible())
            {
                var res = 
                    new Water_AnimatedVisual_UAPv7(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 120d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 30d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 120d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Water_AnimatedVisual_UAPv11 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 40000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Black;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPathGeometry _pathGeometry_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            ExpressionAnimation _rootProgressRemapped;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_0;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_1;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_2;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(476F, -3.67400002F));
                    builder.AddCubicBezier(new Vector2(476F, -3.67400002F), new Vector2(384.826996F, -69.9909973F), new Vector2(-13.2089996F, -27.9470005F));
                    builder.AddCubicBezier(new Vector2(-270.065002F, -0.815999985F), new Vector2(-427.970001F, 139.442993F), new Vector2(-427.970001F, 139.442993F));
                    builder.AddCubicBezier(new Vector2(-427.970001F, 139.442993F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(476F, -3.67400002F), new Vector2(476F, -3.67400002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 4
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(487.79599F, -79.4339981F));
                    builder.AddCubicBezier(new Vector2(487.79599F, -79.4339981F), new Vector2(213.643997F, -123.776001F), new Vector2(55.4300003F, -80.8170013F));
                    builder.AddCubicBezier(new Vector2(-112.230003F, -35.2939987F), new Vector2(-418.092987F, 126.473999F), new Vector2(-418.092987F, 126.473999F));
                    builder.AddCubicBezier(new Vector2(-418.092987F, 126.473999F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(487.79599F, -79.4339981F), new Vector2(487.79599F, -79.4339981F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 4
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(453.552002F, -221.998001F));
                    builder.AddCubicBezier(new Vector2(453.552002F, -221.998001F), new Vector2(256.605988F, -302.571014F), new Vector2(13.8590002F, -33.6899986F));
                    builder.AddCubicBezier(new Vector2(-136.737F, 133.119995F), new Vector2(-460.591003F, 95.8209991F), new Vector2(-460.591003F, 95.8209991F));
                    builder.AddCubicBezier(new Vector2(-460.591003F, 95.8209991F), new Vector2(-480.028015F, 449.863007F), new Vector2(4.01900005F, 426.825989F));
                    builder.AddCubicBezier(new Vector2(546.58197F, 401.003998F), new Vector2(453.552002F, -221.998001F), new Vector2(453.552002F, -221.998001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 4
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(487.131989F, -89.8440018F));
                    builder.AddCubicBezier(new Vector2(487.131989F, -89.8440018F), new Vector2(222.942001F, -43.0940018F), new Vector2(-28.8509998F, -60.9269981F));
                    builder.AddCubicBezier(new Vector2(-174.992004F, -71.2770004F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(487.131989F, -89.8440018F), new Vector2(487.131989F, -89.8440018F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, -405F));
                    builder.AddCubicBezier(new Vector2(-222.884003F, -405F), new Vector2(-406F, -221.884003F), new Vector2(-406F, 4F));
                    builder.AddCubicBezier(new Vector2(-406F, 229.884003F), new Vector2(-222.884003F, 413F), new Vector2(3F, 413F));
                    builder.AddCubicBezier(new Vector2(228.884003F, 413F), new Vector2(412F, 229.884003F), new Vector2(412F, 4F));
                    builder.AddCubicBezier(new Vector2(412F, -221.884003F), new Vector2(228.884003F, -405F), new Vector2(3F, -405F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(472F, -192F));
                    builder.AddCubicBezier(new Vector2(472F, -192F), new Vector2(292.119995F, -291.934998F), new Vector2(136F, -63F));
                    builder.AddCubicBezier(new Vector2(-47.9500008F, 206.744995F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(472F, -192F), new Vector2(472F, -192F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 3
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(481.483002F, -152.171997F));
                    builder.AddCubicBezier(new Vector2(481.483002F, -152.171997F), new Vector2(284.016998F, 11.6099997F), new Vector2(16.5149994F, -41.6629982F));
                    builder.AddCubicBezier(new Vector2(-265.153992F, -119.536003F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(481.483002F, -152.171997F), new Vector2(481.483002F, -152.171997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 3
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(492F, -108F));
                    builder.AddCubicBezier(new Vector2(492F, -108F), new Vector2(124F, 138F), new Vector2(-162F, 27F));
                    builder.AddCubicBezier(new Vector2(-407.830994F, -68.4100037F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(492F, -108F), new Vector2(492F, -108F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 3
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(482F, -150F));
                    builder.AddCubicBezier(new Vector2(482F, -150F), new Vector2(261F, -169F), new Vector2(-13F, -18F));
                    builder.AddCubicBezier(new Vector2(-233F, 120F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(482F, -150F), new Vector2(482F, -150F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(492F, -108F));
                    builder.AddCubicBezier(new Vector2(492F, -108F), new Vector2(276F, 126F), new Vector2(-114F, 36F));
                    builder.AddCubicBezier(new Vector2(-404.100006F, -30.9459991F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(492F, -108F), new Vector2(492F, -108F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 2
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(486.309998F, -147.828003F));
                    builder.AddCubicBezier(new Vector2(486.309998F, -147.828003F), new Vector2(242F, -158F), new Vector2(-21.0669994F, -8.09599972F));
                    builder.AddCubicBezier(new Vector2(-247F, 103F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(486.309998F, -147.828003F), new Vector2(486.309998F, -147.828003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 2
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(526.265991F, -144.927002F));
                    builder.AddCubicBezier(new Vector2(526.265991F, -144.927002F), new Vector2(259.265991F, -340.927002F), new Vector2(128.266006F, -9.92700005F));
                    builder.AddCubicBezier(new Vector2(18.7040005F, 266.906006F), new Vector2(-411.734009F, 81.072998F), new Vector2(-411.734009F, 81.072998F));
                    builder.AddCubicBezier(new Vector2(-411.734009F, 81.072998F), new Vector2(-401.734009F, 529.072998F), new Vector2(82.2659988F, 505.072998F));
                    builder.AddCubicBezier(new Vector2(566.265991F, 481.072998F), new Vector2(526.265991F, -144.927002F), new Vector2(526.265991F, -144.927002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Shape tree root for layer: Shape Layer 2
            // - - - ShapeGroup: Shape 1
            // - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(486F, -150F));
                    builder.AddCubicBezier(new Vector2(486F, -150F), new Vector2(259F, 25F), new Vector2(-16F, -10.5F));
                    builder.AddCubicBezier(new Vector2(-232F, -39F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(486F, -150F), new Vector2(486F, -150F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            CompositionColorBrush ColorBrush_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_411()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(411F, 411F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSkyBlue_FF91CFEA());
                colorStops.Add(GradientStop_1_AlmostSkyBlue_FF91CFEA());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(20.7310009F, 114.084999F);
                result.EndPoint = new Vector2(25.0209999F, -51.5419998F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF5EBAE2());
                colorStops.Add(GradientStop_1_AlmostMediumTurquoise_FF5EBAE2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-57.0219994F, 84.5490036F);
                result.EndPoint = new Vector2(-82.3290024F, -166.397003F);
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_00());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_05());
                return result;
            }

            CompositionPath Path_2()
            {
                var result = _path_2 = new CompositionPath(Geometry_09());
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), RootProgressRemapped());
                return result;
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgressRemapped);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_3()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_2(), _rootProgressRemapped);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionRadialGradientBrush RadialGradientBrush()
            {
                var result = _c.CreateRadialGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDodgerBlue_FF2AA2D6());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF2AA2D6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.EllipseCenter = new Vector2(125.292F, 381.852997F);
                result.EllipseRadius = new Vector2(730.863953F, 730.863953F);
                return result;
            }

            // Opacity for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<541.87506, 545.80365>, Rotation:-0.003139952091870544 degrees,
                // Scale:<0.99405, 0.99405>
                var geometry = Ellipse_411();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.994050026F, 0F, 0F, 0.994050026F, 541.875061F, 545.80365F), ColorBrush_AlmostSkyBlue_FF91CFEA());;
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_0();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), _rootProgressRemapped);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = ColorBrush_Black();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_0, _rootProgressRemapped);
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_1();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgressRemapped);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = _colorBrush_Black;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgressRemapped);
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = RadialGradientBrush();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_2(), _rootProgressRemapped);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_6()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = _colorBrush_Black;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_2, _rootProgressRemapped);
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 4
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 3
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 2
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: Shape Layer 1
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgressRemapped()
            {
                var result = _rootProgressRemapped = _c.CreateExpressionAnimation("_.Progress*0.9999999");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), StepThenHoldEasingFunction());
                // Frame 2.
                result.InsertKeyFrame(0.0166666657F, _path_0, HoldThenStepEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.249999985F, new CompositionPath(Geometry_01()), CubicBezierEasingFunction_0());
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, new CompositionPath(Geometry_02()), CubicBezierEasingFunction_1());
                // Frame 90.
                result.InsertKeyFrame(0.74999994F, new CompositionPath(Geometry_03()), CubicBezierEasingFunction_2());
                // Frame 120.
                result.InsertKeyFrame(1F, _path_0, CubicBezierEasingFunction_3());
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), _stepThenHoldEasingFunction);
                // Frame 2.
                result.InsertKeyFrame(0.0166666657F, _path_1, _holdThenStepEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.249999985F, new CompositionPath(Geometry_06()), _cubicBezierEasingFunction_2);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, new CompositionPath(Geometry_07()), _cubicBezierEasingFunction_3);
                // Frame 90.
                result.InsertKeyFrame(0.74999994F, new CompositionPath(Geometry_08()), _cubicBezierEasingFunction_2);
                // Frame 120.
                result.InsertKeyFrame(1F, _path_1, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), _stepThenHoldEasingFunction);
                // Frame 2.
                result.InsertKeyFrame(0.0166666657F, _path_2, _holdThenStepEasingFunction);
                // Frame 30.
                result.InsertKeyFrame(0.249999985F, new CompositionPath(Geometry_10()), _cubicBezierEasingFunction_0);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, new CompositionPath(Geometry_11()), _cubicBezierEasingFunction_0);
                // Frame 90.
                result.InsertKeyFrame(0.74999994F, new CompositionPath(Geometry_12()), _cubicBezierEasingFunction_2);
                // Frame 120.
                result.InsertKeyFrame(1F, _path_2, _cubicBezierEasingFunction_0);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_0 = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 30F, _cubicBezierEasingFunction_2);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_2);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_1 = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 23F, _cubicBezierEasingFunction_2);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_2);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_2()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_2 = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 33F, _cubicBezierEasingFunction_2);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_2);
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Opacity = 0.100000001F;
                result.Size = new Vector2(1080F, 1080F);
                // Scale:0.99405,0.99405, Offset:<521, 513>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_4());
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_5());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_6());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_2();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            internal Water_AnimatedVisual_UAPv11(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1080F, 1080F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 11);
            }
        }

        sealed class Water_AnimatedVisual_UAPv8 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 40000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_Black;
            CompositionPathGeometry _pathGeometry_1;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgressRemapped;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_0;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_1;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_2;
            StepEasingFunction _holdThenStepEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 4
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(476F, -3.67400002F));
                    builder.AddCubicBezier(new Vector2(476F, -3.67400002F), new Vector2(384.826996F, -69.9909973F), new Vector2(-13.2089996F, -27.9470005F));
                    builder.AddCubicBezier(new Vector2(-270.065002F, -0.815999985F), new Vector2(-427.970001F, 139.442993F), new Vector2(-427.970001F, 139.442993F));
                    builder.AddCubicBezier(new Vector2(-427.970001F, 139.442993F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(476F, -3.67400002F), new Vector2(476F, -3.67400002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(3F, -405F));
                    builder.AddCubicBezier(new Vector2(-222.884003F, -405F), new Vector2(-406F, -221.884003F), new Vector2(-406F, 4F));
                    builder.AddCubicBezier(new Vector2(-406F, 229.884003F), new Vector2(-222.884003F, 413F), new Vector2(3F, 413F));
                    builder.AddCubicBezier(new Vector2(228.884003F, 413F), new Vector2(412F, 229.884003F), new Vector2(412F, 4F));
                    builder.AddCubicBezier(new Vector2(412F, -221.884003F), new Vector2(228.884003F, -405F), new Vector2(3F, -405F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 3
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(472F, -192F));
                    builder.AddCubicBezier(new Vector2(472F, -192F), new Vector2(292.119995F, -291.934998F), new Vector2(136F, -63F));
                    builder.AddCubicBezier(new Vector2(-47.9500008F, 206.744995F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(472F, -192F), new Vector2(472F, -192F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 2
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_3()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(492F, -108F));
                    builder.AddCubicBezier(new Vector2(492F, -108F), new Vector2(276F, 126F), new Vector2(-114F, 36F));
                    builder.AddCubicBezier(new Vector2(-404.100006F, -30.9459991F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(492F, -108F), new Vector2(492F, -108F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            CompositionColorBrush ColorBrush_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_411()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(411F, 411F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSkyBlue_FF91CFEA());
                colorStops.Add(GradientStop_1_AlmostSkyBlue_FF91CFEA());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(20.7310009F, 114.084999F);
                result.EndPoint = new Vector2(25.0209999F, -51.5419998F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF5EBAE2());
                colorStops.Add(GradientStop_1_AlmostMediumTurquoise_FF5EBAE2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-57.0219994F, 84.5490036F);
                result.EndPoint = new Vector2(-82.3290024F, -166.397003F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            CompositionPathGeometry PathGeometry_1()
            {
                return _pathGeometry_1 = _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_3()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_3()));
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionRadialGradientBrush RadialGradientBrush()
            {
                var result = _c.CreateRadialGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDodgerBlue_FF2AA2D6());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF2AA2D6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.EllipseCenter = new Vector2(125.292F, 381.852997F);
                result.EllipseRadius = new Vector2(730.863953F, 730.863953F);
                return result;
            }

            // Opacity for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<541.87506, 545.80365>, Rotation:-0.003139952091870544 degrees,
                // Scale:<0.99405, 0.99405>
                var geometry = Ellipse_411();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.994050026F, 0F, 0F, 0.994050026F, 541.875061F, 545.80365F), ColorBrush_AlmostSkyBlue_FF91CFEA());;
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_0();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), RootProgressRemapped());
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = ColorBrush_Black();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_0, _rootProgressRemapped);
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_1();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgressRemapped);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_4()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = _colorBrush_Black;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_1, _rootProgressRemapped);
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            // Path 1
            CompositionSpriteShape SpriteShape_5()
            {
                var result = _c.CreateSpriteShape(PathGeometry_3());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = RadialGradientBrush();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_2(), _rootProgressRemapped);
                return result;
            }

            // Masks
            CompositionSpriteShape SpriteShape_6()
            {
                var result = _c.CreateSpriteShape(_pathGeometry_1);
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = _colorBrush_Black;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_2, _rootProgressRemapped);
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(1080F, 1080F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 4
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 3
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 2
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: Shape Layer 1
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgressRemapped()
            {
                var result = _rootProgressRemapped = _c.CreateExpressionAnimation("_.Progress*0.9999999");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_0 = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 30F, CubicBezierEasingFunction_0());
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_1 = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 23F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_2()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_2 = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 33F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Opacity = 0.100000001F;
                result.Size = new Vector2(1080F, 1080F);
                // Scale:0.99405,0.99405, Offset:<521, 513>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_4());
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_5());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Shapes.Add(SpriteShape_6());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1080F, 1080F);
                result.Brush = EffectBrush_2();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            internal Water_AnimatedVisual_UAPv8(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1080F, 1080F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 8);
            }
        }

        sealed class Water_AnimatedVisual_UAPv7 : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 40000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            ExpressionAnimation _rootProgressRemapped;
            StepEasingFunction _holdThenStepEasingFunction;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 4
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_0()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(476F, -3.67400002F));
                    builder.AddCubicBezier(new Vector2(476F, -3.67400002F), new Vector2(384.826996F, -69.9909973F), new Vector2(-13.2089996F, -27.9470005F));
                    builder.AddCubicBezier(new Vector2(-270.065002F, -0.815999985F), new Vector2(-427.970001F, 139.442993F), new Vector2(-427.970001F, 139.442993F));
                    builder.AddCubicBezier(new Vector2(-427.970001F, 139.442993F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(476F, -3.67400002F), new Vector2(476F, -3.67400002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 3
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_1()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(472F, -192F));
                    builder.AddCubicBezier(new Vector2(472F, -192F), new Vector2(292.119995F, -291.934998F), new Vector2(136F, -63F));
                    builder.AddCubicBezier(new Vector2(-47.9500008F, 206.744995F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(472F, -192F), new Vector2(472F, -192F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Shape Layer 2
            // - - ShapeGroup: Shape 1
            CanvasGeometry Geometry_2()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(492F, -108F));
                    builder.AddCubicBezier(new Vector2(492F, -108F), new Vector2(276F, 126F), new Vector2(-114F, 36F));
                    builder.AddCubicBezier(new Vector2(-404.100006F, -30.9459991F), new Vector2(-458F, 34F), new Vector2(-458F, 34F));
                    builder.AddCubicBezier(new Vector2(-458F, 34F), new Vector2(-448F, 482F), new Vector2(36F, 458F));
                    builder.AddCubicBezier(new Vector2(520F, 434F), new Vector2(492F, -108F), new Vector2(492F, -108F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            CompositionColorBrush ColorBrush_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 0
            CompositionColorGradientStop GradientStop_0_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(0F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            // - - Shape tree root for layer: Shape Layer 2
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostDodgerBlue_FF2AA2D6()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x2A, 0xA2, 0xD6));
            }

            // - - Shape tree root for layer: Shape Layer 3
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostMediumTurquoise_FF5EBAE2()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x5E, 0xBA, 0xE2));
            }

            // - - Shape tree root for layer: Shape Layer 4
            // - ShapeGroup: Shape 1
            // Stop 1
            CompositionColorGradientStop GradientStop_1_AlmostSkyBlue_FF91CFEA()
            {
                return _c.CreateColorGradientStop(1F, Color.FromArgb(0xFF, 0x91, 0xCF, 0xEA));
            }

            // - Opacity for layer: Shape Layer 1
            // Scale:0.99405,0.99405, Offset:<521, 513>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_411()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(411F, 411F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_0()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostSkyBlue_FF91CFEA());
                colorStops.Add(GradientStop_1_AlmostSkyBlue_FF91CFEA());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(20.7310009F, 114.084999F);
                result.EndPoint = new Vector2(25.0209999F, -51.5419998F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_1()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostMediumTurquoise_FF5EBAE2());
                colorStops.Add(GradientStop_1_AlmostMediumTurquoise_FF5EBAE2());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(-57.0219994F, 84.5490036F);
                result.EndPoint = new Vector2(-82.3290024F, -166.397003F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionLinearGradientBrush LinearGradientBrush_2()
            {
                var result = _c.CreateLinearGradientBrush();
                var colorStops = result.ColorStops;
                colorStops.Add(GradientStop_0_AlmostDodgerBlue_FF2AA2D6());
                colorStops.Add(GradientStop_1_AlmostDodgerBlue_FF2AA2D6());
                result.MappingMode = CompositionMappingMode.Absolute;
                result.StartPoint = new Vector2(125.292F, 381.852997F);
                result.EndPoint = new Vector2(-79.1969986F, -319.821014F);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_0()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_0()));
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_1()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_1()));
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            CompositionPathGeometry PathGeometry_2()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_2()));
            }

            // Opacity for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_0()
            {
                // Offset:<541.87506, 545.80365>, Rotation:-0.003139952091870544 degrees,
                // Scale:<0.99405, 0.99405>
                var geometry = Ellipse_411();
                var result = CreateSpriteShape(geometry, new Matrix3x2(0.994050026F, 0F, 0F, 0.994050026F, 541.875061F, 545.80365F), ColorBrush_AlmostSkyBlue_FF91CFEA());;
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            // Path 1
            CompositionSpriteShape SpriteShape_1()
            {
                var result = _c.CreateSpriteShape(PathGeometry_0());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_0();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), RootProgressRemapped());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            // Path 1
            CompositionSpriteShape SpriteShape_2()
            {
                var result = _c.CreateSpriteShape(PathGeometry_1());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_1();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgressRemapped);
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            // Path 1
            CompositionSpriteShape SpriteShape_3()
            {
                var result = _c.CreateSpriteShape(PathGeometry_2());
                result.Offset = new Vector2(540F, 540F);
                result.FillBrush = LinearGradientBrush_2();
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_2(), _rootProgressRemapped);
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Opacity for layer: Shape Layer 1
                children.InsertAtTop(ShapeVisual_0());
                // Shape tree root for layer: Shape Layer 4
                children.InsertAtTop(ShapeVisual_1());
                // Shape tree root for layer: Shape Layer 3
                children.InsertAtTop(ShapeVisual_2());
                // Shape tree root for layer: Shape Layer 2
                children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            ExpressionAnimation RootProgressRemapped()
            {
                var result = _rootProgressRemapped = _c.CreateExpressionAnimation("_.Progress*0.9999999");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 4
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 30F, CubicBezierEasingFunction_0());
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 3
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 23F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Shape tree root for layer: Shape Layer 2
            // ShapeGroup: Shape 1
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_2()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.49999997F, 33F, _cubicBezierEasingFunction_0);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Opacity = 0.100000001F;
                result.Size = new Vector2(1080F, 1080F);
                // Scale:0.99405,0.99405, Offset:<521, 513>
                result.Shapes.Add(SpriteShape_0());
                return result;
            }

            // Shape tree root for layer: Shape Layer 4
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_1());
                return result;
            }

            // Shape tree root for layer: Shape Layer 3
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_2());
                return result;
            }

            // Shape tree root for layer: Shape Layer 2
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1080F, 1080F);
                // ShapeGroup: Shape 1
                result.Shapes.Add(SpriteShape_3());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            internal Water_AnimatedVisual_UAPv7(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1080F, 1080F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
